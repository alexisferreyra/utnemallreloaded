//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.1434
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------


using UtnEmall.Client.EntityModel;
using Microsoft.Tools.ServiceModel;
namespace UtnEmall.Client.ServiceAccessLayer
{
    /// <summary>
    /// Proxy for SessionManager
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ISessionManager
    {

        CustomerEntity GetCustomerFromSession(string sessionId);

        bool UserLogOff(string sessionId);

        string ValidateCustomer(string userName, string passwordHash);

        string ValidateUser(string userName, string passwordHash);
    }
        
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "GetCustomerFromSession", Namespace = "http://tempuri.org/")]
    public partial class GetCustomerFromSessionRequest
    {

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionId;

        public GetCustomerFromSessionRequest()
        {
        }

        public GetCustomerFromSessionRequest(string sessionId)
        {
            this.sessionId = sessionId;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "GetCustomerFromSessionResponse", Namespace = "http://tempuri.org/")]
    public partial class GetCustomerFromSessionResponse
    {

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 0)]
        public CustomerEntity GetCustomerFromSessionResult;

        public GetCustomerFromSessionResponse()
        {
        }

        public GetCustomerFromSessionResponse(CustomerEntity GetCustomerFromSessionResult)
        {
            this.GetCustomerFromSessionResult = GetCustomerFromSessionResult;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "UserLogOff", Namespace = "http://tempuri.org/")]
    public partial class UserLogOffRequest
    {

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionId;

        public UserLogOffRequest()
        {
        }

        public UserLogOffRequest(string sessionId)
        {
            this.sessionId = sessionId;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "UserLogOffResponse", Namespace = "http://tempuri.org/")]
    public partial class UserLogOffResponse
    {

        [System.Xml.Serialization.XmlElementAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool UserLogOffResult;

        public UserLogOffResponse()
        {
        }

        public UserLogOffResponse(bool UserLogOffResult)
        {
            this.UserLogOffResult = UserLogOffResult;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "ValidateCustomer", Namespace = "http://tempuri.org/")]
    public partial class ValidateCustomerRequest
    {

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 0)]
        public string userName;

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 1)]
        public string passwordHash;

        public ValidateCustomerRequest()
        {
        }

        public ValidateCustomerRequest(string userName, string passwordHash)
        {
            this.userName = userName;
            this.passwordHash = passwordHash;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "ValidateCustomerResponse", Namespace = "http://tempuri.org/")]
    public partial class ValidateCustomerResponse
    {

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 0)]
        public string ValidateCustomerResult;

        public ValidateCustomerResponse()
        {
        }

        public ValidateCustomerResponse(string ValidateCustomerResult)
        {
            this.ValidateCustomerResult = ValidateCustomerResult;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "ValidateUser", Namespace = "http://tempuri.org/")]
    public partial class ValidateUserRequest
    {

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 0)]
        public string userName;

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 1)]
        public string passwordHash;

        public ValidateUserRequest()
        {
        }

        public ValidateUserRequest(string userName, string passwordHash)
        {
            this.userName = userName;
            this.passwordHash = passwordHash;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "ValidateUserResponse", Namespace = "http://tempuri.org/")]
    public partial class ValidateUserResponse
    {

        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Namespace = "http://tempuri.org/", Order = 0)]
        public string ValidateUserResult;

        public ValidateUserResponse()
        {
        }

        public ValidateUserResponse(string ValidateUserResult)
        {
            this.ValidateUserResult = ValidateUserResult;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SessionManagerClient : Microsoft.Tools.ServiceModel.CFClientBase<ISessionManager>, ISessionManager
    {

        public static System.ServiceModel.EndpointAddress EndpointAddress = new System.ServiceModel.EndpointAddress("http://notebookalexis:8081/SessionManager");

        public SessionManagerClient() :
            this(CreateDefaultBinding(), EndpointAddress)
        {
        }

        public SessionManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
            addProtectionRequirements(binding);
        }

        private GetCustomerFromSessionResponse GetCustomerFromSession(GetCustomerFromSessionRequest request)
        {
            CFInvokeInfo info = new CFInvokeInfo();
            info.Action = "http://tempuri.org/ISessionManager/GetCustomerFromSession";
            info.RequestIsWrapped = true;
            info.ReplyAction = "http://tempuri.org/ISessionManager/GetCustomerFromSessionResponse";
            info.ResponseIsWrapped = true;
            GetCustomerFromSessionResponse retVal = base.Invoke<GetCustomerFromSessionRequest, GetCustomerFromSessionResponse>(info, request);
            return retVal;
        }

        public CustomerEntity GetCustomerFromSession(string sessionId)
        {
            GetCustomerFromSessionRequest request = new GetCustomerFromSessionRequest(sessionId);
            GetCustomerFromSessionResponse response = this.GetCustomerFromSession(request);
            return response.GetCustomerFromSessionResult;
        }

        private UserLogOffResponse UserLogOff(UserLogOffRequest request)
        {
            CFInvokeInfo info = new CFInvokeInfo();
            info.Action = "http://tempuri.org/ISessionManager/UserLogOff";
            info.RequestIsWrapped = true;
            info.ReplyAction = "http://tempuri.org/ISessionManager/UserLogOffResponse";
            info.ResponseIsWrapped = true;
            UserLogOffResponse retVal = base.Invoke<UserLogOffRequest, UserLogOffResponse>(info, request);
            return retVal;
        }

        public bool UserLogOff(string sessionId)
        {
            UserLogOffRequest request = new UserLogOffRequest(sessionId);
            UserLogOffResponse response = this.UserLogOff(request);
            return response.UserLogOffResult;
        }

        private ValidateCustomerResponse ValidateCustomer(ValidateCustomerRequest request)
        {
            CFInvokeInfo info = new CFInvokeInfo();
            info.Action = "http://tempuri.org/ISessionManager/ValidateCustomer";
            info.RequestIsWrapped = true;
            info.ReplyAction = "http://tempuri.org/ISessionManager/ValidateCustomerResponse";
            info.ResponseIsWrapped = true;
            ValidateCustomerResponse retVal = base.Invoke<ValidateCustomerRequest, ValidateCustomerResponse>(info, request);
            return retVal;
        }

        public string ValidateCustomer(string userName, string passwordHash)
        {
            ValidateCustomerRequest request = new ValidateCustomerRequest(userName, passwordHash);
            ValidateCustomerResponse response = this.ValidateCustomer(request);
            return response.ValidateCustomerResult;
        }

        private ValidateUserResponse ValidateUser(ValidateUserRequest request)
        {
            CFInvokeInfo info = new CFInvokeInfo();
            info.Action = "http://tempuri.org/ISessionManager/ValidateUser";
            info.RequestIsWrapped = true;
            info.ReplyAction = "http://tempuri.org/ISessionManager/ValidateUserResponse";
            info.ResponseIsWrapped = true;
            ValidateUserResponse retVal = base.Invoke<ValidateUserRequest, ValidateUserResponse>(info, request);
            return retVal;
        }

        public string ValidateUser(string userName, string passwordHash)
        {
            ValidateUserRequest request = new ValidateUserRequest(userName, passwordHash);
            ValidateUserResponse response = this.ValidateUser(request);
            return response.ValidateUserResult;
        }

        public static System.ServiceModel.Channels.Binding CreateDefaultBinding()
        {
            System.ServiceModel.Channels.CustomBinding binding = new System.ServiceModel.Channels.CustomBinding();
            binding.Elements.Add(new System.ServiceModel.Channels.TextMessageEncodingBindingElement(System.ServiceModel.Channels.MessageVersion.Soap11, System.Text.Encoding.UTF8));
            binding.Elements.Add(new System.ServiceModel.Channels.HttpTransportBindingElement());
            return binding;
        }

        private void addProtectionRequirements(System.ServiceModel.Channels.Binding binding)
        {
            if ((IsSecureMessageBinding(binding) == false))
            {
                return;
            }
            System.ServiceModel.Security.ChannelProtectionRequirements cpr = new System.ServiceModel.Security.ChannelProtectionRequirements();
            ApplyProtection("http://tempuri.org/ISessionManager/GetCustomerFromSession", cpr.IncomingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ISessionManager/GetCustomerFromSession", cpr.IncomingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/ISessionManager/UserLogOff", cpr.IncomingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ISessionManager/UserLogOff", cpr.IncomingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/ISessionManager/ValidateCustomer", cpr.IncomingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ISessionManager/ValidateCustomer", cpr.IncomingEncryptionParts, true);
            ApplyProtection("http://tempuri.org/ISessionManager/ValidateUser", cpr.IncomingSignatureParts, true);
            ApplyProtection("http://tempuri.org/ISessionManager/ValidateUser", cpr.IncomingEncryptionParts, true);
            if ((binding.MessageVersion.Addressing == System.ServiceModel.Channels.AddressingVersion.None))
            {
                ApplyProtection("*", cpr.OutgoingSignatureParts, true);
                ApplyProtection("*", cpr.OutgoingEncryptionParts, true);
            }
            else
            {
                ApplyProtection("http://tempuri.org/ISessionManager/GetCustomerFromSessionResponse", cpr.OutgoingSignatureParts, true);
                ApplyProtection("http://tempuri.org/ISessionManager/GetCustomerFromSessionResponse", cpr.OutgoingEncryptionParts, true);
                ApplyProtection("http://tempuri.org/ISessionManager/UserLogOffResponse", cpr.OutgoingSignatureParts, true);
                ApplyProtection("http://tempuri.org/ISessionManager/UserLogOffResponse", cpr.OutgoingEncryptionParts, true);
                ApplyProtection("http://tempuri.org/ISessionManager/ValidateCustomerResponse", cpr.OutgoingSignatureParts, true);
                ApplyProtection("http://tempuri.org/ISessionManager/ValidateCustomerResponse", cpr.OutgoingEncryptionParts, true);
                ApplyProtection("http://tempuri.org/ISessionManager/ValidateUserResponse", cpr.OutgoingSignatureParts, true);
                ApplyProtection("http://tempuri.org/ISessionManager/ValidateUserResponse", cpr.OutgoingEncryptionParts, true);
            }
            this.Parameters.Add(cpr);
        }
    }

}