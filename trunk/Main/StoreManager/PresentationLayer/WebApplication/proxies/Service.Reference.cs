//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.ServiceReferenceService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceService.IService")]
    public interface IService {

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Save", ReplyAction="http://tempuri.org/IService/SaveResponse")]
        UtnEmall.Server.EntityModel.ServiceEntity Save(UtnEmall.Server.EntityModel.ServiceEntity serviceEntity, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Delete", ReplyAction="http://tempuri.org/IService/DeleteResponse")]
        UtnEmall.Server.EntityModel.ServiceEntity Delete(UtnEmall.Server.EntityModel.ServiceEntity serviceEntity, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetService", ReplyAction="http://tempuri.org/IService/GetServiceResponse")]
        UtnEmall.Server.EntityModel.ServiceEntity GetService(int id, bool loadRelation, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllService", ReplyAction="http://tempuri.org/IService/GetAllServiceResponse")]
        System.Collections.Generic.List<UtnEmall.Server.EntityModel.ServiceEntity> GetAllService(bool loadRelation, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetServiceWhere", ReplyAction="http://tempuri.org/IService/GetServiceWhereResponse")]
        System.Collections.Generic.List<UtnEmall.Server.EntityModel.ServiceEntity> GetServiceWhere(string propertyName, object expValue, bool loadRelation, UtnEmall.Server.Base.OperatorType operatorType, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetServiceWhereEqual", ReplyAction="http://tempuri.org/IService/GetServiceWhereEqualResponse")]
        System.Collections.Generic.List<UtnEmall.Server.EntityModel.ServiceEntity> GetServiceWhereEqual(string propertyName, object expValue, bool loadRelation, string session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Validate", ReplyAction="http://tempuri.org/IService/ValidateResponse")]
        bool Validate(UtnEmall.Server.EntityModel.ServiceEntity service);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IServiceChannel : WebApplication.ServiceReferenceService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WebApplication.ServiceReferenceService.IService>, WebApplication.ServiceReferenceService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UtnEmall.Server.EntityModel.ServiceEntity Save(UtnEmall.Server.EntityModel.ServiceEntity serviceEntity, string session) {
            return base.Channel.Save(serviceEntity, session);
        }
        
        public UtnEmall.Server.EntityModel.ServiceEntity Delete(UtnEmall.Server.EntityModel.ServiceEntity serviceEntity, string session) {
            return base.Channel.Delete(serviceEntity, session);
        }
        
        public UtnEmall.Server.EntityModel.ServiceEntity GetService(int id, bool loadRelation, string session) {
            return base.Channel.GetService(id, loadRelation, session);
        }
        
        public System.Collections.Generic.List<UtnEmall.Server.EntityModel.ServiceEntity> GetAllService(bool loadRelation, string session) {
            return base.Channel.GetAllService(loadRelation, session);
        }
        
        public System.Collections.Generic.List<UtnEmall.Server.EntityModel.ServiceEntity> GetServiceWhere(string propertyName, object expValue, bool loadRelation, UtnEmall.Server.Base.OperatorType operatorType, string session) {
            return base.Channel.GetServiceWhere(propertyName, expValue, loadRelation, operatorType, session);
        }
        
        public System.Collections.Generic.List<UtnEmall.Server.EntityModel.ServiceEntity> GetServiceWhereEqual(string propertyName, object expValue, bool loadRelation, string session) {
            return base.Channel.GetServiceWhereEqual(propertyName, expValue, loadRelation, session);
        }
        
        public bool Validate(UtnEmall.Server.EntityModel.ServiceEntity service) {
            return base.Channel.Validate(service);
        }
    }
}
