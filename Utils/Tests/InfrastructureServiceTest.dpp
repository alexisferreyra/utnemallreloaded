import "System", "platform=DotNET", "ns=DotNET", "assembly=mscorlib";
import "System", "platform=DotNET", "ns=DotNET", "assembly=System.Data";
import "System", "platform=DotNET", "ns=DotNET", "assemblyfilename=C:\\Program Files\\Reference Assemblies\\Microsoft\\Framework\\v3.0\\System.ServiceModel.dll";
import "System", "platform=DotNET", "ns=DotNET", "assemblyfilename=C:\\Program Files\\Reference Assemblies\\Microsoft\\Framework\\v3.0\\System.Runtime.Serialization.dll";
//import "Janus", "platform=DotNET", "ns=DotNET", "assemblyfilename=C:\\Users\\Alexis\\Documents\\Proyecto Orcas\\Source\\Main\\Common\\BaseDesktop\\bin\\Debug\\BaseDesktop.dll";
import "Janus", "platform=DotNET", "ns=DotNET", "assemblyfilename=C:\\Users\\mateo.bengualid\\Documents\\Visual Studio 2008\\Projects\\Janus\\Source\\Main\\Common\\BaseDesktop\\bin\\Debug\\BaseDesktop.dll";
using Zoe;
using DotNET::System;
using DotNET::System::Collections;
using DotNET::System::Data;
using DotNET::System::Data::Common;
using DotNET::System::Data::SqlClient;
using DotNET::Janus::Server::EntityModel;
using DotNET::Janus::Server::DataModel;
using DotNET::System::ServiceModel;
using DotNET::System::Runtime::Serialization;
using Janus::Utils;

using Janus::Store1;
using Janus::Server::EntityModel;

using DotNET::System::Collections::Generic;
using System::Collections::Generic;

using Janus::Store1::EntityModel;
Model::DefineNamespace(Janus::Store1::EntityModel);

namespace Janus{

	Model::DefineMobil(false);

	InfService::New(Library, 1, "Libreria"){
		InfService::Table(Autores){
			InfService::Field(Nombre, String, "");
			InfService::Field(Notas, String, "");
		};
		InfService::Table(Categorias){
			InfService::Field(Nombre, String, "");
		};
		InfService::Table(Reservas, true){
		};
		InfService::Table(Libros){
			InfService::Field(Titulo, Integer, "");
			InfService::Field(Autor, String, "");
			InfService::Field(ISBN, Date, "");
		};
		InfService::Relation(Libros, Categorias, ManyToMany);
		InfService::Relation(Autores, Libros, ManyToMany);
	};


}

