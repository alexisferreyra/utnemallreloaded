<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCategories" xml:space="preserve">
    <value>Add categories</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Add category</value>
  </data>
  <data name="AddCustomer" xml:space="preserve">
    <value>Add customer</value>
  </data>
  <data name="AddDataModel" xml:space="preserve">
    <value>Add data model</value>
  </data>
  <data name="AddGroup" xml:space="preserve">
    <value>Add group</value>
  </data>
  <data name="AddPermission" xml:space="preserve">
    <value>Add permission</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddService" xml:space="preserve">
    <value>Add service</value>
  </data>
  <data name="AddStore" xml:space="preserve">
    <value>Add store</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Add user</value>
  </data>
  <data name="AvailableCategories" xml:space="preserve">
    <value>Available categories</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BuildingService" xml:space="preserve">
    <value>Building Service....</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="CategorySelector" xml:space="preserve">
    <value>Category selector</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="Clicks" xml:space="preserve">
    <value>Clicks</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Contact name</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="DataModality" xml:space="preserve">
    <value>Data Modality</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ErrorDialog" xml:space="preserve">
    <value>Error Dialog</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="GlobalStatistics" xml:space="preserve">
    <value>Global Statistics</value>
  </data>
  <data name="GlobalStatisticsAnalyzer" xml:space="preserve">
    <value>Global Statistics Analyzer</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="InternalPhone" xml:space="preserve">
    <value>Internal phone</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LoggedInMessage" xml:space="preserve">
    <value>Logged in, select one of the items on the menu to start.</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginFailed" xml:space="preserve">
    <value>Login failed</value>
  </data>
  <data name="ManageCategories" xml:space="preserve">
    <value>Manage categories</value>
  </data>
  <data name="ManageCustomers" xml:space="preserve">
    <value>Manage customers</value>
  </data>
  <data name="ManageDataModel" xml:space="preserve">
    <value>Manage data model</value>
  </data>
  <data name="ManageGroups" xml:space="preserve">
    <value>Manage groups</value>
  </data>
  <data name="ManagePermissions" xml:space="preserve">
    <value>Manage permissions</value>
  </data>
  <data name="ManageServices" xml:space="preserve">
    <value>Manage services</value>
  </data>
  <data name="ManageStores" xml:space="preserve">
    <value>Manage stores</value>
  </data>
  <data name="ManageUsers" xml:space="preserve">
    <value>Manage users</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Permissions" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="RemoveAll" xml:space="preserve">
    <value>Remove all</value>
  </data>
  <data name="RemoveCategory" xml:space="preserve">
    <value>Remove category</value>
  </data>
  <data name="SelectedCategories" xml:space="preserve">
    <value>Selected categories</value>
  </data>
  <data name="SelectGlobalStatisticsMessage" xml:space="preserve">
    <value>Select "Global statistics" if you want to see resumed information of the usage of all the services</value>
  </data>
  <data name="SelectServiceStatisticsMessage" xml:space="preserve">
    <value>Select a service and then click "View" if you want to see statistics of a specific service.</value>
  </data>
  <data name="ServerManagerTitle" xml:space="preserve">
    <value>Server Manager</value>
  </data>
  <data name="Service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="ShowDetail" xml:space="preserve">
    <value>Show Detail</value>
  </data>
  <data name="ShowPreferences" xml:space="preserve">
    <value>Show preferences</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="StopDate" xml:space="preserve">
    <value>Stop date</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="StoreNumber" xml:space="preserve">
    <value>Store number</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewStatistics" xml:space="preserve">
    <value>View Statistics</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WelcomeTextBlock" xml:space="preserve">
    <value>Welcome to UtnEmall Server Manager Project. In this window you will be able to manage all the tasks related to UtnEmall Server.</value>
  </data>
  <data name="DataModelDesigner" xml:space="preserve">
    <value>Data Model Designer</value>
  </data>
  <data name="ManyToMany" xml:space="preserve">
    <value>Many to many</value>
  </data>
  <data name="NewTable" xml:space="preserve">
    <value>New table</value>
  </data>
  <data name="OneToMany" xml:space="preserve">
    <value>One to many</value>
  </data>
  <data name="OneToOne" xml:space="preserve">
    <value>One to one</value>
  </data>
  <data name="Relations" xml:space="preserve">
    <value>Relations</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="TableProperties" xml:space="preserve">
    <value>Table properties</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version 1.0.0</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AvailableFields" xml:space="preserve">
    <value>Available fields</value>
  </data>
  <data name="Bold" xml:space="preserve">
    <value>Bold</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="Connection" xml:space="preserve">
    <value>Connection</value>
  </data>
  <data name="DisplayDataProperties" xml:space="preserve">
    <value>Display data properties</value>
  </data>
  <data name="DisplayedFields" xml:space="preserve">
    <value>Displayed fields</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="Italic" xml:space="preserve">
    <value>Italic</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="ListProperties" xml:space="preserve">
    <value>List Properties</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MenuOptions" xml:space="preserve">
    <value>Menu options</value>
  </data>
  <data name="MenuProperties" xml:space="preserve">
    <value>Menu properties</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="ServiceDesigner" xml:space="preserve">
    <value>Service Designer</value>
  </data>
  <data name="SetStartForm" xml:space="preserve">
    <value>Start form:</value>
  </data>
  <data name="ShowData" xml:space="preserve">
    <value>Show Data</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TextInputProperties" xml:space="preserve">
    <value>Text input properties</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Underline" xml:space="preserve">
    <value>Underline</value>
  </data>
  <data name="Fields" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="ListOutput" xml:space="preserve">
    <value>List output</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Table</value>
  </data>
</root>