<XPLDocument><DocumentBody ldsrc="1,1,.\\MainTemplate.es\\InfrastructureServiceTemplate.dpp"><Import ldsrc="1"><ns>Microsoft</ns><ns>platform=DotNET</ns><ns>ns=DotNET</ns><ns>assembly=mscorlib</ns></Import><Import ldsrc="2"><ns>System</ns><ns>platform=DotNET</ns><ns>ns=DotNET</ns><ns>assembly=mscorlib</ns></Import><Import ldsrc="3"><ns>LayerD.CodeDOM</ns><ns>platform=DotNET</ns><ns>ns=DotNET</ns><ns>assembly=lib_layerd_xpl_codedom_net</ns></Import><Import ldsrc="4"><ns>LayerD.ZOECompiler</ns><ns>platform=DotNET</ns><ns>ns=DotNET</ns><ns>assembly=lib_zoec_core</ns></Import><Using ldsrc="5"><ns>DotNET::System</ns></Using><Using ldsrc="6"><ns>DotNET::System::IO</ns></Using><Using ldsrc="7"><ns>DotNET::System::Collections</ns></Using><Using ldsrc="8"><ns>DotNET::LayerD::CodeDOM</ns></Using><Using ldsrc="9"><ns>DotNET::LayerD::ZOECompiler</ns></Using><Namespace name="UtnEmall::Utils" ldsrc="11,1184"><documentation short="&#xD;&#xA;Tipos internos para guardar los datos del DSL&#xD;&#xA;" /><Class name="Table" isfactory="true" ldsrc="16,21"><Field name="Name" access="public" ldsrc="18,18"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="IsStorage" access="public" ldsrc="19,19"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="Fields" access="public" ldsrc="20,20"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="20"><e><new><type typename="ArrayList" /></new></e></i></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="Field" isfactory="true" ldsrc="22,25"><Field name="Name" access="public"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Type" access="public"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Description" access="public" ldsrc="24,24"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="Relation" isfactory="true" ldsrc="26,30"><Field name="Source" access="public"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Target" access="public"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Type" access="public"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="TypeName" access="public" ldsrc="28,28"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="FieldHolderName" access="public" ldsrc="29,29"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="InfTest" access="public" isfactory="true" ldsrc="32,75"><Field name="counter" storage="static" ldsrc="33,33"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Function name="Repeat" internalname="Repeat#2" access="public" storage="static" ldsrc="35,35"><Parameters><P name="count" number="1"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="35" /></P><P name="bloque" number="2"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="35" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="35,47"><if ldsrc="36"><boolean><bo op="EQ"><l><n>bloque</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="36,39"><e ldsrc="37"><fc><l><n>Console::WriteLine</n></l><args><e><lit str="Error InfTest.Repeat llamado incorrectamente con bloque nulo." /></e></args></fc></e><return ldsrc="38,38"><lit str="0" type="null" /></return></ifbk></if><Decls><d name="retBlock" ldsrc="40"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="40"><e><fc><l><n>XplFunctionBody::new_bk</n></l><args /></fc></e></i></d></Decls><for ldsrc="41,41"><init><dl><d name="n" ldsrc="41"><type typename="$INTEGER$" /><i ldsrc="41"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>n</n></l><r><n>count</n></r></bo></condition><repeat><e><uo op="inc"><u><n>n</n></u></uo></e></repeat><forblock ldsrc="41,45"><e ldsrc="44"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>retBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Clone</n></r></bo></l><args /></fc></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></forblock></for><return ldsrc="46,46"><n>retBlock</n></return></FunctionBody></Function><Function name="Field" internalname="Field#3" access="public" storage="static" ldsrc="48,48"><Parameters><P name="entityName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="48" /></P><P name="fieldName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="48" /></P><P name="fieldType" number="3"><type ispointer="true" typeStr="^_$STRING$" ldsrc="48"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="48,51"><Decls><d name="fieldValue" ldsrc="49"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="49"><e><fc><l><n>GetFieldValue</n></l><args><e><n>fieldType</n></e><e><n>fieldName</n></e></args></fc></e></i></d></Decls><return ldsrc="50,50"><writecode ldsrc="50"><e><a><l><bo op="m"><l><n>$entityName</n></l><r><n>$fieldName</n></r></bo></l><r><n>$fieldValue</n></r></a></e></writecode></return></FunctionBody></Function><Function name="GetFieldValue" internalname="GetFieldValue#4" access="public" storage="static" ldsrc="52,52"><Parameters><P name="fieldType" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="52"><dt typename="$STRING$" /><pi ref="true" /></type></P><P name="fieldName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="52" /></P></Parameters><ReturnType ftype="expression" typeStr="$NONE$" /><FunctionBody ldsrc="52,74"><e ldsrc="53"><uo op="inc"><u><n>counter</n></u></uo></e><switch ldsrc="55"><e><n>fieldType</n></e><case ldsrc="56"><e><lit str="String" /></e><bk><Decls><d name="strVal" ldsrc="57"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="57"><e><bo><l><bo><l><bo op="m"><l><n>fieldName</n></l><r><n>Identifier</n></r></bo></l><r><lit str=" " /></r></bo></l><r><fc><l><bo op="m"><l><n>counter</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></e></i></d></Decls><return ldsrc="58,58"><writecode ldsrc="58"><e><n>$strVal</n></e></writecode></return></bk></case><case ldsrc="59"><e><lit str="Integer" /></e><bk><return ldsrc="60,60"><writecode ldsrc="60"><e><n>$counter</n></e></writecode></return><jump ldsrc="61" /></bk></case><case ldsrc="62"><e><lit str="Float" /></e><bk><Decls><d name="floatVal" ldsrc="63"><type typename="$FLOAT$" /><i ldsrc="63"><e><bo op="mul"><l><lit str="5.23f" type="real" /></l><r><n>counter</n></r></bo></e></i></d></Decls><return ldsrc="64,64"><writecode ldsrc="64"><e><n>$floatVal</n></e></writecode></return></bk></case><case ldsrc="65"><e><lit str="Image" /></e><bk><return ldsrc="66,66"><writecode ldsrc="66"><e><lit /></e></writecode></return></bk></case><case ldsrc="67"><e><lit str="DateTime" /></e><bk><return ldsrc="68,68"><writecode ldsrc="68"><e><n>zoe::lang::DateTime::Now</n></e></writecode></return></bk></case><case ldsrc="69"><e><lit str="Boolean" /></e><bk><return ldsrc="70,70"><writecode ldsrc="70"><e><lit str="false" type="bool" /></e></writecode></return></bk></case><case ldsrc="71"><e><empty /></e><bk><return ldsrc="72,72"><writecode ldsrc="72"><e><lit /></e></writecode></return></bk></case></switch></FunctionBody></Function><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="InfService" access="public" isfactory="true" ldsrc="77,1182"><documentation short="&#xD;&#xA;		Algoritmo del DSL:&#xD;&#xA;			Al llamar a New inserto un &quot;ProcessModel&quot; al final del bloque.&#xD;&#xA;			En el ProcessModel con la estructura cargada en memoria la proceso,&#xD;&#xA;			generando las clases de entidad, acceso a datos y negocios indicadas&#xD;&#xA;			por el modelo.&#xD;&#xA;	" /><Field name="serviceName" storage="static" ldsrc="85,85"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="storeID" storage="static" ldsrc="86,86"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="description" storage="static" ldsrc="87,87"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="tables" storage="static"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="88"><e><new><type typename="ArrayList" /></new></e></i></Field><Field name="relations" storage="static" ldsrc="88,88"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="88"><e><new><type typename="ArrayList" /></new></e></i></Field><Field name="isMobil" storage="static" ldsrc="89,89"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="currentTable" storage="static" ldsrc="91,91"><type ispointer="true" typeStr="^_UtnEmall.Utils.Table"><dt typename="Table" /><pi ref="true" /></type></Field><Function name="GetFieldType" internalname="GetFieldType#8" storage="static" ldsrc="93,93"><Parameters><P name="fieldType" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="93"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="93,121"><Decls><d name="retType" ldsrc="94"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="94"><e><new><type typename="XplType" /></new></e></i></d></Decls><switch ldsrc="96"><e><n>fieldType</n></e><case ldsrc="97"><e><lit str="String" /></e><bk><e ldsrc="98"><fc><l><bo op="m"><l><n>retType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::String</n></e></args></fc></e><jump ldsrc="99" /></bk></case><case ldsrc="100"><e><lit str="Integer" /></e><bk><e ldsrc="101"><fc><l><bo op="m"><l><n>retType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::Integer</n></e></args></fc></e><jump ldsrc="102" /></bk></case><case ldsrc="103"><e><lit str="Float" /></e><bk><e ldsrc="104"><fc><l><bo op="m"><l><n>retType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::Float</n></e></args></fc></e><jump ldsrc="105" /></bk></case><case ldsrc="106"><e><lit str="DateTime" /></e><bk><e ldsrc="107"><fc><l><bo op="m"><l><n>retType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="zoe::lang::DateTime" /></e></args></fc></e><jump ldsrc="108" /></bk></case><case ldsrc="109"><e><lit str="Boolean" /></e><bk><e ldsrc="110"><fc><l><bo op="m"><l><n>retType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::Boolean</n></e></args></fc></e><jump ldsrc="111" /></bk></case><case ldsrc="112"><e><lit str="UtnEmall::Utils::Image" /></e><bk><e ldsrc="113"><fc><l><bo op="m"><l><n>retType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="UtnEmall.Utils.Image" /></e></args></fc></e><jump ldsrc="114" /></bk></case><case ldsrc="115"><e><empty /></e><bk><e ldsrc="116"><fc><l><n>Console::WriteLine</n></l><args><e><bo><l><lit str="TIPO DE DATO NO RECONOCIDO -&gt; " /></l><r><n>fieldType</n></r></bo></e></args></fc></e><e ldsrc="117"><fc><l><bo op="m"><l><n>retType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::String</n></e></args></fc></e><jump ldsrc="118" /></bk></case></switch><return ldsrc="120,120"><n>retType</n></return></FunctionBody></Function><Function name="IsMobil" internalname="IsMobil#9" access="public" storage="static" ldsrc="124,124"><Parameters><P name="isMobilVersion" number="1"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="124" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="124,127"><e ldsrc="125"><a><l><n>isMobil</n></l><r><n>isMobilVersion</n></r></a></e><return ldsrc="126,126"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short=" En este metodo hago todo el procesamiento principal&#xD;&#xA;&#xD;&#xA;" /><Function name="ProcessModel2" internalname="ProcessModel2#10" access="public" storage="static" ldsrc="131,131"><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="131,249"><Decls><d name="tableName" ldsrc="132"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="132"><e><lit str="0" type="null" /></e></i></d><d name="internalTableName" ldsrc="132"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="132"><e><lit str="0" type="null" /></e></i></d></Decls><for ldsrc="133,133"><init><dl><d name="table" ldsrc="133"><type ispointer="true"><dt typename="Table" /><pi ref="true" /></type></d></dl></init><condition><n>tables</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="133,225"><e ldsrc="134"><a><l><n>internalTableName</n></l><r><new><type typename="XplIName" /><init ldsrc="134"><list><e><bo><l><bo><l><bo><l><lit str="Store" /></l><r><fc><l><bo op="m"><l><n>storeID</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str="_" /></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></e></list></init></new></r></a></e><e ldsrc="135"><a><l><n>tableName</n></l><r><new><type typename="XplIName" /><init ldsrc="135"><list><e><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></e></list></init></new></r></a></e><Decls><d name="bloque" ldsrc="136"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="136"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="137,137"><init><dl><d name="field" ldsrc="137"><type ispointer="true"><dt typename="Field" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>table</n></l><r><n>Fields</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="137,143"><Decls><d name="fieldName" ldsrc="138"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="138"><e><new><type typename="XplIName" /><init ldsrc="138"><list><e><bo op="m"><l><n>field</n></l><r><n>Name</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="fieldType" ldsrc="139"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="139"><e><fc><l><n>GetFieldType</n></l><args><e><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></e></args></fc></e></i></d></Decls><e ldsrc="142"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="141"><e><fc><l><n>Model::Field</n></l><args><e><n>$fieldName</n></e><e><t typename="$fieldType" /></e></args></fc></e></writecode></e></args></fc></e></forblock></for><documentation short=" Agrego los campos para las relaciones&#xD;&#xA;" /><for ldsrc="145,145"><init><dl><d name="relation" ldsrc="145"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="145,190"><Decls><d name="relationField" ldsrc="146"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="146"><e><new><type typename="XplIName" /></new></e></i></d></Decls><if ldsrc="147"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="147,167"><switch ldsrc="148"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="149"><e><lit str="OneToOne" /></e><bk><e ldsrc="150"><a><l><bo op="m"><l><n>relationField</n></l><r><n>Identifier</n></r></bo></l><r><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></r></a></e><e ldsrc="153"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="152"><e><fc><l><n>Model::Field</n></l><args><e><n>$relationField</n></e><e><t typename="$INTEGER$" /></e></args></fc></e></writecode></e></args></fc></e><jump ldsrc="154" /></bk></case><case ldsrc="155"><e><lit str="OneToMany" /></e><bk><jump ldsrc="156" /></bk></case><case ldsrc="157"><e><lit str="ManyToMany" /></e><bk><Decls><d name="manyToManyRelationEntityName" ldsrc="158"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="158"><e><new><type typename="XplIName" /><init ldsrc="158"><list><e><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="manyToManyFieldHolder" ldsrc="159"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="159"><e><bo op="m"><l><n>relation</n></l><r><n>FieldHolderName</n></r></bo></e></i></d></Decls><e ldsrc="164"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="161"><e><fc><l><n>UtnEmall::Utils::Model::Relations</n></l><args><e><n>$manyToManyFieldHolder</n></e><e><n>$manyToManyRelationEntityName</n></e><e><n>UtnEmall::Utils::RelationTypes::UnoAUno</n></e><e><lit str="true" type="bool" /></e><e><lit str="true" type="bool" /></e><e><lit str="true" type="bool" /></e><e><lit str="true" type="bool" /></e></args><bk ldsrc="162,162" /></fc></e></writecode></e></args></fc></e><jump ldsrc="165" /></bk></case></switch></ifbk><else ldsrc="168"><if ldsrc="168"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="168,189"><switch ldsrc="169"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="171"><e><lit str="OneToOne" /></e><bk><jump ldsrc="172" /></bk></case><case ldsrc="173"><e><lit str="OneToMany" /></e><bk><e ldsrc="174"><a><l><bo op="m"><l><n>relationField</n></l><r><n>Identifier</n></r></bo></l><r><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></r></a></e><e ldsrc="177"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="176"><e><fc><l><n>Model::Field</n></l><args><e><n>$relationField</n></e><e><t typename="$INTEGER$" /></e></args></fc></e></writecode></e></args></fc></e><jump ldsrc="178" /></bk></case><case ldsrc="179"><e><lit str="ManyToMany" /></e><bk><Decls><d name="manyToManyRelationEntityName" ldsrc="180"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="180"><e><new><type typename="XplIName" /><init ldsrc="180"><list><e><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="manyToManyFieldHolder" ldsrc="181"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="181"><e><bo op="m"><l><n>relation</n></l><r><n>FieldHolderName</n></r></bo></e></i></d></Decls><e ldsrc="186"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="183"><e><fc><l><n>UtnEmall::Utils::Model::Relations</n></l><args><e><n>$manyToManyFieldHolder</n></e><e><n>$manyToManyRelationEntityName</n></e><e><n>UtnEmall::Utils::RelationTypes::UnoAUno</n></e><e><lit str="true" type="bool" /></e><e><lit str="true" type="bool" /></e><e><lit str="true" type="bool" /></e><e><lit str="true" type="bool" /></e></args><bk ldsrc="184,184" /></fc></e></writecode></e></args></fc></e><jump ldsrc="187" /></bk></case></switch></ifbk></if></else></if></forblock></for><if ldsrc="191"><boolean><bo op="m"><l><n>table</n></l><r><n>IsStorage</n></r></bo></boolean><ifbk ldsrc="191,208"><documentation short=" Agrego el modelo&#xD;&#xA;" /><e ldsrc="207"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="194"><e><fc><l><n>Model::Define</n></l><args><e><n>$tableName</n></e><e><n>$internalTableName</n></e><e><lit str="false" type="bool" /></e></args><bk ldsrc="195,205"><e ldsrc="196"><fc><l><n>Model::Field</n></l><args><e><n>CustomerId</n></e><e><t typename="$INTEGER$" /></e></args></fc></e><e ldsrc="197"><fc><l><n>Model::Field</n></l><args><e><n>TableRelated</n></e><e><t typename="$STRING$" /></e></args></fc></e><e ldsrc="198"><fc><l><n>Model::Field</n></l><args><e><n>OnTableId</n></e><e><t typename="$INTEGER$" /></e></args></fc></e><e ldsrc="199"><fc><l><n>Model::Field</n></l><args><e><n>StorageKey</n></e><e><t typename="$STRING$" /></e></args></fc></e><e ldsrc="200"><fc><l><n>Model::Field</n></l><args><e><n>NumericValue</n></e><e><t typename="$FLOAT$" /></e></args></fc></e><e ldsrc="201"><fc><l><n>Model::Field</n></l><args><e><n>BooleanValue</n></e><e><t typename="$BOOLEAN$" /></e></args></fc></e><e ldsrc="202"><fc><l><n>Model::Field</n></l><args><e><n>DateTimeValue</n></e><e><t typename="DateTime" /></e></args></fc></e><e ldsrc="203"><fc><l><n>Model::Field</n></l><args><e><n>StringValue</n></e><e><t typename="$STRING$" /></e></args></fc></e><e ldsrc="204"><fc><l><n>Model::Field</n></l><args><e><n>Deleted</n></e><e><t typename="$BOOLEAN$" /></e></args></fc></e></bk></fc></e></writecode></e></args></fc></e></ifbk><else ldsrc="209"><documentation short=" Add this field to persist deleted fields&#xD;&#xA;" /><e ldsrc="215"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="212"><e><fc><l><n>Model::Field</n></l><args><e><n>Deleted</n></e><e><t typename="$BOOLEAN$" /></e></args></fc></e></writecode></e></args></fc></e><documentation short=" Agrego el modelo&#xD;&#xA;" /><e ldsrc="223"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="218"><e><fc><l><n>Model::Define</n></l><args><e><n>$tableName</n></e><e><n>$internalTableName</n></e><e><lit str="false" type="bool" /></e></args><bk ldsrc="219,221"><e ldsrc="220"><n>$bloque</n></e></bk></fc></e></writecode></e></args></fc></e></else></if></forblock></for><documentation short=" Termine de procesar las tablas&#xD;&#xA; proceso las relaciones muchos a muchos&#xD;&#xA;" /><for ldsrc="228,228"><init><dl><d name="relation" ldsrc="228"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="228,245"><switch ldsrc="229"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="230"><e><lit str="ManyToMany" /></e><bk><e ldsrc="231"><a><l><bo op="m"><l><n>internalTableName</n></l><r><n>Identifier</n></r></bo></l><r><bo><l><bo><l><bo><l><lit str="Store" /></l><r><fc><l><bo op="m"><l><n>storeID</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str="_" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></r></bo></r></a></e><e ldsrc="232"><a><l><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></r></a></e><Decls><d name="sourceField" ldsrc="233"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="233"><e><new><type typename="XplIName" /><init ldsrc="233"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d><d name="targetField" ldsrc="233"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="233"><e><new><type typename="XplIName" /><init ldsrc="233"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="242"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="235"><e><fc><l><n>Model::Define</n></l><args><e><n>$tableName</n></e><e><n>$internalTableName</n></e><e><lit str="false" type="bool" /></e></args><bk ldsrc="236,240"><e ldsrc="237"><fc><l><n>Model::Field</n></l><args><e><n>$sourceField</n></e><e><t typename="$INTEGER$" /></e></args></fc></e><e ldsrc="238"><fc><l><n>Model::Field</n></l><args><e><n>$targetField</n></e><e><t typename="$INTEGER$" /></e></args></fc></e><e ldsrc="239"><fc><l><n>Model::Field</n></l><args><e><n>Deleted</n></e><e><t typename="$BOOLEAN$" /></e></args></fc></e></bk></fc></e></writecode></e></args></fc></e><jump ldsrc="243" /></bk></case></switch></forblock></for><documentation short="Agrego el modelo de Negocios&#xD;&#xA;" /><return ldsrc="248,248"><writecode ldsrc="248"><e><fc><l><n>InfService::InsertBusinessModel</n></l><args /></fc></e></writecode></return></FunctionBody></Function><Function name="BuildTestBlock" internalname="BuildTestBlock#11" access="public" storage="static" ldsrc="251,251"><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplFunctionBody"><dt typename="XplFunctionBody" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="251,365"><Decls><d name="retBlock" ldsrc="252"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="252"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="tableName" ldsrc="253"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="253"><e><lit str="0" type="null" /></e></i></d><d name="entityName" ldsrc="253"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="253"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="tableDataAccess" ldsrc="254"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="254"><e><lit str="0" type="null" /></e></i></d><d name="dataAccessVar" ldsrc="254"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="254"><e><lit str="0" type="null" /></e></i></d></Decls><for ldsrc="256,256"><init><dl><d name="table" ldsrc="256"><type ispointer="true"><dt typename="Table" /><pi ref="true" /></type></d></dl></init><condition><n>tables</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="256,325"><documentation short=" Nombres de los tipos de la tabla y collecion&#xD;&#xA;" /><e ldsrc="258"><a><l><n>tableName</n></l><r><new><type typename="XplIName" /><init ldsrc="258"><list><e><bo><l><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></r></a></e><e ldsrc="259"><a><l><n>tableDataAccess</n></l><r><new><type typename="XplIName" /><init ldsrc="259"><list><e><bo><l><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></r></a></e><documentation short=" Nombre de las variables para la entidad y la coleccion&#xD;&#xA;" /><e ldsrc="261"><a><l><n>entityName</n></l><r><new><type typename="XplIName" /><init ldsrc="261"><list><e><fc><l><bo op="m"><l><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></l><r><n>ToLower</n></r></bo></l><args /></fc></e></list></init></new></r></a></e><e ldsrc="262"><a><l><n>dataAccessVar</n></l><r><new><type typename="XplIName" /><init ldsrc="262"><list><e><bo><l><bo op="m"><l><n>entityName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></r></a></e><Decls><d name="bloque" ldsrc="264"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="264"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="265,265"><init><dl><d name="field" ldsrc="265"><type ispointer="true"><dt typename="Field" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>table</n></l><r><n>Fields</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="265,271"><Decls><d name="fieldName" ldsrc="266"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="266"><e><new><type typename="XplIName" /><init ldsrc="266"><list><e><bo op="m"><l><n>field</n></l><r><n>Name</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="fieldType" ldsrc="267"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="267"><e><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></e></i></d></Decls><e ldsrc="270"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="269"><e><fc><l><n>InfTest::Field</n></l><args><e><n>$entityName</n></e><e><n>$fieldName</n></e><e><n>$fieldType</n></e></args></fc></e></writecode></e></args></fc></e></forblock></for><documentation short=" Agrego los campos para las relaciones&#xD;&#xA;" /><for ldsrc="274,274"><init><dl><d name="relation" ldsrc="274"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="274,308"><Decls><d name="relationField" ldsrc="275"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="275"><e><new><type typename="XplIName" /></new></e></i></d></Decls><if ldsrc="276"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="276,292"><switch ldsrc="277"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="278"><e><lit str="OneToOne" /></e><bk><e ldsrc="279"><a><l><bo op="m"><l><n>relationField</n></l><r><n>Identifier</n></r></bo></l><r><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></r></a></e><e ldsrc="282"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="281"><e><a><l><bo op="m"><l><n>$entityName</n></l><r><n>$relationField</n></r></bo></l><r><fc><l><bo op="m"><l><n>random</n></l><r><n>Next</n></r></bo></l><args><e><lit str="1" type="integer" /></e><e><lit str="10" type="integer" /></e></args></fc></r></a></e></writecode></e></args></fc></e><jump ldsrc="283" /></bk></case><case ldsrc="284"><e><lit str="OneToMany" /></e><bk><jump ldsrc="285" /></bk></case><case ldsrc="286"><e><lit str="ManyToMany" /></e><bk><jump ldsrc="287" /></bk></case><case ldsrc="288"><e><empty /></e><bk><e ldsrc="289"><fc><l><n>Console::WriteLine</n></l><args><e><lit str="Error en generacion de test" /></e></args></fc></e><jump ldsrc="290" /></bk></case></switch></ifbk><else ldsrc="293"><if ldsrc="293"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="293,307"><switch ldsrc="294"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="296"><e><lit str="OneToOne" /></e><bk><jump ldsrc="297" /></bk></case><case ldsrc="298"><e><lit str="OneToMany" /></e><bk><e ldsrc="299"><a><l><bo op="m"><l><n>relationField</n></l><r><n>Identifier</n></r></bo></l><r><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></r></a></e><e ldsrc="302"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bloque</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="301"><e><a><l><bo op="m"><l><n>$entityName</n></l><r><n>$relationField</n></r></bo></l><r><fc><l><bo op="m"><l><n>random</n></l><r><n>Next</n></r></bo></l><args><e><lit str="1" type="integer" /></e><e><lit str="10" type="integer" /></e></args></fc></r></a></e></writecode></e></args></fc></e><jump ldsrc="303" /></bk></case><case ldsrc="304"><e><lit str="ManyToMany" /></e><bk><jump ldsrc="305" /></bk></case></switch></ifbk></if></else></if></forblock></for><e ldsrc="323"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>retBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="311"><bk><Decls><d name="$entityName" ldsrc="312"><type ispointer="true"><dt typename="$tableName" /><pi ref="true" /></type><i ldsrc="312"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="$dataAccessVar" ldsrc="313"><type ispointer="true"><dt typename="$tableDataAccess" /><pi ref="true" /></type><i ldsrc="313"><e><new><type typename="$tableDataAccess" /></new></e></i></d></Decls><e ldsrc="314"><a><l><n>n</n></l><r><lit str="1" type="integer" /></r></a></e><e ldsrc="320"><fc><l><n>InfTest::Repeat</n></l><args><e><lit str="10" type="integer" /></e></args><bk ldsrc="315,320"><e ldsrc="316"><a><l><n>$entityName</n></l><r><new><type typename="$tableName" /></new></r></a></e><documentation short="$entityName.Id = n++;&#xD;&#xA;" /><e ldsrc="318"><n>$bloque</n></e><e ldsrc="319"><fc><l><bo op="m"><l><n>$dataAccessVar</n></l><r><n>Save</n></r></bo></l><args><e><n>$entityName</n></e></args></fc></e></bk></fc></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></forblock></for><documentation short=" Termine de procesar las tablas&#xD;&#xA; proceso las relaciones muchos a muchos&#xD;&#xA;" /><for ldsrc="330,330"><init><dl><d name="relation" ldsrc="330"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="330,362"><switch ldsrc="331"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="332"><e><lit str="ManyToMany" /></e><bk><documentation short="internalTableName.Identifier = &quot;Store&quot; + storeID.ToString() + &quot;_&quot; + relation.TypeName;&#xD;&#xA;" /><e ldsrc="334"><a><l><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></l><r><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="Entity" /></r></bo></r></a></e><e ldsrc="335"><a><l><n>tableDataAccess</n></l><r><new><type typename="XplIName" /><init ldsrc="335"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></r></a></e><documentation short=" Nombre de las variables para la entidad y la coleccion&#xD;&#xA;" /><e ldsrc="337"><a><l><n>entityName</n></l><r><new><type typename="XplIName" /><init ldsrc="337"><list><e><fc><l><bo op="m"><l><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></l><r><n>ToLower</n></r></bo></l><args /></fc></e></list></init></new></r></a></e><e ldsrc="338"><a><l><n>dataAccessVar</n></l><r><new><type typename="XplIName" /><init ldsrc="338"><list><e><bo><l><bo op="m"><l><n>entityName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></r></a></e><Decls><d name="sourceField" ldsrc="340"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="340"><e><new><type typename="XplIName" /><init ldsrc="340"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d><d name="targetField" ldsrc="340"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="340"><e><new><type typename="XplIName" /><init ldsrc="340"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="355"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>retBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="343"><bk><Decls><d name="$entityName" ldsrc="344"><type ispointer="true"><dt typename="$tableName" /><pi ref="true" /></type><i ldsrc="344"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="$dataAccessVar" ldsrc="345"><type ispointer="true"><dt typename="$tableDataAccess" /><pi ref="true" /></type><i ldsrc="345"><e><new><type typename="$tableDataAccess" /></new></e></i></d></Decls><e ldsrc="346"><a><l><n>n</n></l><r><lit str="1" type="integer" /></r></a></e><e ldsrc="353"><fc><l><n>InfTest::Repeat</n></l><args><e><lit str="20" type="integer" /></e></args><bk ldsrc="347,353"><e ldsrc="348"><a><l><n>$entityName</n></l><r><new><type typename="$tableName" /></new></r></a></e><documentation short="$entityName.Id = n++;&#xD;&#xA;" /><e ldsrc="350"><a><l><bo op="m"><l><n>$entityName</n></l><r><n>$sourceField</n></r></bo></l><r><fc><l><bo op="m"><l><n>random</n></l><r><n>Next</n></r></bo></l><args><e><lit str="1" type="integer" /></e><e><lit str="5" type="integer" /></e></args></fc></r></a></e><e ldsrc="351"><a><l><bo op="m"><l><n>$entityName</n></l><r><n>$targetField</n></r></bo></l><r><fc><l><bo op="m"><l><n>random</n></l><r><n>Next</n></r></bo></l><args><e><lit str="1" type="integer" /></e><e><lit str="5" type="integer" /></e></args></fc></r></a></e><e ldsrc="352"><fc><l><bo op="m"><l><n>$dataAccessVar</n></l><r><n>Save</n></r></bo></l><args><e><n>$entityName</n></e></args></fc></e></bk></fc></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><jump ldsrc="357" /></bk></case><case ldsrc="359"><e><empty /></e><bk><jump ldsrc="360" /></bk></case></switch></forblock></for><return ldsrc="364,364"><n>retBlock</n></return></FunctionBody></Function><Function name="InsertBusinessModel" internalname="InsertBusinessModel#12" access="public" storage="static" ldsrc="367,367"><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="367,431"><documentation short="Creo la clase de negocios&#xD;&#xA;" /><Decls><d name="bsClassName" ldsrc="369"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="369"><e><new><type typename="XplIName" /><init ldsrc="369"><list><e><bo><l><bo><l><lit str="Store" /></l><r><fc><l><bo op="m"><l><n>storeID</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str="InfrastructureService" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="testBlock" ldsrc="370"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="370"><e><fc><l><n>BuildTestBlock</n></l><args /></fc></e></i></d></Decls><Decls><d name="bsClass" ldsrc="372"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="372"><e><writecode ldsrc="372"><class name="$bsClassName" access="public" ldsrc="373,380"><Implements><i name="_iii" access="public" ldsrc="373" /></Implements><Function name="RunTest" access="public" storage="static" ldsrc="375,375"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="375,379"><Decls><d name="n" ldsrc="376"><type typename="$INTEGER$" /></d></Decls><Decls><d name="random" ldsrc="377"><type ispointer="true"><dt typename="DotNET::System::Random" /><pi ref="true" /></type><i ldsrc="377"><e><new><type typename="DotNET::System::Random" /></new></e></i></d></Decls><e ldsrc="378"><n>$testBlock</n></e></FunctionBody></Function></class></writecode></e></i></d></Decls><Decls><d name="bsInterfaceName" ldsrc="382"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="382"><e><new><type typename="XplIName" /><init ldsrc="382"><list><e><bo><l><bo><l><lit str="IStore" /></l><r><fc><l><bo op="m"><l><n>storeID</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str="InfrastructureService" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="bsInterface" ldsrc="383"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="383"><e><writecode ldsrc="383"><class name="$bsInterfaceName" access="public" isinterface="true" ldsrc="384,386" /></writecode></e></i></d></Decls><e ldsrc="389"><fc><l><bo op="m"><l><cast><e><fc><l><bo op="m"><l><n>bsClass</n></l><r><n>FindNode</n></r></bo></l><args><e><lit str="/@XplImplement" /></e></args></fc></e><type ispointer="true"><dt typename="XplImplement" /><pi ref="true" /></type></cast></l><r><n>set_name</n></r></bo></l><args><e><bo op="m"><l><n>bsInterfaceName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e><if ldsrc="391"><boolean><uo op="not"><u><n>isMobil</n></u></uo></boolean><ifbk ldsrc="391,396"><documentation short="Inserto la clase e interface de negocios&#xD;&#xA;" /><e ldsrc="395"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="394"><e><fc><l><n>Zoe::Attribute::Add</n></l><args><e><lit str="System.ServiceModel.ServiceContract" /></e></args></fc></e></writecode></e></args></fc></e></ifbk></if><e ldsrc="397"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>bsInterface</n></e></args></fc></e><e ldsrc="398"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>bsClass</n></e></args></fc></e><for ldsrc="400,400"><init><dl><d name="table" ldsrc="400"><type ispointer="true"><dt typename="Table" /><pi ref="true" /></type></d></dl></init><condition><n>tables</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="400,409"><documentation short="Agrego los miembros para la tabla a la clase&#xD;&#xA;" /><e ldsrc="405"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bsClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>MakeBusinessFunctions</n></l><args><e><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></e></args></fc></e></args></fc></e><e ldsrc="408"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bsInterface</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>MakeInterfaceBusinessFunctions</n></l><args><e><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></e></args></fc></e></args></fc></e></forblock></for><documentation short="Para las tablas de relaciones muchos a muchos&#xD;&#xA;" /><for ldsrc="411,411"><init><dl><d name="relation" ldsrc="411"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="411,424"><switch ldsrc="412"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="414"><e><lit str="ManyToMany" /></e><bk><documentation short="Agrego los miembros para la tabla a la clase&#xD;&#xA;" /><e ldsrc="418"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bsClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>MakeBusinessFunctions</n></l><args><e><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></e></args></fc></e></args></fc></e><e ldsrc="421"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>bsInterface</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>MakeInterfaceBusinessFunctions</n></l><args><e><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></e></args></fc></e></args></fc></e><jump ldsrc="422" /></bk></case></switch></forblock></for><documentation short=" This was added by Mateo to incorporate the new GetCollectionOf functions&#xD;&#xA;" /><e ldsrc="427"><fc><l><n>InfService::AddGetListInterfaces</n></l><args><e><n>bsInterface</n></e></args></fc></e><e ldsrc="428"><fc><l><n>InfService::AddGetListMethods</n></l><args><e><n>bsClass</n></e></args></fc></e><return ldsrc="430,430"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="MakeInterfaceBusinessFunctions" internalname="MakeInterfaceBusinessFunctions#13" access="public" storage="static" ldsrc="433,433"><Parameters><P name="tableName" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="433"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNodeList"><dt typename="XplNodeList" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="433,466"><documentation short="Preparo los tipos&#xD;&#xA;" /><Decls><d name="typeOfTable" ldsrc="435"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="435"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="436"><fc><l><bo op="m"><l><n>typeOfTable</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><n>tableName</n></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="dataAccessType" ldsrc="437"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="437"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="438"><fc><l><bo op="m"><l><n>dataAccessType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><n>tableName</n></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="typeListOfTable" ldsrc="439"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="439"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="440"><fc><l><bo op="m"><l><n>typeListOfTable</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>typeOfTable</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="listOfTypesName" ldsrc="441"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="441"><e><new><type typename="XplIName" /><init ldsrc="441"><list><e><fc><l><bo op="m"><l><n>typeListOfTable</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e></list></init></new></e></i></d></Decls><Decls><d name="typeListOfInt" ldsrc="443"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="443"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="444"><fc><l><bo op="m"><l><n>typeListOfInt</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="ListOfInt" /></e></args></fc></e><documentation short="Preparo los INames&#xD;&#xA;" /><Decls><d name="updateName" ldsrc="446"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="446"><e><new><type typename="XplIName" /><init ldsrc="446"><list><e><bo><l><lit str="Update" /></l><r><n>tableName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="getListName" ldsrc="447"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="447"><e><new><type typename="XplIName" /><init ldsrc="447"><list><e><bo><l><lit str="GetCollectionOf" /></l><r><n>tableName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="deleteName" ldsrc="448"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="448"><e><new><type typename="XplIName" /><init ldsrc="448"><list><e><bo><l><lit str="Delete" /></l><r><n>tableName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="attributeExpression" ldsrc="450"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="450"><e><writecode ldsrc="450"><e><fc><l><n>Zoe::Attribute::Add</n></l><args><e><lit str="System.ServiceModel.OperationContract" /></e></args></fc></e></writecode></e></i></d></Decls><if ldsrc="451"><boolean><n>isMobil</n></boolean><ifbk ldsrc="451,453"><e ldsrc="452"><fc><l><bo op="m"><l><n>attributeExpression</n></l><r><n>set_Content</n></r></bo></l><args><e><fc><l><n>XplExpression::new_empty</n></l><args /></fc></e></args></fc></e></ifbk></if><documentation short="Creo las funciones&#xD;&#xA;PENDIENTE : chequear la session sea valida&#xD;&#xA;" /><return ldsrc="456,465"><fc><l><bo op="m"><l><writecode ldsrc="456"><classmembers><e ldsrc="457"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTypesName</n></e><e><t ispointer="true"><dt typename="$typeOfTable" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="458"><fc><l><n>UtnEmall::Utils::List::New</n></l><args><e><n>ListOfInt</n></e><e><t typename="$INTEGER$" /></e></args></fc></e><e ldsrc="459"><n>$attributeExpression</n></e><Function name="$updateName" ldsrc="460,460"><Parameters><P name="items" number="1"><type ispointer="true" ldsrc="460"><dt typename="$typeListOfTable" /><pi ref="true" /></type></P><P name="sessionId" number="2"><type ispointer="true" ldsrc="460"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$BOOLEAN$" /></Function><e ldsrc="461"><n>$attributeExpression</n></e><Function name="$getListName" ldsrc="462,462"><Parameters><P name="sessionId" number="1"><type ispointer="true" ldsrc="462"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$typeListOfTable" /><pi ref="true" /></ReturnType></Function><e ldsrc="463"><n>$attributeExpression</n></e><Function name="$deleteName" ldsrc="464,464"><Parameters><P name="itemsId" number="1"><type ispointer="true" ldsrc="464"><dt typename="ListOfInt" /><pi ref="true" /></type></P><P name="sessionId" number="2"><type ispointer="true" ldsrc="464"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$BOOLEAN$" /></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></return></FunctionBody></Function><Function name="MakeBusinessFunctions" internalname="MakeBusinessFunctions#14" access="public" storage="static" ldsrc="468,468"><Parameters><P name="tableName" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="468"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNodeList"><dt typename="XplNodeList" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="468,529"><documentation short="Puntos de entrada que debo crear por cada tabla:&#xD;&#xA;	-	bool UpdateLibros(List&lt;Libros&gt; libros);&#xD;&#xA;	-	List&lt;Libros&gt; GetListOfLibros();&#xD;&#xA;	-	bool DeleteLibros(List&lt;int&gt; librosId);&#xD;&#xA;Preparo los tipos&#xD;&#xA;" /><Decls><d name="typeOfTable" ldsrc="475"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="475"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="476"><fc><l><bo op="m"><l><n>typeOfTable</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><n>tableName</n></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="dataAccessType" ldsrc="477"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="477"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="478"><fc><l><bo op="m"><l><n>dataAccessType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><n>tableName</n></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="typeListOfTable" ldsrc="479"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="479"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="480"><fc><l><bo op="m"><l><n>typeListOfTable</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>typeOfTable</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="listOfTypesName" ldsrc="481"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="481"><e><new><type typename="XplIName" /><init ldsrc="481"><list><e><fc><l><bo op="m"><l><n>typeListOfTable</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e></list></init></new></e></i></d></Decls><Decls><d name="typeListOfInt" ldsrc="483"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="483"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="484"><fc><l><bo op="m"><l><n>typeListOfInt</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="ListOfInt" /></e></args></fc></e><documentation short="Preparo los INames&#xD;&#xA;" /><Decls><d name="updateName" ldsrc="486"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="486"><e><new><type typename="XplIName" /><init ldsrc="486"><list><e><bo><l><lit str="Update" /></l><r><n>tableName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="getListName" ldsrc="487"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="487"><e><new><type typename="XplIName" /><init ldsrc="487"><list><e><bo><l><lit str="GetCollectionOf" /></l><r><n>tableName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="deleteName" ldsrc="488"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="488"><e><new><type typename="XplIName" /><init ldsrc="488"><list><e><bo><l><lit str="Delete" /></l><r><n>tableName</n></r></bo></e></list></init></new></e></i></d></Decls><documentation short="Creo las funciones&#xD;&#xA;PENDIENTE : chequear la session sea valida&#xD;&#xA;" /><return ldsrc="491,528"><fc><l><bo op="m"><l><writecode ldsrc="492"><classmembers><e ldsrc="494"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTypesName</n></e><e><t ispointer="true"><dt typename="$typeOfTable" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="495"><fc><l><n>UtnEmall::Utils::List::New</n></l><args><e><n>ListOfInt</n></e><e><t typename="$INTEGER$" /></e></args></fc></e><Function name="$updateName" access="public" ldsrc="497,497"><Parameters><P name="items" number="1"><type ispointer="true" ldsrc="497"><dt typename="$typeListOfTable" /><pi ref="true" /></type></P><P name="sessionId" number="2"><type ispointer="true" ldsrc="497"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$BOOLEAN$" /><FunctionBody ldsrc="497,508"><Decls><d name="accessObj" ldsrc="498"><type ispointer="true"><dt typename="$dataAccessType" /><pi ref="true" /></type><i ldsrc="498"><e><new><type typename="$dataAccessType" /></new></e></i></d></Decls><for ldsrc="499,499"><init><dl><d name="item" ldsrc="499"><type ispointer="true"><dt typename="$typeOfTable" /><pi ref="true" /></type></d></dl></init><condition><n>items</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="499,506"><try ldsrc="500"><trybk ldsrc="500,502"><e ldsrc="501"><fc><l><bo op="m"><l><n>accessObj</n></l><r><n>Save</n></r></bo></l><args><e><n>item</n></e></args></fc></e></trybk><catchbk><init ldsrc="503"><d name="error" ldsrc="503"><type ispointer="true"><dt typename="Exception" /><pi ref="true" /></type></d></init><bk ldsrc="503,505"><return ldsrc="504,504"><lit str="false" type="bool" /></return></bk></catchbk></try></forblock></for><return ldsrc="507,507"><lit str="true" type="bool" /></return></FunctionBody></Function><Function name="$getListName" access="public" ldsrc="509,509"><Parameters><P name="sessionId" number="1"><type ispointer="true" ldsrc="509"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$typeListOfTable" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="509,512"><Decls><d name="accessObj" ldsrc="510"><type ispointer="true"><dt typename="$dataAccessType" /><pi ref="true" /></type><i ldsrc="510"><e><new><type typename="$dataAccessType" /></new></e></i></d></Decls><return ldsrc="511,511"><fc><l><bo op="m"><l><n>accessObj</n></l><r><n>LoadAll</n></r></bo></l><args><e><lit str="false" type="bool" /></e></args></fc></return></FunctionBody></Function><Function name="$deleteName" access="public" ldsrc="513,513"><Parameters><P name="itemsId" number="1"><type ispointer="true" ldsrc="513"><dt typename="ListOfInt" /><pi ref="true" /></type></P><P name="sessionId" number="2"><type ispointer="true" ldsrc="513"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$BOOLEAN$" /><FunctionBody ldsrc="513,527"><Decls><d name="accessObj" ldsrc="514"><type ispointer="true"><dt typename="$dataAccessType" /><pi ref="true" /></type><i ldsrc="514"><e><new><type typename="$dataAccessType" /></new></e></i></d></Decls><for ldsrc="515,515"><init><dl><d name="itemId" ldsrc="515"><type typename="$INTEGER$" /></d></dl></init><condition><n>itemsId</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="515,525"><try ldsrc="516"><trybk ldsrc="516,521"><documentation short=" accessObj.Delete( accessObj.Load( itemId ) );&#xD;&#xA;" /><Decls><d name="item" ldsrc="518"><type ispointer="true"><dt typename="$typeOfTable" /><pi ref="true" /></type><i ldsrc="518"><e><fc><l><bo op="m"><l><n>accessObj</n></l><r><n>Load</n></r></bo></l><args><e><n>itemId</n></e></args></fc></e></i></d></Decls><e ldsrc="519"><a><l><bo op="m"><l><n>item</n></l><r><n>Deleted</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="520"><fc><l><bo op="m"><l><n>accessObj</n></l><r><n>Save</n></r></bo></l><args><e><n>item</n></e></args></fc></e></trybk><catchbk><init ldsrc="522"><d name="error" ldsrc="522"><type ispointer="true"><dt typename="Exception" /><pi ref="true" /></type></d></init><bk ldsrc="522,524"><return ldsrc="523,523"><lit str="false" type="bool" /></return></bk></catchbk></try></forblock></for><return ldsrc="526,526"><lit str="true" type="bool" /></return></FunctionBody></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></return></FunctionBody></Function><documentation short="----------------------------------------------------------------------------&#xD;&#xA;Funciones de utilidad para leer los datos&#xD;&#xA;&#xD;&#xA;" /><Function name="ProcessModel" internalname="ProcessModel#15" access="public" storage="static" ldsrc="534,534"><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="534,539"><e ldsrc="537"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="536"><e><fc><l><n>InfService::ProcessModel2</n></l><args /></fc></e></writecode></e></args></fc></e><return ldsrc="538,538"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short="Metodo principal para declarar un servicio de soporte&#xD;&#xA;" /><Function name="New" internalname="New#16" access="public" storage="static" ldsrc="541,541"><Parameters><P name="ServiceName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="541" /></P><P name="StoreID" number="2"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="541" /></P><P name="Description" number="3"><type ispointer="true" typeStr="^_$STRING$" ldsrc="541"><dt typename="$STRING$" /><pi ref="true" /></type></P><P name="serviceData" number="4"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="541" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNamespace"><dt typename="XplNamespace" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="541,559"><Decls><d name="serviceName" ldsrc="542"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="542"><e><new><type typename="XplIName" /><init ldsrc="542"><list><e><bo><l><lit str="Store" /></l><r><fc><l><bo op="m"><l><n>StoreID</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="serviceNS" ldsrc="543"><type ispointer="true"><dt typename="XplNamespace" /><pi ref="true" /></type><i ldsrc="543"><e><cast><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><writecode ldsrc="543"><progunit><Namespace name="$serviceName" ldsrc="544,545" /></progunit></writecode></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>FirstNode</n></r></bo></l><args /></fc></e><type ispointer="true"><dt typename="XplNamespace" /><pi ref="true" /></type></cast></e></i></d></Decls><documentation short="serviceNS.Children().InsertAtEnd(serviceData.Children());&#xD;&#xA;" /><e ldsrc="551"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>serviceNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="550"><e><fc><l><n>InfService::New</n></l><args><e><n>$ServiceName</n></e><e><n>$StoreID</n></e><e><n>$Description</n></e></args></fc></e></writecode></e></args></fc></e><e ldsrc="552"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>serviceNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>serviceData</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="555"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>serviceNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="554"><e><fc><l><n>InfService::ProcessModel</n></l><args /></fc></e></writecode></e></args></fc></e><documentation short="context.CurrentNamespace.Children().InsertAtEnd(serviceNS);&#xD;&#xA;" /><return ldsrc="558,558"><n>serviceNS</n></return></FunctionBody></Function><Function name="New" internalname="New#17" access="public" storage="static" ldsrc="560,560"><Parameters><P name="ServiceName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="560" /></P><P name="StoreID" number="2"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="560" /></P><P name="Description" number="3"><type ispointer="true" typeStr="^_$STRING$" ldsrc="560"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="560,562"><return ldsrc="561,561"><writecode ldsrc="561"><e><fc><l><n>InfService::New2</n></l><args><e><n>$ServiceName</n></e><e><n>$StoreID</n></e><e><n>$Description</n></e></args></fc></e></writecode></return></FunctionBody></Function><Function name="New2" internalname="New2#18" access="public" storage="static" ldsrc="563,563"><Parameters><P name="ServiceName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="563" /></P><P name="StoreID" number="2"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="563" /></P><P name="Description" number="3"><type ispointer="true" typeStr="^_$STRING$" ldsrc="563"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="563,568"><e ldsrc="564"><a><l><n>serviceName</n></l><r><n>ServiceName</n></r></a></e><e ldsrc="565"><a><l><n>storeID</n></l><r><n>StoreID</n></r></a></e><e ldsrc="566"><a><l><n>description</n></l><r><n>Description</n></r></a></e><return ldsrc="567,567"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short="Define una nueva tabla&#xD;&#xA;" /><Function name="Table" internalname="Table#19" access="public" storage="static" ldsrc="570,570"><Parameters><P name="Name" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="570" /></P><P name="tableData" number="2"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="570" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="570,572"><return ldsrc="571,571"><fc><l><n>Table</n></l><args><e><n>Name</n></e><e><lit str="false" type="bool" /></e><e><n>tableData</n></e></args></fc></return></FunctionBody></Function><Function name="Table" internalname="Table#20" access="public" storage="static" ldsrc="573,573"><Parameters><P name="Name" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="573" /></P><P name="isStorage" number="2"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="573" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="573,581"><Decls><d name="newTable" ldsrc="574"><type ispointer="true"><dt typename="Table" /><pi ref="true" /></type><i ldsrc="574"><e><new><type typename="Table" /></new></e></i></d></Decls><e ldsrc="575"><a><l><n>currentTable</n></l><r><n>newTable</n></r></a></e><e ldsrc="576"><a><l><bo op="m"><l><n>newTable</n></l><r><n>Name</n></r></bo></l><r><bo op="m"><l><n>Name</n></l><r><n>Identifier</n></r></bo></r></a></e><e ldsrc="577"><a><l><bo op="m"><l><n>newTable</n></l><r><n>IsStorage</n></r></bo></l><r><n>isStorage</n></r></a></e><Decls><d name="tableCount" ldsrc="578"><type typename="$INTEGER$" /><i ldsrc="578"><e><bo op="m"><l><n>tables</n></l><r><n>Count</n></r></bo></e></i></d></Decls><e ldsrc="579"><fc><l><bo op="m"><l><n>tables</n></l><r><n>Add</n></r></bo></l><args><e><n>newTable</n></e></args></fc></e><return ldsrc="580,580"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="Table" internalname="Table#21" access="public" storage="static" ldsrc="582,582"><Parameters><P name="Name" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="582" /></P><P name="isStorage" number="2"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="582" /></P><P name="tableData" number="3"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="582" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="582,597"><documentation short="context.CurrentNamespace.Children().InsertAtBegin(tableData.Children());&#xD;&#xA;" /><Decls><d name="isStorageExp" ldsrc="584"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type></d></Decls><if ldsrc="585"><boolean><n>isStorage</n></boolean><ifbk><e ldsrc="586"><a><l><n>isStorageExp</n></l><r><writecode ldsrc="586"><e><lit str="true" type="bool" /></e></writecode></r></a></e></ifbk><else ldsrc="587"><e ldsrc="588"><a><l><n>isStorageExp</n></l><r><writecode ldsrc="588"><e><lit str="false" type="bool" /></e></writecode></r></a></e></else></if><e ldsrc="592"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="591"><e><fc><l><n>InfService::Table</n></l><args><e><n>$Name</n></e><e><n>$isStorageExp</n></e></args></fc></e></writecode></e></args></fc></e><e ldsrc="595"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>tableData</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><return ldsrc="596,596"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short="Establece una relacion entre las tablas Source y Target&#xD;&#xA;&#xD;&#xA;Type : UnoAUno, UnoAMuchos, MuchosAUno, MuchosAMuchos&#xD;&#xA;" /><Function name="Relation2" internalname="Relation2#22" access="public" storage="static" ldsrc="601,601"><Parameters><P name="Source" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="601" /></P><P name="Target" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="601" /></P><P name="Type" number="3"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="601" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="601,610"><Decls><d name="relation" ldsrc="602"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="602"><e><new><type typename="Relation" /></new></e></i></d></Decls><e ldsrc="603"><a><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><n>Source</n></l><r><n>Identifier</n></r></bo></r></a></e><e ldsrc="604"><a><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><n>Target</n></l><r><n>Identifier</n></r></bo></r></a></e><e ldsrc="605"><a><l><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></l><r><bo op="m"><l><n>Type</n></l><r><n>Identifier</n></r></bo></r></a></e><e ldsrc="606"><a><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><bo><l><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="_To_" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></r></a></e><e ldsrc="607"><a><l><bo op="m"><l><n>relation</n></l><r><n>FieldHolderName</n></r></bo></l><r><new><type typename="XplIName" /><init ldsrc="607"><list><e><bo><l><lit str="RelationHolder_" /></l><r><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></r></bo></e></list></init></new></r></a></e><e ldsrc="608"><fc><l><bo op="m"><l><n>relations</n></l><r><n>Add</n></r></bo></l><args><e><n>relation</n></e></args></fc></e><return ldsrc="609,609"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="Relation" internalname="Relation#23" access="public" storage="static" ldsrc="611,611"><Parameters><P name="Source" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="611" /></P><P name="Target" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="611" /></P><P name="Type" number="3"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="611" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="611,616"><e ldsrc="614"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="613"><e><fc><l><n>InfService::Relation2</n></l><args><e><n>$Source</n></e><e><n>$Target</n></e><e><n>$Type</n></e></args></fc></e></writecode></e></args></fc></e><return ldsrc="615,615"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short="Metodos internos para tablas&#xD;&#xA;" /><Function name="Field" internalname="Field#24" access="public" storage="static" ldsrc="619,619"><Parameters><P name="Name" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="619" /></P><P name="Type" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="619" /></P><P name="Description" number="3"><type ispointer="true" typeStr="^_$STRING$" ldsrc="619"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="619,626"><Decls><d name="field" ldsrc="620"><type ispointer="true"><dt typename="Field" /><pi ref="true" /></type><i ldsrc="620"><e><new><type typename="Field" /></new></e></i></d></Decls><e ldsrc="621"><a><l><bo op="m"><l><n>field</n></l><r><n>Name</n></r></bo></l><r><bo op="m"><l><n>Name</n></l><r><n>Identifier</n></r></bo></r></a></e><e ldsrc="622"><a><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><bo op="m"><l><n>Type</n></l><r><n>Identifier</n></r></bo></r></a></e><e ldsrc="623"><a><l><bo op="m"><l><n>field</n></l><r><n>Description</n></r></bo></l><r><n>Description</n></r></a></e><e ldsrc="624"><fc><l><bo op="m"><l><bo op="m"><l><n>currentTable</n></l><r><n>Fields</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>field</n></e></args></fc></e><return ldsrc="625,625"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="AddGetListMethods" internalname="AddGetListMethods#25" access="public" storage="static" ldsrc="628,628"><Parameters><P name="businessClass" number="1"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplClass" ldsrc="628"><dt typename="XplClass" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="629,869"><for ldsrc="630,630"><init><dl><d name="table" ldsrc="630"><type ispointer="true"><dt typename="Table" /><pi ref="true" /></type></d></dl></init><condition><n>tables</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="631,866"><for ldsrc="632,632"><init><dl><d name="relation" ldsrc="632"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="633,865"><Decls><d name="getListFunction" ldsrc="634"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="634"><e><lit str="0" type="null" /></e></i></d></Decls><if ldsrc="635"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="636,708"><switch ldsrc="637"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="639"><e><lit str="OneToOne" /></e><bk><bk ldsrc="640,660"><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="sourceEntityType" ldsrc="642"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="642"><e><new><type typename="XplIName" /><init ldsrc="642"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfSourceType" ldsrc="643"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="643"><e><new><type typename="XplIName" /><init ldsrc="643"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>sourceEntityType</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="dataAccessSource" ldsrc="644"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="644"><e><new><type typename="XplIName" /><init ldsrc="644"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idExternOTM" ldsrc="645"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="645"><e><new><type typename="XplIName" /><init ldsrc="645"><list><e><bo><l><bo><l><bo><l><bo op="m"><l><n>sourceEntityType</n></l><r><n>Identifier</n></r></bo></l><r><lit str="::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="647"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="647"><e><new><type typename="XplIName" /><init ldsrc="647"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="659"><a><l><n>getListFunction</n></l><r><writecode ldsrc="650"><classmembers><e ldsrc="652"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfSourceType</n></e><e><t ispointer="true"><dt typename="$sourceEntityType" /><pi ref="true" /></t></e></args></fc></e><Function name="$functionNameOTM" access="public" ldsrc="654,654"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="654" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfSourceType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="655,658"><Decls><d name="damTarget" ldsrc="656"><type ispointer="true"><dt typename="$dataAccessSource" /><pi ref="true" /></type><i ldsrc="656"><e><new><type typename="$dataAccessSource" /></new></e></i></d></Decls><return ldsrc="657,657"><fc><l><bo op="m"><l><n>damTarget</n></l><r><n>LoadWhere</n></r></bo></l><args><e><n>$idExternOTM</n></e><e><fc><l><bo op="m"><l><n>id</n></l><r><n>ToString</n></r></bo></l><args /></fc></e><e><lit str="false" type="bool" /></e><e><n>OperatorType::Equal</n></e></args></fc></return></FunctionBody></Function></classmembers></writecode></r></a></e></bk><jump ldsrc="660" /></bk></case><case ldsrc="662"><e><lit str="OneToMany" /></e><bk><bk ldsrc="663,704"><documentation short=" Establish the generic for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="listOfManyOTMName" ldsrc="665"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="665"><e><new><type typename="XplIName" /><init ldsrc="665"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyOTMType" ldsrc="666"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="666"><e><new><type typename="XplIName" /><init ldsrc="666"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="manyEntityOTMType" ldsrc="668"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="668"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="669"><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="entityTarget" ldsrc="671"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="671"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="672"><fc><l><bo op="m"><l><n>entityTarget</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessSource" ldsrc="675"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="675"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="676"><fc><l><bo op="m"><l><n>dataAccessSource</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessTarget" ldsrc="679"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="679"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="680"><fc><l><bo op="m"><l><n>dataAccessTarget</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="683"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="683"><e><new><type typename="XplIName" /><init ldsrc="683"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameTarget" ldsrc="684"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="684"><e><new><type typename="XplIName" /><init ldsrc="684"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameSource" ldsrc="685"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="685"><e><new><type typename="XplIName" /><init ldsrc="685"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="idExternOTM" ldsrc="688"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="688"><e><new><type typename="XplIName" /><init ldsrc="688"><list><e><bo><l><bo><l><bo><l><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></l><r><lit str="::DBId" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="703"><a><l><n>getListFunction</n></l><r><writecode ldsrc="691"><classmembers><e ldsrc="693"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyOTMType</n></e><e><t ispointer="true"><dt typename="$manyEntityOTMType" /><pi ref="true" /></t></e></args></fc></e><Function name="$functionNameOTM" access="public" ldsrc="695,695"><Parameters><P name="$idNameTarget" number="1"><type typename="$INTEGER$" ldsrc="695" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyOTMType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="696,702"><Decls><d name="dam" ldsrc="697"><type ispointer="true"><dt typename="$dataAccessSource" /><pi ref="true" /></type><i ldsrc="697"><e><new><type typename="$dataAccessSource" /></new></e></i></d></Decls><Decls><d name="rel" ldsrc="698"><type typename="$entityTarget" /><i ldsrc="698"><e><fc><l><bo op="m"><l><n>dam</n></l><r><n>Load</n></r></bo></l><args><e><n>$idNameTarget</n></e><e><lit str="false" type="bool" /></e></args></fc></e></i></d></Decls><Decls><d name="damTarget" ldsrc="700"><type ispointer="true"><dt typename="$dataAccessTarget" /><pi ref="true" /></type><i ldsrc="700"><e><new><type typename="$dataAccessTarget" /></new></e></i></d></Decls><return ldsrc="701,701"><fc><l><bo op="m"><l><n>damTarget</n></l><r><n>LoadWhere</n></r></bo></l><args><e><n>$idExternOTM</n></e><e><fc><l><bo op="m"><l><bo op="m"><l><n>rel</n></l><r><n>$idNameSource</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e><e><lit str="false" type="bool" /></e><e><n>OperatorType::Equal</n></e></args></fc></return></FunctionBody></Function></classmembers></writecode></r></a></e></bk><jump ldsrc="705" /></bk></case></switch></ifbk></if><if ldsrc="709"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="710,862"><switch ldsrc="711"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="713"><e><lit str="OneToOne" /></e><bk><bk ldsrc="714,741"><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="targetEntityType" ldsrc="716"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="716"><e><new><type typename="XplIName" /><init ldsrc="716"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfTargetType" ldsrc="717"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="717"><e><new><type typename="XplIName" /><init ldsrc="717"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>targetEntityType</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="dataAccessSource" ldsrc="719"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="719"><e><new><type typename="XplIName" /><init ldsrc="719"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="dataAccessTarget" ldsrc="720"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="720"><e><new><type typename="XplIName" /><init ldsrc="720"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idFieldTarget" ldsrc="722"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="722"><e><new><type typename="XplIName" /><init ldsrc="722"><list><e><bo><l><bo><l><bo op="m"><l><n>targetEntityType</n></l><r><n>Identifier</n></r></bo></l><r><lit str="::DBId" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idTarget" ldsrc="723"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="723"><e><new><type typename="XplIName" /><init ldsrc="723"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="726"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="726"><e><new><type typename="XplIName" /><init ldsrc="726"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="740"><a><l><n>getListFunction</n></l><r><writecode ldsrc="729"><classmembers><e ldsrc="731"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTargetType</n></e><e><t ispointer="true"><dt typename="$targetEntityType" /><pi ref="true" /></t></e></args></fc></e><Function name="$functionNameOTM" access="public" ldsrc="733,733"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="733" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfTargetType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="734,739"><Decls><d name="daSource" ldsrc="735"><type ispointer="true"><dt typename="$dataAccessSource" /><pi ref="true" /></type><i ldsrc="735"><e><new><type typename="$dataAccessSource" /></new></e></i></d></Decls><Decls><d name="daTarget" ldsrc="736"><type ispointer="true"><dt typename="$dataAccessTarget" /><pi ref="true" /></type><i ldsrc="736"><e><new><type typename="$dataAccessTarget" /></new></e></i></d></Decls><return ldsrc="738,738"><fc><l><bo op="m"><l><n>daTarget</n></l><r><n>LoadWhere</n></r></bo></l><args><e><n>$idFieldTarget</n></e><e><fc><l><bo op="m"><l><bo op="m"><l><fc><l><bo op="m"><l><n>daSource</n></l><r><n>Load</n></r></bo></l><args><e><n>id</n></e><e><lit str="false" type="bool" /></e></args></fc></l><r><n>$idTarget</n></r></bo></l><r><n>ToString</n></r></bo></l><args><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></e><e><lit str="false" type="bool" /></e><e><n>OperatorType::Equal</n></e></args></fc></return></FunctionBody></Function></classmembers></writecode></r></a></e></bk><jump ldsrc="741" /></bk></case><case ldsrc="743"><e><lit str="OneToMany" /></e><bk><bk ldsrc="744,773"><documentation short=" Establish the generic for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="listOfManyOTMName" ldsrc="746"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="746"><e><new><type typename="XplIName" /><init ldsrc="746"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyOTMType" ldsrc="747"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="747"><e><new><type typename="XplIName" /><init ldsrc="747"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="manyEntityOTMType" ldsrc="748"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="748"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="749"><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessManyOTMType" ldsrc="752"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="752"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="753"><fc><l><bo op="m"><l><n>dataAccessManyOTMType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="756"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="756"><e><new><type typename="XplIName" /><init ldsrc="756"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameOTM" ldsrc="757"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="757"><e><new><type typename="XplIName" /><init ldsrc="757"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="idExternOTM" ldsrc="760"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="760"><e><new><type typename="XplIName" /><init ldsrc="760"><list><e><bo><l><bo><l><bo><l><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></l><r><lit str="::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="772"><a><l><n>getListFunction</n></l><r><writecode ldsrc="763"><classmembers><e ldsrc="765"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyOTMType</n></e><e><t ispointer="true"><dt typename="$manyEntityOTMType" /><pi ref="true" /></t></e></args></fc></e><Function name="$functionNameOTM" access="public" ldsrc="767,767"><Parameters><P name="$idNameOTM" number="1"><type typename="$INTEGER$" ldsrc="767" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyOTMType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="768,771"><Decls><d name="dam" ldsrc="769"><type ispointer="true"><dt typename="$dataAccessManyOTMType" /><pi ref="true" /></type><i ldsrc="769"><e><new><type typename="$dataAccessManyOTMType" /></new></e></i></d></Decls><return ldsrc="770,770"><fc><l><bo op="m"><l><n>dam</n></l><r><n>LoadWhere</n></r></bo></l><args><e><n>$idExternOTM</n></e><e><fc><l><bo op="m"><l><n>$idNameOTM</n></l><r><n>ToString</n></r></bo></l><args /></fc></e><e><lit str="false" type="bool" /></e><e><n>OperatorType::Equal</n></e></args></fc></return></FunctionBody></Function></classmembers></writecode></r></a></e></bk><jump ldsrc="773" /></bk></case><case ldsrc="775"><e><lit str="ManyToMany" /></e><bk><bk ldsrc="776,860"><documentation short=" Establish the generic for the &quot;many&quot; classes&#xD;&#xA;" /><Decls><d name="listOfManyAName" ldsrc="778"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="778"><e><new><type typename="XplIName" /><init ldsrc="778"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyAType" ldsrc="779"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="779"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="780"><fc><l><bo op="m"><l><n>listOfManyAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></args></fc></e><Decls><d name="manyEntityAType" ldsrc="781"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="781"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="782"><fc><l><bo op="m"><l><n>manyEntityAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="listOfManyBName" ldsrc="784"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="784"><e><new><type typename="XplIName" /><init ldsrc="784"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyBType" ldsrc="785"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="785"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="786"><fc><l><bo op="m"><l><n>listOfManyBType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></args></fc></e><Decls><d name="manyEntityBType" ldsrc="787"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="787"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="788"><fc><l><bo op="m"><l><n>manyEntityBType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessManyAType" ldsrc="791"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="791"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="792"><fc><l><bo op="m"><l><n>dataAccessManyAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="dataAccessManyBType" ldsrc="793"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="793"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="794"><fc><l><bo op="m"><l><n>dataAccessManyBType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameA" ldsrc="797"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="797"><e><new><type typename="XplIName" /><init ldsrc="797"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameA" ldsrc="798"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="798"><e><new><type typename="XplIName" /><init ldsrc="798"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="functionNameB" ldsrc="799"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="799"><e><new><type typename="XplIName" /><init ldsrc="799"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameB" ldsrc="800"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="800"><e><new><type typename="XplIName" /><init ldsrc="800"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="idExternA" ldsrc="803"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="803"><e><new><type typename="XplIName" /><init ldsrc="803"><list><e><bo><l><bo><l><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="Entity::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idAForAssociative" ldsrc="804"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="804"><e><new><type typename="XplIName" /><init ldsrc="804"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idExternB" ldsrc="805"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="805"><e><new><type typename="XplIName" /><init ldsrc="805"><list><e><bo><l><bo><l><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="Entity::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idBForAssociative" ldsrc="806"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="806"><e><new><type typename="XplIName" /><init ldsrc="806"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the associative class, data access, and generic list for it&#xD;&#xA;" /><Decls><d name="associativeListName" ldsrc="809"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="809"><e><new><type typename="XplIName" /><init ldsrc="809"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="associativeClassType" ldsrc="810"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="810"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="811"><fc><l><bo op="m"><l><n>associativeClassType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="associativeClassDAType" ldsrc="812"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="812"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="813"><fc><l><bo op="m"><l><n>associativeClassDAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="associativeListType" ldsrc="814"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="814"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="815"><fc><l><bo op="m"><l><n>associativeListType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></r></bo></e></args></fc></e><documentation short=" The field that holds the intermediate entity&#xD;&#xA;" /><Decls><d name="manyToManyFieldHolder" ldsrc="817"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="817"><e><bo op="m"><l><n>relation</n></l><r><n>FieldHolderName</n></r></bo></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="859"><a><l><n>getListFunction</n></l><r><writecode ldsrc="820"><classmembers><e ldsrc="822"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$associativeListName</n></e><e><t ispointer="true"><dt typename="$associativeClassType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="823"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyAName</n></e><e><t ispointer="true"><dt typename="$manyEntityAType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="824"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyBName</n></e><e><t ispointer="true"><dt typename="$manyEntityBType" /><pi ref="true" /></t></e></args></fc></e><Function name="$functionNameA" access="public" ldsrc="827,827"><Parameters><P name="$idNameB" number="1"><type typename="$INTEGER$" ldsrc="827" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyAType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="828,842"><Decls><d name="associativeDA" ldsrc="829"><type ispointer="true"><dt typename="$associativeClassDAType" /><pi ref="true" /></type><i ldsrc="829"><e><new><type typename="$associativeClassDAType" /></new></e></i></d></Decls><Decls><d name="manyDA" ldsrc="830"><type ispointer="true"><dt typename="$dataAccessManyAType" /><pi ref="true" /></type><i ldsrc="830"><e><new><type typename="$dataAccessManyAType" /></new></e></i></d></Decls><Decls><d name="result" ldsrc="831"><type ispointer="true"><dt typename="$listOfManyAType" /><pi ref="true" /></type><i ldsrc="831"><e><new><type typename="$listOfManyAType" /></new></e></i></d></Decls><Decls><d name="associativeList" ldsrc="833"><type ispointer="true"><dt typename="$associativeListType" /><pi ref="true" /></type><i ldsrc="833"><e><fc><l><bo op="m"><l><n>associativeDA</n></l><r><n>LoadWhere</n></r></bo></l><args><e><n>$idExternB</n></e><e><fc><l><bo op="m"><l><n>$idNameB</n></l><r><n>ToString</n></r></bo></l><args /></fc></e><e><lit str="false" type="bool" /></e><e><n>OperatorType::Equal</n></e></args></fc></e></i></d></Decls><for ldsrc="834,834"><init><dl><d name="associativeEntity" ldsrc="834"><type ispointer="true"><dt typename="$associativeClassType" /><pi ref="true" /></type></d></dl></init><condition><n>associativeList</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="835,839"><Decls><d name="entity" ldsrc="836"><type ispointer="true"><dt typename="$manyEntityAType" /><pi ref="true" /></type><i ldsrc="836"><e><fc><l><bo op="m"><l><n>manyDA</n></l><r><n>Load</n></r></bo></l><args><e><bo op="m"><l><n>associativeEntity</n></l><r><n>$idAForAssociative</n></r></bo></e><e><lit str="false" type="bool" /></e></args></fc></e></i></d></Decls><e ldsrc="837"><a><l><bo op="m"><l><n>entity</n></l><r><n>$manyToManyFieldHolder</n></r></bo></l><r><n>associativeEntity</n></r></a></e><e ldsrc="838"><fc><l><bo op="m"><l><n>result</n></l><r><n>Add</n></r></bo></l><args><e><n>entity</n></e></args></fc></e></forblock></for><return ldsrc="841,841"><n>result</n></return></FunctionBody></Function><Function name="$functionNameB" access="public" ldsrc="844,844"><Parameters><P name="$idNameA" number="1"><type typename="$INTEGER$" ldsrc="844" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyBType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="845,858"><Decls><d name="associativeDA" ldsrc="846"><type ispointer="true"><dt typename="$associativeClassDAType" /><pi ref="true" /></type><i ldsrc="846"><e><new><type typename="$associativeClassDAType" /></new></e></i></d></Decls><Decls><d name="manyDA" ldsrc="847"><type ispointer="true"><dt typename="$dataAccessManyBType" /><pi ref="true" /></type><i ldsrc="847"><e><new><type typename="$dataAccessManyBType" /></new></e></i></d></Decls><Decls><d name="result" ldsrc="848"><type ispointer="true"><dt typename="$listOfManyBType" /><pi ref="true" /></type><i ldsrc="848"><e><new><type typename="$listOfManyBType" /></new></e></i></d></Decls><Decls><d name="associativeList" ldsrc="850"><type ispointer="true"><dt typename="$associativeListType" /><pi ref="true" /></type><i ldsrc="850"><e><fc><l><bo op="m"><l><n>associativeDA</n></l><r><n>LoadWhere</n></r></bo></l><args><e><n>$idExternA</n></e><e><fc><l><bo op="m"><l><n>$idNameA</n></l><r><n>ToString</n></r></bo></l><args /></fc></e><e><lit str="false" type="bool" /></e><e><n>OperatorType::Equal</n></e></args></fc></e></i></d></Decls><for ldsrc="851,851"><init><dl><d name="associativeEntity" ldsrc="851"><type ispointer="true"><dt typename="$associativeClassType" /><pi ref="true" /></type></d></dl></init><condition><n>associativeList</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="852,856"><Decls><d name="entity" ldsrc="853"><type ispointer="true"><dt typename="$manyEntityBType" /><pi ref="true" /></type><i ldsrc="853"><e><fc><l><bo op="m"><l><n>manyDA</n></l><r><n>Load</n></r></bo></l><args><e><bo op="m"><l><n>associativeEntity</n></l><r><n>$idBForAssociative</n></r></bo></e><e><lit str="false" type="bool" /></e></args></fc></e></i></d></Decls><e ldsrc="854"><a><l><bo op="m"><l><n>entity</n></l><r><n>$manyToManyFieldHolder</n></r></bo></l><r><n>associativeEntity</n></r></a></e><e ldsrc="855"><fc><l><bo op="m"><l><n>result</n></l><r><n>Add</n></r></bo></l><args><e><n>entity</n></e></args></fc></e></forblock></for><return ldsrc="857,857"><n>result</n></return></FunctionBody></Function></classmembers></writecode></r></a></e></bk><jump ldsrc="860" /></bk></case></switch></ifbk></if><if ldsrc="863"><boolean><bo op="NOTEQ"><l><n>getListFunction</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk><e ldsrc="864"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>businessClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>getListFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></forblock></for></forblock></for><return ldsrc="868,868"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="AddGetListInterfaces" internalname="AddGetListInterfaces#26" access="public" storage="static" ldsrc="871,871"><Parameters><P name="businessInterface" number="1"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplClass" ldsrc="871"><dt typename="XplClass" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="872,1181"><Decls><d name="attributeExpression" ldsrc="873"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="873"><e><writecode ldsrc="873"><e><fc><l><n>Zoe::Attribute::Add</n></l><args><e><lit str="System.ServiceModel.OperationContract" /></e></args></fc></e></writecode></e></i></d></Decls><if ldsrc="874"><boolean><n>isMobil</n></boolean><ifbk ldsrc="874,876"><e ldsrc="875"><fc><l><bo op="m"><l><n>attributeExpression</n></l><r><n>set_Content</n></r></bo></l><args><e><fc><l><n>XplExpression::new_empty</n></l><args /></fc></e></args></fc></e></ifbk></if><for ldsrc="878,878"><init><dl><d name="table" ldsrc="878"><type ispointer="true"><dt typename="Table" /><pi ref="true" /></type></d></dl></init><condition><n>tables</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="879,1071"><for ldsrc="880,880"><init><dl><d name="relation" ldsrc="880"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="881,1070"><Decls><d name="getListFunction" ldsrc="882"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="882"><e><lit str="0" type="null" /></e></i></d></Decls><if ldsrc="883"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="884,947"><switch ldsrc="885"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="887"><e><lit str="OneToOne" /></e><bk><bk ldsrc="888,906"><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="sourceEntityType" ldsrc="890"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="890"><e><new><type typename="XplIName" /><init ldsrc="890"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfSourceType" ldsrc="891"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="891"><e><new><type typename="XplIName" /><init ldsrc="891"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>sourceEntityType</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="dataAccessSource" ldsrc="892"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="892"><e><new><type typename="XplIName" /><init ldsrc="892"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idExternOTM" ldsrc="893"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="893"><e><new><type typename="XplIName" /><init ldsrc="893"><list><e><bo><l><bo><l><bo><l><bo op="m"><l><n>sourceEntityType</n></l><r><n>Identifier</n></r></bo></l><r><lit str="::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="895"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="895"><e><new><type typename="XplIName" /><init ldsrc="895"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="904"><a><l><n>getListFunction</n></l><r><writecode ldsrc="898"><classmembers><e ldsrc="900"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfSourceType</n></e><e><t ispointer="true"><dt typename="$sourceEntityType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="902"><n>$attributeExpression</n></e><Function name="$functionNameOTM" access="public" ldsrc="903,903"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="903" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfSourceType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></r></a></e><documentation short=" businessClass.Children().InsertAtEnd(getListFunction.Children());&#xD;&#xA;" /></bk><jump ldsrc="906" /></bk></case><case ldsrc="907"><e><lit str="OneToMany" /></e><bk><bk ldsrc="908,944"><documentation short=" Establish the generic for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="listOfManyOTMName" ldsrc="910"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="910"><e><new><type typename="XplIName" /><init ldsrc="910"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyOTMType" ldsrc="911"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="911"><e><new><type typename="XplIName" /><init ldsrc="911"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="manyEntityOTMType" ldsrc="913"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="913"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="914"><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="entityTarget" ldsrc="916"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="916"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="917"><fc><l><bo op="m"><l><n>entityTarget</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessSource" ldsrc="920"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="920"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="921"><fc><l><bo op="m"><l><n>dataAccessSource</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessTarget" ldsrc="924"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="924"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="925"><fc><l><bo op="m"><l><n>dataAccessTarget</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="928"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="928"><e><new><type typename="XplIName" /><init ldsrc="928"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameTarget" ldsrc="929"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="929"><e><new><type typename="XplIName" /><init ldsrc="929"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameSource" ldsrc="930"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="930"><e><new><type typename="XplIName" /><init ldsrc="930"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="idExternOTM" ldsrc="933"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="933"><e><new><type typename="XplIName" /><init ldsrc="933"><list><e><bo><l><bo><l><bo><l><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></l><r><lit str="::DBId" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="942"><a><l><n>getListFunction</n></l><r><writecode ldsrc="936"><classmembers><e ldsrc="938"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyOTMType</n></e><e><t ispointer="true"><dt typename="$manyEntityOTMType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="940"><n>$attributeExpression</n></e><Function name="$functionNameOTM" access="public" ldsrc="941,941"><Parameters><P name="$idNameTarget" number="1"><type typename="$INTEGER$" ldsrc="941" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyOTMType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></r></a></e><documentation short=" businessClass.Children().InsertAtEnd(getListFunction.Children());&#xD;&#xA;" /></bk><jump ldsrc="944" /></bk></case></switch></ifbk></if><if ldsrc="948"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><n>table</n></l><r><n>Name</n></r></bo></r></bo></boolean><ifbk ldsrc="949,1067"><switch ldsrc="950"><e><bo op="m"><l><n>relation</n></l><r><n>Type</n></r></bo></e><case ldsrc="952"><e><lit str="OneToOne" /></e><bk><bk ldsrc="953,976"><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="targetEntityType" ldsrc="955"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="955"><e><new><type typename="XplIName" /><init ldsrc="955"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfTargetType" ldsrc="956"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="956"><e><new><type typename="XplIName" /><init ldsrc="956"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>targetEntityType</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="dataAccessSource" ldsrc="958"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="958"><e><new><type typename="XplIName" /><init ldsrc="958"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="dataAccessTarget" ldsrc="959"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="959"><e><new><type typename="XplIName" /><init ldsrc="959"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idFieldTarget" ldsrc="961"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="961"><e><new><type typename="XplIName" /><init ldsrc="961"><list><e><bo><l><bo><l><bo op="m"><l><n>targetEntityType</n></l><r><n>Identifier</n></r></bo></l><r><lit str="::DBId" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idTarget" ldsrc="962"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="962"><e><new><type typename="XplIName" /><init ldsrc="962"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="965"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="965"><e><new><type typename="XplIName" /><init ldsrc="965"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="974"><a><l><n>getListFunction</n></l><r><writecode ldsrc="968"><classmembers><e ldsrc="970"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTargetType</n></e><e><t ispointer="true"><dt typename="$targetEntityType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="972"><n>$attributeExpression</n></e><Function name="$functionNameOTM" access="public" ldsrc="973,973"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="973" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfTargetType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></r></a></e><documentation short=" businessClass.Children().InsertAtEnd(getListFunction.Children());&#xD;&#xA;" /></bk><jump ldsrc="976" /></bk></case><case ldsrc="978"><e><lit str="OneToMany" /></e><bk><bk ldsrc="979,1005"><documentation short=" Establish the generic for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="listOfManyOTMName" ldsrc="981"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="981"><e><new><type typename="XplIName" /><init ldsrc="981"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyOTMType" ldsrc="982"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="982"><e><new><type typename="XplIName" /><init ldsrc="982"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="manyEntityOTMType" ldsrc="983"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="983"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="984"><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessManyOTMType" ldsrc="987"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="987"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="988"><fc><l><bo op="m"><l><n>dataAccessManyOTMType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameOTM" ldsrc="991"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="991"><e><new><type typename="XplIName" /><init ldsrc="991"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameOTM" ldsrc="992"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="992"><e><new><type typename="XplIName" /><init ldsrc="992"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="idExternOTM" ldsrc="995"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="995"><e><new><type typename="XplIName" /><init ldsrc="995"><list><e><bo><l><bo><l><bo><l><fc><l><bo op="m"><l><n>manyEntityOTMType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></l><r><lit str="::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="1004"><a><l><n>getListFunction</n></l><r><writecode ldsrc="998"><classmembers><e ldsrc="1000"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyOTMType</n></e><e><t ispointer="true"><dt typename="$manyEntityOTMType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="1002"><n>$attributeExpression</n></e><Function name="$functionNameOTM" access="public" ldsrc="1003,1003"><Parameters><P name="$idNameOTM" number="1"><type typename="$INTEGER$" ldsrc="1003" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyOTMType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></r></a></e></bk><jump ldsrc="1005" /></bk></case><case ldsrc="1006"><e><lit str="ManyToMany" /></e><bk><bk ldsrc="1007,1064"><documentation short=" Establish the generic for the &quot;many&quot; classes&#xD;&#xA;" /><Decls><d name="listOfManyAName" ldsrc="1009"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1009"><e><new><type typename="XplIName" /><init ldsrc="1009"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyAType" ldsrc="1010"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1010"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1011"><fc><l><bo op="m"><l><n>listOfManyAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></args></fc></e><Decls><d name="manyEntityAType" ldsrc="1012"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1012"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1013"><fc><l><bo op="m"><l><n>manyEntityAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="listOfManyBName" ldsrc="1015"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1015"><e><new><type typename="XplIName" /><init ldsrc="1015"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfManyBType" ldsrc="1016"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1016"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1017"><fc><l><bo op="m"><l><n>listOfManyBType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></args></fc></e><Decls><d name="manyEntityBType" ldsrc="1018"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1018"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1019"><fc><l><bo op="m"><l><n>manyEntityBType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><documentation short=" Establish the data access for the &quot;many&quot; class&#xD;&#xA;" /><Decls><d name="dataAccessManyAType" ldsrc="1022"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1022"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1023"><fc><l><bo op="m"><l><n>dataAccessManyAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="dataAccessManyBType" ldsrc="1024"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1024"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1025"><fc><l><bo op="m"><l><n>dataAccessManyBType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><documentation short=" Establish the method name, parameters&#xD;&#xA;" /><Decls><d name="functionNameA" ldsrc="1028"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1028"><e><new><type typename="XplIName" /><init ldsrc="1028"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameA" ldsrc="1029"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1029"><e><new><type typename="XplIName" /><init ldsrc="1029"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="functionNameB" ldsrc="1030"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1030"><e><new><type typename="XplIName" /><init ldsrc="1030"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="By" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idNameB" ldsrc="1031"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1031"><e><new><type typename="XplIName" /><init ldsrc="1031"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the parameters for the load of &quot;many&quot; entities&#xD;&#xA;" /><Decls><d name="idExternA" ldsrc="1034"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1034"><e><new><type typename="XplIName" /><init ldsrc="1034"><list><e><bo><l><bo><l><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="Entity::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idAForAssociative" ldsrc="1035"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1035"><e><new><type typename="XplIName" /><init ldsrc="1035"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idExternB" ldsrc="1036"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1036"><e><new><type typename="XplIName" /><init ldsrc="1036"><list><e><bo><l><bo><l><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="Entity::DB" /></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idBForAssociative" ldsrc="1037"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1037"><e><new><type typename="XplIName" /><init ldsrc="1037"><list><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><lit str="Id" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the associative class, data access, and generic list for it&#xD;&#xA;" /><Decls><d name="associativeListName" ldsrc="1040"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1040"><e><new><type typename="XplIName" /><init ldsrc="1040"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="associativeClassType" ldsrc="1041"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1041"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1042"><fc><l><bo op="m"><l><n>associativeClassType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="associativeClassDAType" ldsrc="1043"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1043"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1044"><fc><l><bo op="m"><l><n>associativeClassDAType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="associativeListType" ldsrc="1045"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1045"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1046"><fc><l><bo op="m"><l><n>associativeListType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>relation</n></l><r><n>TypeName</n></r></bo></r></bo></e></args></fc></e><documentation short=" The field that holds the intermediate entity&#xD;&#xA;" /><Decls><d name="manyToManyFieldHolder" ldsrc="1048"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1048"><e><bo op="m"><l><n>relation</n></l><r><n>FieldHolderName</n></r></bo></e></i></d></Decls><documentation short=" Inject code inside the class&#xD;&#xA;" /><e ldsrc="1063"><a><l><n>getListFunction</n></l><r><writecode ldsrc="1051"><classmembers><e ldsrc="1053"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$associativeListName</n></e><e><t ispointer="true"><dt typename="$associativeClassType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="1054"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyAName</n></e><e><t ispointer="true"><dt typename="$manyEntityAType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="1055"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfManyBName</n></e><e><t ispointer="true"><dt typename="$manyEntityBType" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="1058"><n>$attributeExpression</n></e><Function name="$functionNameA" access="public" ldsrc="1059,1059"><Parameters><P name="$idNameB" number="1"><type typename="$INTEGER$" ldsrc="1059" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyAType" /><pi ref="true" /></ReturnType></Function><e ldsrc="1061"><n>$attributeExpression</n></e><Function name="$functionNameB" access="public" ldsrc="1062,1062"><Parameters><P name="$idNameA" number="1"><type typename="$INTEGER$" ldsrc="1062" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfManyBType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></r></a></e></bk><jump ldsrc="1064" /></bk></case></switch><documentation short=" businessClass.Children().InsertAtEnd(getListFunction.Children());&#xD;&#xA;" /></ifbk></if><if ldsrc="1068"><boolean><bo op="NOTEQ"><l><n>getListFunction</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk><e ldsrc="1069"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>businessInterface</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>getListFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></forblock></for></forblock></for><return ldsrc="1073,1073"><lit str="0" type="null" /></return><documentation short="--------------------------------------------------------&#xD;&#xA;&#xD;&#xA;		for(Table^ table in tables){&#xD;&#xA;			for(Relation^ relation in relations){&#xD;&#xA;				if(relation.Source==table.Name){&#xD;&#xA;					XplClassMembersList^ getListFunction = null;&#xD;&#xA;					switch(relation.Type){&#xD;&#xA;						case &quot;OneToOne&quot;:&#xD;&#xA;							getListFunction = writecode&#xD;&#xA;							{%&#xD;&#xA;						&#xD;&#xA;								public:&#xD;&#xA;								&#xD;&#xA;							%};&#xD;&#xA;						break;&#xD;&#xA;						case &quot;OneToMany&quot;:&#xD;&#xA;							// Establish the generic for the &quot;many&quot; class&#xD;&#xA;							XplIName^ listOfManyOTMName = new XplIName(&quot;CollectionOf&quot;+relation.Target+&quot;Entity&quot;);&#xD;&#xA;							XplType^ listOfManyOTMType = new XplType();&#xD;&#xA;							listOfManyOTMType.set_typename(&quot;CollectionOf&quot;+relation.Target+&quot;Entity&quot;);&#xD;&#xA;							XplType^ manyEntityOTMType = new XplType();&#xD;&#xA;							manyEntityOTMType.set_typename(relation.Target+&quot;Entity&quot;);&#xD;&#xA;&#xD;&#xA;							// Establish the method name, parameters&#xD;&#xA;							XplIName^ functionNameOTM = new XplIName(&quot;GetCollectionOf&quot;+relation.Target+&quot;By&quot;+relation.Source);&#xD;&#xA;							XplIName^ idNameOTM = new XplIName(&quot;Id&quot;+relation.Target);&#xD;&#xA;&#xD;&#xA;							// Inject code inside the class&#xD;&#xA;							getListFunction = writecode&#xD;&#xA;							{%&#xD;&#xA;								UtnEmall::Utils::List::NewCollection($listOfManyOTMName,gettype($manyEntityOTMType^));&#xD;&#xA;								public:&#xD;&#xA;								$attributeExpression;&#xD;&#xA;								$listOfManyOTMType^ $functionNameOTM(int $idNameOTM);&#xD;&#xA;							%};&#xD;&#xA;						break;&#xD;&#xA;						case &quot;ManyToOne&quot;:&#xD;&#xA;							// Establish the generic for the &quot;many&quot; class&#xD;&#xA;							XplIName^ listOfManyName = new XplIName(&quot;CollectionOf&quot;+relation.Source);&#xD;&#xA;							XplType^ listOfManyType = new XplType();&#xD;&#xA;							listOfManyType.set_typename(&quot;CollectionOf&quot;+relation.Source);&#xD;&#xA;							XplType^ manyEntityType = new XplType();&#xD;&#xA;							manyEntityType.set_typename(relation.Source+&quot;Entity&quot;);&#xD;&#xA;&#xD;&#xA;							// Establish the method name, parameters&#xD;&#xA;							XplIName^ functionName = new XplIName(&quot;GetCollectionOf&quot;+relation.Source+&quot;By&quot;+relation.Target);&#xD;&#xA;							XplIName^ idName = new XplIName(&quot;Id&quot;+relation.Source);&#xD;&#xA;&#xD;&#xA;							// Inject code inside the class&#xD;&#xA;							getListFunction = writecode&#xD;&#xA;							{%&#xD;&#xA;								UtnEmall::Utils::List::NewCollection($listOfManyType,gettype($manyEntityType^));&#xD;&#xA;								public:&#xD;&#xA;								$attributeExpression;&#xD;&#xA;								$listOfManyType^ $functionName(int $idName);&#xD;&#xA;							%};&#xD;&#xA;						break;&#xD;&#xA;						case &quot;ManyToMany&quot;:&#xD;&#xA;							// Establish the generic for the &quot;many&quot; classes&#xD;&#xA;							XplIName^ listOfManyAName = new XplIName(&quot;CollectionOf&quot;+relation.Source);&#xD;&#xA;							XplType^ listOfManyAType = new XplType();&#xD;&#xA;							listOfManyAType.set_typename(&quot;CollectionOf&quot;+relation.Source);&#xD;&#xA;							XplType^ manyEntityAType = new XplType();&#xD;&#xA;							manyEntityAType.set_typename(relation.Source+&quot;Entity&quot;);&#xD;&#xA;&#xD;&#xA;							XplIName^ listOfManyBName = new XplIName(&quot;CollectionOf&quot;+relation.Target);&#xD;&#xA;							XplType^ listOfManyBType = new XplType();&#xD;&#xA;							listOfManyBType.set_typename(&quot;CollectionOf&quot;+relation.Target);&#xD;&#xA;							XplType^ manyEntityBType = new XplType();&#xD;&#xA;							manyEntityBType.set_typename(relation.Target+&quot;Entity&quot;);&#xD;&#xA;&#xD;&#xA;							// Establish the method name, parameters&#xD;&#xA;							XplIName^ functionNameA = new XplIName(&quot;GetCollectionOf&quot;+relation.Source+&quot;By&quot;+relation.Target);&#xD;&#xA;							XplIName^ idNameA = new XplIName(&quot;Id&quot;+relation.Source);&#xD;&#xA;							XplIName^ functionNameB = new XplIName(&quot;GetCollectionOf&quot;+relation.Target+&quot;By&quot;+relation.Source);&#xD;&#xA;							XplIName^ idNameB = new XplIName(&quot;Id&quot;+relation.Target);&#xD;&#xA;&#xD;&#xA;							// Establish the associative class, data access, and generic list for it&#xD;&#xA;							XplIName^ associativeListName = new XplIName(&quot;CollectionOf&quot;+relation.TypeName);&#xD;&#xA;							XplType^ associativeClassType = new XplType();&#xD;&#xA;							associativeClassType.set_typename(relation.TypeName+&quot;Entity&quot;);&#xD;&#xA;							XplType^ associativeListType = new XplType();&#xD;&#xA;							associativeListType.set_typename(&quot;CollectionOf&quot;+relation.TypeName);&#xD;&#xA;&#xD;&#xA;							// Inject code inside the class&#xD;&#xA;							getListFunction = writecode&#xD;&#xA;							{%&#xD;&#xA;								UtnEmall::Utils::List::NewCollection($associativeListName,gettype($associativeClassType^));&#xD;&#xA;								UtnEmall::Utils::List::NewCollection($listOfManyAName,gettype($manyEntityAType^));&#xD;&#xA;								UtnEmall::Utils::List::NewCollection($listOfManyBName,gettype($manyEntityBType^));&#xD;&#xA;&#xD;&#xA;								public:								&#xD;&#xA;								$attributeExpression;&#xD;&#xA;								$listOfManyAType^ $functionNameA(int $idNameB);&#xD;&#xA;&#xD;&#xA;								public:&#xD;&#xA;								$attributeExpression;&#xD;&#xA;								$listOfManyBType^ $functionNameB(int $idNameA);&#xD;&#xA;							%};&#xD;&#xA;						break;&#xD;&#xA;					}&#xD;&#xA;					businessInterface.Children().InsertAtEnd(getListFunction.Children());&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		return null;" /></FunctionBody></Function><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class></Namespace></DocumentBody></XPLDocument>