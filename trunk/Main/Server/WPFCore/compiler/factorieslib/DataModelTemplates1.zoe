<XPLDocument><DocumentBody ldsrc="1,1,.\\MainTemplate\\DataModelTemplates.dpp"><Import ldsrc="1"><ns>System</ns><ns>platform=DotNET</ns><ns>ns=DotNET</ns><ns>assembly=mscorlib</ns></Import><Using ldsrc="2"><ns>Zoe</ns></Using><Using ldsrc="3"><ns>DotNET::System</ns></Using><Using ldsrc="4"><ns>DotNET::LayerD::ZOECompiler</ns></Using><Using ldsrc="5"><ns>DotNET::LayerD::CodeDOM</ns></Using><Using ldsrc="6"><ns>DotNET::System::Collections</ns></Using><documentation short="Utils::DefaultNetImports();&#xD;&#xA;" /><Namespace name="UtnEmall::Utils" ldsrc="10,3225"><documentation short=" Clase factory para el modelo de negocio(classEntity) y de datos(DataAccessEntity).&#xD;&#xA;" /><Class name="Model" access="public" isfactory="true" ldsrc="13,3189"><Field name="clasesBusiness" storage="static" ldsrc="15,15"><type ispointer="true" typeStr="^_DotNET.System.Collections.Hashtable"><dt typename="Hashtable" /><pi ref="true" /></type><i ldsrc="15"><e><new><type typename="Hashtable" /></new></e></i></Field><documentation short="ArrayList que almacena los campos de las entityclass.&#xD;&#xA;" /><Field name="listaCampos" storage="static" ldsrc="17,17"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="17"><e><new><type typename="ArrayList" /></new></e></i></Field><documentation short=" ArrayList que almacena los tipos de los campos de las entityclass.&#xD;&#xA;" /><Field name="listaTipos" storage="static" ldsrc="19,19"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="19"><e><new><type typename="ArrayList" /></new></e></i></Field><documentation short=" ArrayList que almacena las relaciones con la entity actual.&#xD;&#xA;" /><Field name="listaRelaciones" storage="static" ldsrc="21,21"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="21"><e><new><type typename="ArrayList" /></new></e></i></Field><documentation short=" ArrayList que almacena las relaciones con la entity actual.&#xD;&#xA;" /><Field name="listaRestricciones" storage="static" ldsrc="23,23"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="23"><e><new><type typename="ArrayList" /></new></e></i></Field><documentation short=" nombre de la clase Entity&#xD;&#xA;" /><Field name="entityClassName" storage="static" ldsrc="25,25"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="25"><e><lit str="0" type="null" /></e></i></Field><documentation short="Espacio de nombre para web servicies de entities, opcional&#xD;&#xA;" /><Field name="entityWebServiceNS" storage="static" ldsrc="27,27"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="27"><e><lit str="0" type="null" /></e></i></Field><documentation short=" nombre de la clase de Acceso a Datos&#xD;&#xA;" /><Field name="dataAccessClassName" storage="static" ldsrc="29,29"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="29"><e><lit str="0" type="null" /></e></i></Field><documentation short=" Tipo de la clase entity actual&#xD;&#xA;" /><Field name="entityType" storage="static" ldsrc="31,31"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="31"><e><lit str="0" type="null" /></e></i></Field><documentation short="Tipo de la clase dataAccess actual.&#xD;&#xA;" /><Field name="dataAccessType" storage="static" ldsrc="33,33"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="33"><e><lit str="0" type="null" /></e></i></Field><Field name="entityNS" storage="static" ldsrc="34,34"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNamespace"><dt typename="XplNamespace" /><pi ref="true" /></type><i ldsrc="34"><e><lit str="0" type="null" /></e></i></Field><Field name="businessLogicNS" storage="static" ldsrc="35,35"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNamespace"><dt typename="XplNamespace" /><pi ref="true" /></type><i ldsrc="35"><e><lit str="0" type="null" /></e></i></Field><Field name="addPreserveReferenceAttribute" storage="static" ldsrc="36,36"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="connectionType" storage="static" ldsrc="38,38"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="38"><e><lit str="0" type="null" /></e></i></Field><Field name="transactionType" storage="static" ldsrc="39,39"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="39"><e><lit str="0" type="null" /></e></i></Field><Field name="commandType" storage="static" ldsrc="40,40"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="40"><e><lit str="0" type="null" /></e></i></Field><Field name="parameterType" storage="static" ldsrc="41,41"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="41"><e><lit str="0" type="null" /></e></i></Field><Field name="isMobil" storage="static" ldsrc="42,42"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /><i ldsrc="42"><e><lit str="false" type="bool" /></e></i></Field><Field name="isIdIdentity" storage="static" ldsrc="43,43"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /><i ldsrc="43"><e><lit str="true" type="bool" /></e></i></Field><Field name="serializationCount" storage="static" ldsrc="44,44"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="dataMemberExpression" storage="static" ldsrc="45,45"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplExpression"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="45"><e><lit str="0" type="null" /></e></i></Field><Field name="isMobilExp" storage="static" ldsrc="46,46"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplExpression"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="46"><e><lit str="0" type="null" /></e></i></Field><Field name="namespaceEntity" storage="static" ldsrc="48,48"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="48"><e><lit str="0" type="null" /></e></i></Field><Field name="namespaceBusiness" storage="static" ldsrc="49,49"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="49"><e><lit str="0" type="null" /></e></i></Field><Field name="BusinessRulesBlock" storage="static" ldsrc="51,51"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplFunctionBody"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="51"><e><new><type typename="XplFunctionBody" /></new></e></i></Field><Function name="SetEntityWSNamespace" internalname="SetEntityWSNamespace#26" access="public" storage="static" ldsrc="54,54"><Parameters><P name="wsNamespace" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="54"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="54,57"><e ldsrc="55"><a><l><n>entityWebServiceNS</n></l><r><n>wsNamespace</n></r></a></e><return ldsrc="56,56"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="PreserveReferencies" internalname="PreserveReferencies#27" access="public" storage="static" ldsrc="58,58"><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="58,61"><e ldsrc="59"><a><l><n>addPreserveReferenceAttribute</n></l><r><lit str="true" type="bool" /></r></a></e><return ldsrc="60,60"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="ReinitSerializationCount2" internalname="ReinitSerializationCount2#28" access="public" storage="static" ldsrc="62,62"><Parameters><P name="count" number="1"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="62" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="62,64"><return ldsrc="63,63"><writecode ldsrc="63"><e><fc><l><n>UtnEmall::Utils::Model::ReinitSerializationCount</n></l><args><e><n>$count</n></e></args></fc></e></writecode></return></FunctionBody></Function><Function name="ReinitSerializationCount" internalname="ReinitSerializationCount#29" access="public" storage="static" ldsrc="65,65"><Parameters><P name="count" number="1"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="65" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="65,68"><e ldsrc="66"><a><l><n>serializationCount</n></l><r><n>count</n></r></a></e><return ldsrc="67,67"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="InsertDataMemberAttribute" internalname="InsertDataMemberAttribute#30" access="public" storage="static" ldsrc="69,69"><Parameters><P name="isMobil" number="1"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="69" /></P><P name="isArray" number="2"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="69" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="69,85"><Decls><d name="attStr" ldsrc="71"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="71"><e><lit str="0" type="null" /></e></i></d></Decls><if ldsrc="72"><boolean><uo op="not"><u><n>isMobil</n></u></uo></boolean><ifbk ldsrc="72,74"><e ldsrc="73"><a><l><n>attStr</n></l><r><bo><l><bo><l><lit str="System.Runtime.Serialization.DataMember( Order = " /></l><r><fc><l><bo op="m"><l><n>serializationCount</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str=" )" /></r></bo></r></a></e></ifbk><else ldsrc="75"><if ldsrc="76"><boolean><uo op="not"><u><n>isArray</n></u></uo></boolean><ifbk ldsrc="76,78"><e ldsrc="77"><a><l><n>attStr</n></l><r><bo><l><bo><l><lit str="System.Xml.Serialization.XmlElementAttribute( Order = " /></l><r><fc><l><bo op="m"><l><n>serializationCount</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str=" )" /></r></bo></r></a></e></ifbk><else ldsrc="79"><e ldsrc="80"><a><l><n>attStr</n></l><r><bo><l><bo><l><lit str="System.Xml.Serialization.XmlArrayAttribute( IsNullable = true, Order = " /></l><r><fc><l><bo op="m"><l><n>serializationCount</n></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str=" )" /></r></bo></r></a></e></else></if></else></if><e ldsrc="83"><uo op="inc"><u><n>serializationCount</n></u></uo></e><return ldsrc="84,84"><writecode ldsrc="84"><e><fc><l><n>Zoe::Attribute::Add</n></l><args><e><n>$attStr</n></e></args></fc></e></writecode></return></FunctionBody></Function><Function name="DefineMobil" internalname="DefineMobil#31" access="public" storage="static" ldsrc="86,86"><Parameters><P name="mobil" number="1"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="86" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="86,108"><e ldsrc="87"><a><l><n>connectionType</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="88"><a><l><n>transactionType</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="89"><a><l><n>commandType</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="90"><a><l><n>parameterType</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="91"><a><l><n>isMobil</n></l><r><n>mobil</n></r></a></e><if ldsrc="93"><boolean><n>mobil</n></boolean><ifbk ldsrc="94,99"><e ldsrc="95"><fc><l><bo op="m"><l><n>connectionType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="SqlCeConnection" /></e></args></fc></e><e ldsrc="96"><fc><l><bo op="m"><l><n>transactionType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="SqlCeTransaction" /></e></args></fc></e><e ldsrc="97"><fc><l><bo op="m"><l><n>commandType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="SqlCeCommand" /></e></args></fc></e><e ldsrc="98"><fc><l><bo op="m"><l><n>parameterType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="SqlCeParameter" /></e></args></fc></e></ifbk><else ldsrc="100"><e ldsrc="102"><fc><l><bo op="m"><l><n>connectionType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="IDbConnection" /></e></args></fc></e><e ldsrc="103"><fc><l><bo op="m"><l><n>transactionType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="IDbTransaction" /></e></args></fc></e><e ldsrc="104"><fc><l><bo op="m"><l><n>commandType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="IDbCommand" /></e></args></fc></e><e ldsrc="105"><fc><l><bo op="m"><l><n>parameterType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="IDbDataParameter" /></e></args></fc></e></else></if><return ldsrc="107,107"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="DefineIdentity" internalname="DefineIdentity#32" access="public" storage="static" ldsrc="109,109"><Parameters><P name="identity" number="1"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="109" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="109,112"><e ldsrc="110"><a><l><n>isIdIdentity</n></l><r><n>identity</n></r></a></e><return ldsrc="111,111"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="DefineNamespace" internalname="DefineNamespace#33" access="public" storage="static" ldsrc="113,113"><Parameters><P name="defNamespaceEntity" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="113" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="113,116"><e ldsrc="114"><a><l><n>namespaceEntity</n></l><r><new><type typename="XplIName" /><init ldsrc="114"><list><e><bo op="m"><l><n>defNamespaceEntity</n></l><r><n>Identifier</n></r></bo></e></list></init></new></r></a></e><return ldsrc="115,115"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="DefineBusinessNamespace" internalname="DefineBusinessNamespace#34" access="public" storage="static" ldsrc="117,117"><Parameters><P name="defNamespaceEntity" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="117" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="117,120"><e ldsrc="118"><a><l><n>namespaceBusiness</n></l><r><new><type typename="XplIName" /><init ldsrc="118"><list><e><bo op="m"><l><n>defNamespaceEntity</n></l><r><n>Identifier</n></r></bo></e></list></init></new></r></a></e><return ldsrc="119,119"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short=" Define las clases Entity y DataAccess para cada clase del modelo.&#xD;&#xA;" /><Function name="Define" internalname="Define#35" access="public" storage="static" ldsrc="122,122"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="122" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="122" /></P><P name="business" number="3"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="122" /></P><P name="modelData" number="4"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="122" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="122,124"><return ldsrc="123,123"><fc><l><n>Define</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e><e><n>business</n></e><e><lit str="false" type="bool" /></e><e><n>modelData</n></e></args></fc></return></FunctionBody></Function><Function name="Define" internalname="Define#36" access="public" storage="static" ldsrc="125,125"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="125" /></P><P name="business" number="2"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="125" /></P><P name="modelData" number="3"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="125" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="125,127"><return ldsrc="126,126"><fc><l><n>Define</n></l><args><e><n>modelName</n></e><e><n>modelName</n></e><e><n>business</n></e><e><lit str="false" type="bool" /></e><e><n>modelData</n></e></args></fc></return></FunctionBody></Function><Function name="Define" internalname="Define#37" access="public" storage="static" ldsrc="128,128"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="128" /></P><P name="business" number="2"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="128" /></P><P name="addCircularReferenceAttribute" number="3"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="128" /></P><P name="modelData" number="4"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="128" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="128,130"><return ldsrc="129,129"><fc><l><n>Define</n></l><args><e><n>modelName</n></e><e><n>modelName</n></e><e><n>business</n></e><e><n>addCircularReferenceAttribute</n></e><e><n>modelData</n></e></args></fc></return></FunctionBody></Function><Function name="Define" internalname="Define#38" access="public" storage="static" ldsrc="131,131"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="131" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="131" /></P><P name="business" number="3"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="131" /></P><P name="addCircularReferenceAttribute" number="4"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="131" /></P><P name="modelData" number="5"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="131" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="131,427"><if ldsrc="132"><boolean><n>business</n></boolean><ifbk ldsrc="133,135"><e ldsrc="134"><fc><l><bo op="m"><l><n>clasesBusiness</n></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e><e><lit /></e></args></fc></e></ifbk></if><if ldsrc="136"><boolean><bo op="EQ"><l><n>namespaceEntity</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="137,146"><if ldsrc="138"><boolean><n>isMobil</n></boolean><ifbk ldsrc="139,141"><e ldsrc="140"><a><l><n>namespaceEntity</n></l><r><new><type typename="XplIName" /><init ldsrc="140"><list><e><lit str="DotNET::UtnEmall::Client::EntityModel" /></e></list></init></new></r></a></e></ifbk><else ldsrc="142"><e ldsrc="144"><a><l><n>namespaceEntity</n></l><r><new><type typename="XplIName" /><init ldsrc="144"><list><e><lit str="DotNET::UtnEmall::Server::EntityModel" /></e></list></init></new></r></a></e></else></if></ifbk></if><if ldsrc="147"><boolean><bo op="EQ"><l><n>namespaceBusiness</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="148,157"><if ldsrc="149"><boolean><n>isMobil</n></boolean><ifbk ldsrc="150,152"><e ldsrc="151"><a><l><n>namespaceBusiness</n></l><r><new><type typename="XplIName" /><init ldsrc="151"><list><e><lit str="DotNET::UtnEmall::Client::BusinessLogic" /></e></list></init></new></r></a></e></ifbk><else ldsrc="153"><e ldsrc="155"><a><l><n>namespaceBusiness</n></l><r><new><type typename="XplIName" /><init ldsrc="155"><list><e><lit str="DotNET::UtnEmall::Server::BusinessLogic" /></e></list></init></new></r></a></e></else></if></ifbk></if><if ldsrc="159"><boolean><bo op="EQ"><l><n>businessLogicNS</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="159,167"><e ldsrc="162"><a><l><n>businessLogicNS</n></l><r><cast><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><writecode ldsrc="160"><progunit><Namespace name="$namespaceBusiness" ldsrc="161,161" /></progunit></writecode></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>FirstNode</n></r></bo></l><args /></fc></e><type ispointer="true"><dt typename="XplNamespace" /><pi ref="true" /></type></cast></r></a></e><documentation short="Lo inserto en el DocumentBody&#xD;&#xA;" /><Decls><d name="body" ldsrc="164"><type ispointer="true"><dt typename="XplNode" /><pi ref="true" /></type><i ldsrc="164"><e><n>context</n></e></i></d></Decls><while ldsrc="165"><boolean><bo op="NOTEQ"><l><fc><l><bo op="m"><l><n>body</n></l><r><n>get_TypeName</n></r></bo></l><args /></fc></l><r><lit str="XplDocumentBody" /></r></bo></boolean><dobk><e ldsrc="165"><a><l><n>body</n></l><r><fc><l><bo op="m"><l><n>body</n></l><r><n>get_Parent</n></r></bo></l><args /></fc></r></a></e></dobk></while><e ldsrc="166"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>body</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>businessLogicNS</n></e></args></fc></e></ifbk></if><if ldsrc="169"><boolean><bo op="EQ"><l><n>entityNS</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="169,177"><e ldsrc="172"><a><l><n>entityNS</n></l><r><cast><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><writecode ldsrc="170"><progunit><Namespace name="$namespaceEntity" ldsrc="171,171" /></progunit></writecode></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>FirstNode</n></r></bo></l><args /></fc></e><type ispointer="true"><dt typename="XplNamespace" /><pi ref="true" /></type></cast></r></a></e><documentation short="Lo inserto en el DocumentBody&#xD;&#xA;" /><Decls><d name="body" ldsrc="174"><type ispointer="true"><dt typename="XplNode" /><pi ref="true" /></type><i ldsrc="174"><e><n>context</n></e></i></d></Decls><while ldsrc="175"><boolean><bo op="NOTEQ"><l><fc><l><bo op="m"><l><n>body</n></l><r><n>get_TypeName</n></r></bo></l><args /></fc></l><r><lit str="XplDocumentBody" /></r></bo></boolean><dobk><e ldsrc="175"><a><l><n>body</n></l><r><fc><l><bo op="m"><l><n>body</n></l><r><n>get_Parent</n></r></bo></l><args /></fc></r></a></e></dobk></while><e ldsrc="176"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>body</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>entityNS</n></e></args></fc></e></ifbk></if><if ldsrc="179"><boolean><bo op="EQ"><l><n>isMobilExp</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="180,185"><if ldsrc="181"><boolean><n>isMobil</n></boolean><ifbk><e ldsrc="182"><a><l><n>isMobilExp</n></l><r><writecode ldsrc="182"><e><lit str="true" type="bool" /></e></writecode></r></a></e></ifbk><else ldsrc="183"><e ldsrc="184"><a><l><n>isMobilExp</n></l><r><writecode ldsrc="184"><e><lit str="false" type="bool" /></e></writecode></r></a></e></else></if></ifbk></if><if ldsrc="187"><boolean><bo op="EQ"><l><n>dataMemberExpression</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="188,193"><if ldsrc="189"><boolean><n>isMobil</n></boolean><ifbk><e ldsrc="190"><a><l><n>dataMemberExpression</n></l><r><writecode ldsrc="190"><e><fc><l><n>UtnEmall::Utils::Model::InsertDataMemberAttribute</n></l><args><e><lit str="true" type="bool" /></e><e><lit str="false" type="bool" /></e></args></fc></e></writecode></r></a></e></ifbk><else ldsrc="191"><e ldsrc="192"><a><l><n>dataMemberExpression</n></l><r><writecode ldsrc="192"><e><fc><l><n>UtnEmall::Utils::Model::InsertDataMemberAttribute</n></l><args><e><lit str="false" type="bool" /></e><e><lit str="false" type="bool" /></e></args></fc></e></writecode></r></a></e></else></if></ifbk></if><Decls><d name="clase" ldsrc="195"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="195"><e><lit str="0" type="null" /></e></i></d></Decls><e ldsrc="196"><a><l><n>dataAccessClassName</n></l><r><new><type typename="XplIName" /><init ldsrc="196"><list><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></r></a></e><Decls><d name="entityClass" ldsrc="197"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="197"><e><new><type typename="XplIName" /><init ldsrc="197"><list><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short="Un identificador para el tipo de diccionario de entidades&#xD;&#xA;" /><Decls><d name="dictInMemoryEntities" ldsrc="199"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="199"><e><new><type typename="XplIName" /><init ldsrc="199"><list><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="memory" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short="public class $dataAccessClassName implements IDataAccess&#xD;&#xA;" /><e ldsrc="253"><a><l><n>clase</n></l><r><writecode ldsrc="202"><class name="$dataAccessClassName" access="public" doc=" &lt;summary&gt;&#xD;&#xA;   The &lt;c&gt;$dataAccessClassName$&lt;/c&gt; is a class&#xD;&#xA;   that provides access to the modelName stored on&#xD;&#xA;   the database.&#xD;&#xA; &lt;/summary&gt;&#xD;&#xA;" ldsrc="209,252"><Field name="isGlobalTransaction" ldsrc="211,211"><type typename="$BOOLEAN$" /></Field><Field name="dbConnection" ldsrc="212,212"><type ispointer="true"><dt typename="$connectionType" /><pi ref="true" /></type></Field><Field name="dbTransaction" ldsrc="213,213"><type ispointer="true"><dt typename="$transactionType" /><pi ref="true" /></type></Field><Field name="dataAccess" ldsrc="214,214"><type ispointer="true"><dt typename="DataAccessConnection" /><pi ref="true" /></type></Field><e ldsrc="216"><fc><l><n>Dictionary::New</n></l><args><e><n>DictionaryOfStringIEntity</n></e><e><t ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></t></e><e><t ispointer="true"><dt typename="IEntity" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="217"><fc><l><n>Dictionary::New</n></l><args><e><n>dict</n></e><e><t ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></t></e><e><t ispointer="true"><dt typename="Type" /><pi ref="true" /></t></e></args></fc></e><e ldsrc="218"><fc><l><n>Dictionary::New</n></l><args><e><n>$dictInMemoryEntities</n></e><e><t typename="$INTEGER$" /></e><e><t ispointer="true"><dt typename="$entityClass" /><pi ref="true" /></t></e></args></fc></e><Field name="inMemoryEntities" ldsrc="220,220"><type ispointer="true"><dt typename="$dictInMemoryEntities" /><pi ref="true" /></type></Field><Field name="properties" storage="static" ldsrc="222,222"><type ispointer="true"><dt typename="dict" /><pi ref="true" /></type></Field><Field name="dbChecked" storage="static" ldsrc="224,224"><type typename="$BOOLEAN$" /></Field><documentation short=" &lt;summary&gt;&#xD;&#xA;   Initializes a new instance of a &#xD;&#xA;   &lt;c&gt;$dataAccessClassName$&lt;/c&gt; type.&#xD;&#xA;   It checks if the table and stored procedure&#xD;&#xA;   are already on the database, if not, it creates&#xD;&#xA;   them.&#xD;&#xA;   Sets the properties that allows to make queries&#xD;&#xA;   by calling the LoadWhere method.&#xD;&#xA; &lt;/summary&gt;&#xD;&#xA;" /><Function name="$dataAccessClassName" access="public" ldsrc="236,236"><ReturnType /><FunctionBody ldsrc="237,250"><e ldsrc="238"><a><l><n>dataAccess</n></l><r><n>DataAccessConnection::Instance</n></r></a></e><if ldsrc="239"><boolean><uo op="not"><u><n>dbChecked</n></u></uo></boolean><ifbk ldsrc="240,242"><e ldsrc="241"><fc><l><n>DbChecked</n></l><args /></fc></e></ifbk></if><if ldsrc="244"><boolean><bo op="EQ"><l><n>properties</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="245,247"><e ldsrc="246"><fc><l><n>SetProperties</n></l><args /></fc></e></ifbk></if><e ldsrc="249"><a><l><n>inMemoryEntities</n></l><r><new><type typename="$dictInMemoryEntities" /></new></r></a></e></FunctionBody></Function></class></writecode></r></a></e><documentation short="Inserto el modelo dentro de la clase&#xD;&#xA;" /><e ldsrc="255"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>clase</n></e></args></fc></e><e ldsrc="256"><fc><l><bo op="m"><l><n>clases</n></l><r><n>Add</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e><e><n>clase</n></e></args></fc></e><documentation short="Inserto el comentario de la clase de entidad&#xD;&#xA; context.CurrentNamespace.Children().InsertAtEnd(&#xD;&#xA;		writecode{&#xD;&#xA;		}.Children().FirstNode()&#xD;&#xA; 	);&#xD;&#xA;Inserto el atributo de serialización de la clase de entidad&#xD;&#xA;" /><if ldsrc="266"><boolean><n>isMobil</n></boolean><ifbk ldsrc="267,282"><Decls><d name="wsNS" ldsrc="268"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="268"><e><fc><l><bo op="m"><l><bo op="m"><l><n>namespaceEntity</n></l><r><n>Identifier</n></r></bo></l><r><n>Replace</n></r></bo></l><args><e><lit str="::" /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><if ldsrc="269"><boolean><bo op="EQ"><l><b><l><n>wsNS</n></l><args><e><lit str="0" type="integer" /></e></args></b></l><r><lit str="D" type="char" /></r></bo></boolean><ifbk><e ldsrc="269"><a><l><n>wsNS</n></l><r><fc><l><bo op="m"><l><n>wsNS</n></l><r><n>Substring</n></r></bo></l><args><e><lit str="7" type="integer" /></e></args></fc></r></a></e></ifbk></if><if ldsrc="270"><boolean><bo op="EQ"><l><n>entityWebServiceNS</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="270,272"><e ldsrc="271"><a><l><n>wsNS</n></l><r><bo><l><bo><l><lit str="System.Xml.Serialization.XmlTypeAttribute(Namespace = \\&quot;http://schemas.datacontract.org/2004/07/" /></l><r><n>wsNS</n></r></bo></l><r><lit str="\\&quot;)" /></r></bo></r></a></e></ifbk><else ldsrc="273"><e ldsrc="274"><a><l><n>wsNS</n></l><r><bo><l><bo><l><lit str="System.Xml.Serialization.XmlTypeAttribute(Namespace = \\&quot;http://schemas.datacontract.org/2004/07/" /></l><r><n>entityWebServiceNS</n></r></bo></l><r><lit str="\\&quot;)" /></r></bo></r></a></e></else></if><e ldsrc="278"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>entityNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="277"><e><fc><l><n>Zoe::Attribute::Add</n></l><args><e><lit str="System.SerializableAttribute" /></e></args></fc></e></writecode></e></args></fc></e><e ldsrc="281"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>entityNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="280"><e><fc><l><n>Zoe::Attribute::Add</n></l><args><e><n>$wsNS</n></e></args></fc></e></writecode></e></args></fc></e></ifbk><else ldsrc="283"><e ldsrc="287"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>entityNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="286"><e><fc><l><n>Zoe::Attribute::Add</n></l><args><e><lit str="System.Runtime.Serialization.DataContract" /></e></args></fc></e></writecode></e></args></fc></e></else></if><e ldsrc="289"><a><l><n>entityClassName</n></l><r><new><type typename="XplIName" /><init ldsrc="289"><list><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></r></a></e><documentation short="string^ str = &quot;SuppressMessage(\\&quot;Microsoft.Usage\\&quot;, \\&quot;CA2227:CollectionPropertiesShouldBeReadOnly\\&quot;, Justification = \\&quot;We need set for serialization on web services interfaces.\\&quot;)&quot;;&#xD;&#xA;Zoe::Attribute::Add($str);&#xD;&#xA;" /><e ldsrc="405"><a><l><n>clase</n></l><r><writecode ldsrc="292"><class name="$entityClassName" access="public" doc=" &lt;summary&gt;&#xD;&#xA;   The &lt;c&gt;$entityClassName$&lt;/c&gt; is a entity class&#xD;&#xA;   that contains all the fields that are inserted and&#xD;&#xA;   loaded from the database. &#xD;&#xA;   This class is used by the upper layers.&#xD;&#xA; &lt;/summary&gt;&#xD;&#xA;" ldsrc="299,404"><Implements><i name="IEntity" access="public" ldsrc="299" /></Implements><Field name="id" ldsrc="301,301"><type typename="$INTEGER$" /></Field><Field name="changed" ldsrc="302,302"><type typename="$BOOLEAN$" /></Field><Field name="isNew" ldsrc="303,303"><type typename="$BOOLEAN$" /></Field><Field name="timestamp" ldsrc="304,304"><type typename="zoe::lang::DateTime" /></Field><Field name="errors" ldsrc="305,305"><type ispointer="true"><dt typename="CollectionOfError" /><pi ref="true" /></type></Field><e ldsrc="307"><fc><l><n>UtnEmall::Utils::Model::ReinitSerializationCount</n></l><args><e><lit str="0" type="integer" /></e></args></fc></e><e ldsrc="308"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>CollectionOfError</n></e><e><t ispointer="true"><dt typename="Error" /><pi ref="true" /></t></e></args></fc></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Initializes a new instance of a &#xD;&#xA; &lt;c&gt;$entityClassName$&lt;/c&gt; type.&#xD;&#xA; &lt;/summary&gt;&#xD;&#xA;" /><Function name="$entityClassName" access="public" ldsrc="315,315"><ReturnType /><FunctionBody ldsrc="316,319"><e ldsrc="317"><a><l><n>isNew</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="318"><a><l><n>errors</n></l><r><new><type typename="CollectionOfError" /></new></r></a></e></FunctionBody></Function><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the Id of the entity.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="324"><n>$dataMemberExpression</n></e><Property name="Id" access="public" ldsrc="325"><type typename="$INTEGER$" /><body ldsrc="326,335"><Get ldsrc="328,330"><return ldsrc="329,329"><n>id</n></return></Get><Set ldsrc="332,334"><e ldsrc="333"><a><l><n>id</n></l><r><n>value</n></r></a></e></Set></body></Property><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets if the entity has changed.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="340"><n>$dataMemberExpression</n></e><Property name="Changed" access="public" ldsrc="341"><type typename="$BOOLEAN$" /><body ldsrc="342,351"><Get ldsrc="344,346"><return ldsrc="345,345"><n>changed</n></return></Get><Set ldsrc="348,350"><e ldsrc="349"><a><l><n>changed</n></l><r><n>value</n></r></a></e></Set></body></Property><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets if the entity is new.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="356"><n>$dataMemberExpression</n></e><Property name="IsNew" access="public" ldsrc="357"><type typename="$BOOLEAN$" /><body ldsrc="358,367"><Get ldsrc="360,362"><return ldsrc="361,361"><n>isNew</n></return></Get><Set ldsrc="364,366"><e ldsrc="365"><a><l><n>isNew</n></l><r><n>value</n></r></a></e></Set></body></Property><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the timestamp of the last access.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="373"><n>$dataMemberExpression</n></e><Property name="Timestamp" access="public" ldsrc="374"><type typename="zoe::lang::DateTime" /><body ldsrc="375,384"><Get ldsrc="377,379"><return ldsrc="378,378"><n>timestamp</n></return></Get><Set ldsrc="381,383"><e ldsrc="382"><a><l><n>timestamp</n></l><r><n>value</n></r></a></e></Set></body></Property><Field name="DBTimestamp" access="public" ldsrc="387,387"><type ispointer="true" const="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="387"><e><lit str="timestamp" /></e></i></Field><documentation short=" &lt;summary&gt;&#xD;&#xA; The collection of entity's errors.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="391"><fc><l><n>UtnEmall::Utils::Model::InsertDataMemberAttribute</n></l><args><e><n>$isMobilExp</n></e><e><lit str="true" type="bool" /></e></args></fc></e><Property name="Errors" access="public" ldsrc="393"><type ispointer="true"><dt typename="CollectionOfError" /><pi ref="true" /></type><body ldsrc="394,403"><Get ldsrc="396,398"><return ldsrc="397,397"><n>errors</n></return></Get><Set ldsrc="400,402"><e ldsrc="401"><a><l><n>errors</n></l><r><n>value</n></r></a></e></Set></body></Property></class></writecode></r></a></e><if ldsrc="407"><boolean><n>addCircularReferenceAttribute</n></boolean><ifbk ldsrc="407,411"><e ldsrc="410"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>modelData</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="409"><e><fc><l><n>Model::PreserveReferencies</n></l><args /></fc></e></writecode></e></args></fc></e></ifbk></if><e ldsrc="414"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>modelData</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="413"><e><fc><l><n>Model::ProcessModel</n></l><args><e><n>$modelName</n></e><e><n>$tableName</n></e></args></fc></e></writecode></e></args></fc></e><documentation short="Inserto el modelo dentro de la clase&#xD;&#xA;" /><e ldsrc="417"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>modelData</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>clase</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><documentation short="Agrego el reconteo de propiedades&#xD;&#xA;" /><e ldsrc="422"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>clase</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="421"><e><fc><l><n>UtnEmall::Utils::Model::ReinitSerializationCount2</n></l><args><e><lit str="5" type="integer" /></e></args></fc></e></writecode></e></args></fc></e><e ldsrc="424"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>entityNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>clase</n></e></args></fc></e><return ldsrc="426,426"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="DefineBusinessLogic" internalname="DefineBusinessLogic#39" access="public" storage="static" ldsrc="428,428"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="428" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="428,450"><if ldsrc="429"><boolean><n>addPreserveReferenceAttribute</n></boolean><ifbk ldsrc="429,438"><e ldsrc="437"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>businessLogicNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="431"><e><fc><l><n>ModelBusiness::Define</n></l><args><e><n>$modelName</n></e><e><lit str="true" type="bool" /></e></args><bk ldsrc="433,435"><e ldsrc="434"><n>$BusinessRulesBlock</n></e></bk></fc></e></writecode></e></args></fc></e></ifbk><else ldsrc="439"><e ldsrc="447"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>businessLogicNS</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="441"><e><fc><l><n>ModelBusiness::Define</n></l><args><e><n>$modelName</n></e><e><lit str="false" type="bool" /></e></args><bk ldsrc="443,445"><e ldsrc="444"><n>$BusinessRulesBlock</n></e></bk></fc></e></writecode></e></args></fc></e></else></if><return ldsrc="449,449"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short=" Define los campos y propiedades de cada entity y agrega cada campo y su tipo&#xD;&#xA; a la lista de campos y la lista de tipos de campos&#xD;&#xA;" /><Function name="Field" internalname="Field#40" access="public" storage="static" ldsrc="453,453"><Parameters><P name="fieldName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="453" /></P><P name="fieldType" number="2"><type typename="$TYPE$" typeStr="$TYPE$" ldsrc="453" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="453,455"><return ldsrc="454,454"><fc><l><n>Field</n></l><args><e><n>fieldName</n></e><e><n>fieldType</n></e><e><lit str="0" type="null" /></e></args></fc></return></FunctionBody></Function><Function name="Field" internalname="Field#41" access="public" storage="static" ldsrc="456,456"><Parameters><P name="fieldName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="456" /></P><P name="fieldType" number="2"><type typename="$TYPE$" typeStr="$TYPE$" ldsrc="456" /></P><P name="rulesBlock" number="3"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="456" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="456,578"><if ldsrc="457"><boolean><bo op="NOTEQ"><l><n>rulesBlock</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="458,462"><e ldsrc="461"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>BusinessRulesBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>rulesBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if><Decls><d name="typeName" ldsrc="464"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="464"><e><fc><l><bo op="m"><l><n>fieldType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e></i></d></Decls><Decls><d name="internalFieldName" ldsrc="465"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="465"><e><new><type typename="XplIName" /><init ldsrc="465"><list><e><bo><l><lit str="_" /></l><r><bo op="m"><l><n>fieldName</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listaMiembros" ldsrc="466"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="466"><e><lit str="0" type="null" /></e></i></d></Decls><switch ldsrc="468"><e><fc><l><bo op="m"><l><n>fieldType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e><case ldsrc="470"><e><n>NativeTypes::Boolean</n></e></case><case ldsrc="471"><e><n>NativeTypes::Float</n></e></case><case ldsrc="472"><e><n>NativeTypes::Double</n></e></case><case ldsrc="473"><e><n>NativeTypes::Integer</n></e><bk><e ldsrc="495"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="475"><classmembers><Field name="$internalFieldName" ldsrc="478,478"><type typename="$fieldType" /></Field><e ldsrc="480"><n>$dataMemberExpression</n></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the value for $fieldName$.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><Property name="$fieldName" access="public" ldsrc="484"><type typename="$fieldType" /><body ldsrc="485,494"><Get ldsrc="487,489"><return ldsrc="488,488"><n>$internalFieldName</n></return></Get><Set ldsrc="490,493"><e ldsrc="491"><a><l><n>$internalFieldName</n></l><r><n>value</n></r></a></e><e ldsrc="492"><a><l><n>changed</n></l><r><lit str="true" type="bool" /></r></a></e></Set></body></Property></classmembers></writecode></r></a></e><jump ldsrc="496" /></bk></case><case ldsrc="497"><e><lit str="UtnEmall.Utils.Image" /></e><bk><Decls><d name="fieldAsImage" ldsrc="498"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="498"><e><new><type typename="XplIName" /><init ldsrc="498"><list><e><bo><l><bo op="m"><l><n>fieldName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="AsImage" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="520"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="500"><classmembers><Field name="$internalFieldName" ldsrc="502,502"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type></Field><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the $fieldName.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="507"><n>$dataMemberExpression</n></e><Property name="$fieldName" access="public" ldsrc="508"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><body ldsrc="509,519"><Get ldsrc="511,513"><return ldsrc="512,512"><n>$internalFieldName</n></return></Get><Set ldsrc="515,518"><e ldsrc="516"><a><l><n>$internalFieldName</n></l><r><n>value</n></r></a></e><e ldsrc="517"><a><l><n>changed</n></l><r><lit str="true" type="bool" /></r></a></e></Set></body></Property></classmembers></writecode></r></a></e><jump ldsrc="521" /></bk></case><case ldsrc="522"><e><n>NativeTypes::String</n></e><bk><e ldsrc="544"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="524"><classmembers><Field name="$internalFieldName" ldsrc="526,526"><type ispointer="true"><dt typename="$fieldType" /><pi ref="true" /></type></Field><e ldsrc="528"><n>$dataMemberExpression</n></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the value for $fieldName$.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><Property name="$fieldName" access="public" ldsrc="532"><type ispointer="true"><dt typename="$fieldType" /><pi ref="true" /></type><body ldsrc="533,543"><Get ldsrc="535,537"><return ldsrc="536,536"><n>$internalFieldName</n></return></Get><Set ldsrc="539,542"><e ldsrc="540"><a><l><n>$internalFieldName</n></l><r><n>value</n></r></a></e><e ldsrc="541"><a><l><n>changed</n></l><r><lit str="true" type="bool" /></r></a></e></Set></body></Property></classmembers></writecode></r></a></e><jump ldsrc="545" /></bk></case><case ldsrc="546"><e><empty /></e><bk><e ldsrc="567"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="548"><classmembers><Field name="$internalFieldName" ldsrc="550,550"><type typename="$fieldType" /></Field><e ldsrc="552"><n>$dataMemberExpression</n></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the value for $fieldName$.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><Property name="$fieldName" access="public" ldsrc="556"><type typename="$fieldType" /><body ldsrc="557,566"><Get ldsrc="559,561"><return ldsrc="560,560"><n>$internalFieldName</n></return></Get><Set ldsrc="562,565"><e ldsrc="563"><a><l><n>$internalFieldName</n></l><r><n>value</n></r></a></e><e ldsrc="564"><a><l><n>changed</n></l><r><lit str="true" type="bool" /></r></a></e></Set></body></Property></classmembers></writecode></r></a></e><jump ldsrc="568" /></bk></case></switch><documentation short="Inserto los miembros en la clase actual&#xD;&#xA;" /><e ldsrc="572"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>listaMiembros</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentClass</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><documentation short="Agrego la info del campo al array list &#xD;&#xA;" /><e ldsrc="574"><fc><l><bo op="m"><l><n>listaCampos</n></l><r><n>Add</n></r></bo></l><args><e><n>fieldName</n></e></args></fc></e><e ldsrc="575"><fc><l><bo op="m"><l><n>listaTipos</n></l><r><n>Add</n></r></bo></l><args><e><n>fieldType</n></e></args></fc></e><return ldsrc="577,577"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="Relations" internalname="Relations#42" access="public" storage="static" ldsrc="579,581"><Parameters><P name="fieldName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="579" /></P><P name="referencedType" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="579" /></P><P name="parentName" number="3"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="579" /></P><P name="relationType" number="4"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="580" /></P><P name="recursiveLoad" number="5"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="580" /></P><P name="recursiveSave" number="6"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="580" /></P><P name="deleteCascade" number="7"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="580" /></P><P name="generateRelation" number="8"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="581" /></P><P name="loadSubRelations" number="9"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="581" /></P><P name="rulesBlock" number="10"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="581" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="581,778"><if ldsrc="582"><boolean><bo op="NOTEQ"><l><n>rulesBlock</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="583,587"><e ldsrc="586"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>BusinessRulesBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>rulesBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if><Decls><d name="internalFieldName" ldsrc="589"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="589"><e><new><type typename="XplIName" /><init ldsrc="589"><list><e><bo><l><lit str="_" /></l><r><bo op="m"><l><n>fieldName</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="internalFieldNameId" ldsrc="590"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="590"><e><new><type typename="XplIName" /><init ldsrc="590"><list><e><bo><l><lit str="_Id" /></l><r><bo op="m"><l><n>fieldName</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="fieldNameId" ldsrc="591"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="591"><e><new><type typename="XplIName" /><init ldsrc="591"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>fieldName</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entityTypeRelation" ldsrc="592"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="592"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="593"><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>referencedType</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="relation" ldsrc="595"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="595"><e><new><type typename="Relation" /></new></e></i></d></Decls><e ldsrc="596"><a><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>fieldName</n></r></a></e><e ldsrc="597"><a><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>referencedType</n></r></a></e><e ldsrc="598"><a><l><bo op="m"><l><n>relation</n></l><r><n>relationType</n></r></bo></l><r><n>relationType</n></r></a></e><e ldsrc="599"><a><l><bo op="m"><l><n>relation</n></l><r><n>parentName</n></r></bo></l><r><n>parentName</n></r></a></e><e ldsrc="600"><a><l><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></l><r><n>recursiveLoad</n></r></a></e><e ldsrc="601"><a><l><bo op="m"><l><n>relation</n></l><r><n>recursiveSave</n></r></bo></l><r><n>recursiveSave</n></r></a></e><e ldsrc="602"><a><l><bo op="m"><l><n>relation</n></l><r><n>deleteCascade</n></r></bo></l><r><n>deleteCascade</n></r></a></e><e ldsrc="603"><a><l><bo op="m"><l><n>relation</n></l><r><n>generateRelation</n></r></bo></l><r><n>generateRelation</n></r></a></e><e ldsrc="604"><a><l><bo op="m"><l><n>relation</n></l><r><n>loadSubRelations</n></r></bo></l><r><n>loadSubRelations</n></r></a></e><documentation short=" Aqui generar los campos para los Id de las relaciones y las propiedades,&#xD;&#xA; si es recursiveLoad entonces agregar un campo y propiedad para los elementos relacionados&#xD;&#xA;" /><Decls><d name="listaMiembros" ldsrc="609"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="609"><e><lit str="0" type="null" /></e></i></d></Decls><documentation short="OK, aqui deberia hacer un switch mas grande de acuerdo a cada tipo de campo&#xD;&#xA;Para los tipos de listas&#xD;&#xA;" /><Decls><d name="listOfTypeName" ldsrc="613"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="613"><e><new><type typename="XplIName" /><init ldsrc="613"><list><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfType" ldsrc="614"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="614"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="615"><fc><l><bo op="m"><l><n>listOfType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo op="m"><l><n>listOfTypeName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e><Decls><d name="str" ldsrc="616"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="616"><e><lit str="System.Diagnostics.CodeAnalysis.SuppressMessage(\\&quot;Microsoft.Usage\\&quot;, \\&quot;CA2227:CollectionPropertiesShouldBeReadOnly\\&quot;, Justification = \\&quot;We need set for serialization and deserialization web service interfaces.\\&quot;)" /></e></i></d></Decls><if ldsrc="617"><boolean><bo op="EQ"><l><n>relationType</n></l><r><n>RelationTypes::UnoAMuchos</n></r></bo></boolean><ifbk ldsrc="618,647"><e ldsrc="646"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="620"><classmembers><e ldsrc="622"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTypeName</n></e><e><t ispointer="true"><dt typename="$entityTypeRelation" /><pi ref="true" /></t></e></args></fc></e><Field name="$internalFieldName" ldsrc="623,623"><type ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></type></Field><e ldsrc="626"><fc><l><n>UtnEmall::Utils::Model::InsertDataMemberAttribute</n></l><args><e><n>$isMobilExp</n></e><e><lit str="true" type="bool" /></e></args></fc></e><e ldsrc="627"><fc><l><n>Zoe::Attribute::Add</n></l><args><e><n>$str</n></e></args></fc></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the value for $fieldName$.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><Property name="$fieldName" access="public" ldsrc="631"><type ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></type><body ldsrc="632,645"><Get ldsrc="634,640"><if ldsrc="635"><boolean><bo op="EQ"><l><n>$internalFieldName</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="636,638"><e ldsrc="637"><a><l><n>$internalFieldName</n></l><r><new><type typename="$listOfType" /></new></r></a></e></ifbk></if><return ldsrc="639,639"><n>$internalFieldName</n></return></Get><Set ldsrc="642,644"><e ldsrc="643"><a><l><n>$internalFieldName</n></l><r><n>value</n></r></a></e></Set></body></Property></classmembers></writecode></r></a></e></ifbk></if><if ldsrc="649"><boolean><bo op="EQ"><l><n>relationType</n></l><r><n>RelationTypes::UnoAUno</n></r></bo></boolean><ifbk ldsrc="650,707"><e ldsrc="704"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="652"><classmembers><Field name="$internalFieldName" ldsrc="655,655"><type ispointer="true"><dt typename="$entityTypeRelation" /><pi ref="true" /></type></Field><Field name="$internalFieldNameId" ldsrc="656,656"><type typename="$INTEGER$" /></Field><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the value for $fieldName$.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="661"><n>$dataMemberExpression</n></e><Property name="$fieldName" access="public" ldsrc="662"><type ispointer="true"><dt typename="$entityTypeRelation" /><pi ref="true" /></type><body ldsrc="663,678"><Get ldsrc="665,667"><return ldsrc="666,666"><n>$internalFieldName</n></return></Get><Set ldsrc="669,677"><e ldsrc="670"><a><l><n>$internalFieldName</n></l><r><n>value</n></r></a></e><documentation short=" If provided value is null set id to 0, else to provided object id&#xD;&#xA;" /><if ldsrc="672"><boolean><bo op="NOTEQ"><l><n>$internalFieldName</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk><e ldsrc="673"><a><l><n>$fieldNameId</n></l><r><bo op="m"><l><n>$internalFieldName</n></l><r><n>Id</n></r></bo></r></a></e></ifbk><else ldsrc="674"><e ldsrc="675"><a><l><n>$fieldNameId</n></l><r><lit str="0" type="integer" /></r></a></e></else></if><e ldsrc="676"><a><l><n>changed</n></l><r><lit str="true" type="bool" /></r></a></e></Set></body></Property><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the Id of the $fieldName$.&#xD;&#xA; If $fieldName$ is set return the Id of the object,&#xD;&#xA; else returns manually stored Id&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="685"><n>$dataMemberExpression</n></e><Property name="$fieldNameId" access="public" ldsrc="686"><type typename="$INTEGER$" /><body ldsrc="687,703"><Get ldsrc="689,698"><if ldsrc="690"><boolean><bo op="EQ"><l><n>$internalFieldName</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="691,693"><return ldsrc="692,692"><n>$internalFieldNameId</n></return></ifbk><else ldsrc="694"><return ldsrc="696,696"><bo op="m"><l><n>$internalFieldName</n></l><r><n>Id</n></r></bo></return></else></if></Get><Set ldsrc="700,702"><e ldsrc="701"><a><l><n>$internalFieldNameId</n></l><r><n>value</n></r></a></e></Set></body></Property></classmembers></writecode></r></a></e><e ldsrc="705"><fc><l><bo op="m"><l><n>listaCampos</n></l><r><n>Add</n></r></bo></l><args><e><n>fieldNameId</n></e></args></fc></e><e ldsrc="706"><fc><l><bo op="m"><l><n>listaTipos</n></l><r><n>Add</n></r></bo></l><args><e><cast><e><t typename="$INTEGER$" /></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></args></fc></e></ifbk></if><if ldsrc="709"><boolean><bo op="EQ"><l><n>relationType</n></l><r><n>RelationTypes::MuchosAMuchos</n></r></bo></boolean><ifbk ldsrc="710,711" /></if><if ldsrc="713"><boolean><bo op="EQ"><l><n>relationType</n></l><r><n>RelationTypes::MuchosAUno</n></r></bo></boolean><ifbk ldsrc="714,771"><e ldsrc="768"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="716"><classmembers><Field name="$internalFieldName" ldsrc="719,719"><type ispointer="true"><dt typename="$entityTypeRelation" /><pi ref="true" /></type></Field><Field name="$internalFieldNameId" ldsrc="720,720"><type typename="$INTEGER$" /></Field><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the value for $fieldName$.&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="725"><n>$dataMemberExpression</n></e><Property name="$fieldName" access="public" ldsrc="726"><type ispointer="true"><dt typename="$entityTypeRelation" /><pi ref="true" /></type><body ldsrc="727,742"><Get ldsrc="729,731"><return ldsrc="730,730"><n>$internalFieldName</n></return></Get><Set ldsrc="733,741"><e ldsrc="734"><a><l><n>$internalFieldName</n></l><r><n>value</n></r></a></e><documentation short="If provided value is null set id to 0, else to provided object id&#xD;&#xA;" /><if ldsrc="736"><boolean><bo op="NOTEQ"><l><n>$internalFieldName</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk><e ldsrc="737"><a><l><n>$fieldNameId</n></l><r><bo op="m"><l><n>$internalFieldName</n></l><r><n>Id</n></r></bo></r></a></e></ifbk><else ldsrc="738"><e ldsrc="739"><a><l><n>$fieldNameId</n></l><r><lit str="0" type="integer" /></r></a></e></else></if><e ldsrc="740"><a><l><n>changed</n></l><r><lit str="true" type="bool" /></r></a></e></Set></body></Property><documentation short=" &lt;summary&gt;&#xD;&#xA; Gets or sets the Id of the $fieldName$.&#xD;&#xA; If $fieldName$ is set return the Id of the object,&#xD;&#xA; else returns manually stored Id&#xD;&#xA; &lt;summary&gt;&#xD;&#xA;" /><e ldsrc="749"><n>$dataMemberExpression</n></e><Property name="$fieldNameId" access="public" ldsrc="750"><type typename="$INTEGER$" /><body ldsrc="751,767"><Get ldsrc="753,762"><if ldsrc="754"><boolean><bo op="EQ"><l><n>$internalFieldName</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="755,757"><return ldsrc="756,756"><n>$internalFieldNameId</n></return></ifbk><else ldsrc="758"><return ldsrc="760,760"><bo op="m"><l><n>$internalFieldName</n></l><r><n>Id</n></r></bo></return></else></if></Get><Set ldsrc="764,766"><e ldsrc="765"><a><l><n>$internalFieldNameId</n></l><r><n>value</n></r></a></e></Set></body></Property></classmembers></writecode></r></a></e><e ldsrc="769"><fc><l><bo op="m"><l><n>listaCampos</n></l><r><n>Add</n></r></bo></l><args><e><n>fieldNameId</n></e></args></fc></e><e ldsrc="770"><fc><l><bo op="m"><l><n>listaTipos</n></l><r><n>Add</n></r></bo></l><args><e><cast><e><t typename="$INTEGER$" /></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></args></fc></e></ifbk></if><documentation short="Inserto los miembros en la clase actual&#xD;&#xA;" /><e ldsrc="773"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>listaMiembros</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentClass</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="775"><fc><l><bo op="m"><l><n>listaRelaciones</n></l><r><n>Add</n></r></bo></l><args><e><n>relation</n></e></args></fc></e><return ldsrc="777,777"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="Relations" internalname="Relations#43" access="public" storage="static" ldsrc="779,780"><Parameters><P name="fieldName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="779" /></P><P name="referencedType" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="779" /></P><P name="relationType" number="3"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="779" /></P><P name="recursiveLoad" number="4"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="780" /></P><P name="recursiveSave" number="5"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="780" /></P><P name="rulesBlock" number="6"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="780" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="780,782"><return ldsrc="781,781"><fc><l><n>Relations</n></l><args><e><n>fieldName</n></e><e><n>referencedType</n></e><e><lit str="0" type="null" /></e><e><n>relationType</n></e><e><n>recursiveLoad</n></e><e><n>recursiveSave</n></e><e><lit str="false" type="bool" /></e><e><lit str="false" type="bool" /></e><e><lit str="true" type="bool" /></e><e><n>rulesBlock</n></e></args></fc></return></FunctionBody></Function><Function name="Relations" internalname="Relations#44" access="public" storage="static" ldsrc="783,784"><Parameters><P name="fieldName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="783" /></P><P name="referencedType" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="783" /></P><P name="relationType" number="3"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="783" /></P><P name="recursiveLoad" number="4"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="784" /></P><P name="recursiveSave" number="5"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="784" /></P><P name="deleteCascade" number="6"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="784" /></P><P name="rulesBlock" number="7"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="784" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="784,786"><return ldsrc="785,785"><fc><l><n>Relations</n></l><args><e><n>fieldName</n></e><e><n>referencedType</n></e><e><lit str="0" type="null" /></e><e><n>relationType</n></e><e><n>recursiveLoad</n></e><e><n>recursiveSave</n></e><e><n>deleteCascade</n></e><e><lit str="false" type="bool" /></e><e><lit str="true" type="bool" /></e><e><n>rulesBlock</n></e></args></fc></return></FunctionBody></Function><Function name="Relations" internalname="Relations#45" access="public" storage="static" ldsrc="787,788"><Parameters><P name="fieldName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="787" /></P><P name="referencedType" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="787" /></P><P name="relationType" number="3"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="787" /></P><P name="recursiveLoad" number="4"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="788" /></P><P name="recursiveSave" number="5"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="788" /></P><P name="deleteCascade" number="6"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="788" /></P><P name="generateRelation" number="7"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="788" /></P><P name="rulesBlock" number="8"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="788" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="788,790"><return ldsrc="789,789"><fc><l><n>Relations</n></l><args><e><n>fieldName</n></e><e><n>referencedType</n></e><e><lit str="0" type="null" /></e><e><n>relationType</n></e><e><n>recursiveLoad</n></e><e><n>recursiveSave</n></e><e><n>deleteCascade</n></e><e><n>generateRelation</n></e><e><lit str="true" type="bool" /></e><e><n>rulesBlock</n></e></args></fc></return></FunctionBody></Function><documentation short=" Define las funciones para el dataAccessEntity. Las inserta dentro de esta clase.&#xD;&#xA;" /><Function name="ProcessModel" internalname="ProcessModel#46" access="public" storage="static" ldsrc="792,792"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="792" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="792" /></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="792,829"><e ldsrc="793"><a><l><n>dataAccessType</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="794"><fc><l><bo op="m"><l><n>dataAccessType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><e ldsrc="795"><a><l><n>entityType</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="796"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><e ldsrc="798"><fc><l><n>SetConnectionObjects</n></l><args><e><n>modelName</n></e></args></fc></e><e ldsrc="800"><fc><l><n>GenerateLoad</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><e ldsrc="802"><fc><l><n>GenerateDBChecked</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><e ldsrc="803"><fc><l><n>GenerateSave</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><e ldsrc="805"><fc><l><n>GenerateDelete</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><e ldsrc="806"><fc><l><n>GenerateCheckDeleteFunctions</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><e ldsrc="808"><fc><l><n>GenerateSetProperties</n></l><args><e><n>modelName</n></e></args></fc></e><e ldsrc="810"><fc><l><n>GenerateLoadAll</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><e ldsrc="811"><fc><l><n>GenerateLoadWhere</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><e ldsrc="813"><fc><l><n>GenerateFunctionRelations</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e><if ldsrc="815"><boolean><fc><l><bo op="m"><l><n>clasesBusiness</n></l><r><n>ContainsKey</n></r></bo></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></boolean><ifbk ldsrc="816,818"><e ldsrc="817"><fc><l><n>DefineBusinessLogic</n></l><args><e><n>modelName</n></e></args></fc></e></ifbk></if><e ldsrc="820"><a><l><n>BusinessRulesBlock</n></l><r><new><type typename="XplFunctionBody" /></new></r></a></e><e ldsrc="822"><a><l><n>listaCampos</n></l><r><new><type typename="ArrayList" /></new></r></a></e><e ldsrc="823"><a><l><n>listaTipos</n></l><r><new><type typename="ArrayList" /></new></r></a></e><e ldsrc="824"><a><l><n>listaRelaciones</n></l><r><new><type typename="ArrayList" /></new></r></a></e><e ldsrc="825"><a><l><n>listaRestricciones</n></l><r><new><type typename="ArrayList" /></new></r></a></e><e ldsrc="826"><a><l><n>addPreserveReferenceAttribute</n></l><r><lit str="false" type="bool" /></r></a></e><return ldsrc="828,828"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short=" Agrega una restriccion a la eliminación de la entidad. &#xD;&#xA; targetTypeName : El nombre de la clase destino a chequear por su existencia.&#xD;&#xA; targetFieldName : El nombre del campo en la clase destino a chequear (el valor de este campo se comparará con el Id de la entidad a borrar&#xD;&#xA;" /><Function name="DeleteRestriction" internalname="DeleteRestriction#47" access="public" storage="static" ldsrc="833,833"><Parameters><P name="targetTypeName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="833" /></P><P name="targetFieldName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="833" /></P><P name="messageToUser" number="3"><type ispointer="true" typeStr="^_$STRING$" ldsrc="833"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="833,840"><Decls><d name="restriction" ldsrc="834"><type ispointer="true"><dt typename="DeleteRestriction" /><pi ref="true" /></type><i ldsrc="834"><e><new><type typename="DeleteRestriction" /></new></e></i></d></Decls><e ldsrc="835"><a><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>targetTypeName</n></r></a></e><e ldsrc="836"><a><l><bo op="m"><l><n>restriction</n></l><r><n>fieldName</n></r></bo></l><r><n>targetFieldName</n></r></a></e><e ldsrc="837"><a><l><bo op="m"><l><n>restriction</n></l><r><n>messageToUser</n></r></bo></l><r><n>messageToUser</n></r></a></e><e ldsrc="838"><fc><l><bo op="m"><l><n>listaRestricciones</n></l><r><n>Add</n></r></bo></l><args><e><n>restriction</n></e></args></fc></e><return ldsrc="839,839"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short=" Genera la función para controlar las relaciones al eliminar&#xD;&#xA;" /><Function name="GenerateCheckDeleteFunctions" internalname="GenerateCheckDeleteFunctions#48" access="public" storage="static" ldsrc="842,842"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="842" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="842" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="842,898"><documentation short=" If there is not restrictions exit&#xD;&#xA;" /><if ldsrc="845"><boolean><bo op="EQ"><l><bo op="m"><l><n>listaRestricciones</n></l><r><n>Count</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk><return ldsrc="845" /></ifbk></if><Decls><d name="funcBody" ldsrc="847"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="847"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="mainEntityName" ldsrc="848"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="848"><e><new><type typename="XplIName" /><init ldsrc="848"><list><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" First create dataaccess variables&#xD;&#xA;" /><Decls><d name="added" ldsrc="851"><type ispointer="true"><dt typename="Hashtable" /><pi ref="true" /></type><i ldsrc="851"><e><new><type typename="Hashtable" /></new></e></i></d></Decls><for ldsrc="853,853"><init><dl><d name="restriction" ldsrc="853"><type ispointer="true"><dt typename="DeleteRestriction" /><pi ref="true" /></type></d></dl></init><condition><n>listaRestricciones</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="853,867"><documentation short=" Name of data access type&#xD;&#xA;" /><Decls><d name="dataAccessName" ldsrc="855"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="855"><e><new><type typename="XplIName" /><init ldsrc="855"><list><e><bo><l><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Name of data access variable&#xD;&#xA;" /><Decls><d name="dataAccessVarName" ldsrc="857"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="857"><e><new><type typename="XplIName" /><init ldsrc="857"><list><e><bo><l><bo><l><lit str="var" /></l><r><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="859"><boolean><bo op="EQ"><l><b><l><n>added</n></l><args><e><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></b></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="859,866"><e ldsrc="864"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>funcBody</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="861"><bk><Decls><d name="$dataAccessVarName" ldsrc="862"><type ispointer="true"><dt typename="$dataAccessName" /><pi ref="true" /></type><i ldsrc="862"><e><new><type typename="$dataAccessName" /></new></e></i></d></Decls></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="865"><fc><l><bo op="m"><l><n>added</n></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e><e><lit str="true" type="bool" /></e></args></fc></e></ifbk></if></forblock></for><for ldsrc="869,869"><init><dl><d name="restriction" ldsrc="869"><type ispointer="true"><dt typename="DeleteRestriction" /><pi ref="true" /></type></d></dl></init><condition><n>listaRestricciones</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="869,887"><documentation short=" Name of entity type&#xD;&#xA;" /><Decls><d name="entityName" ldsrc="871"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="871"><e><new><type typename="XplIName" /><init ldsrc="871"><list><e><bo><l><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Name of data access type&#xD;&#xA;" /><Decls><d name="dataAccessName" ldsrc="873"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="873"><e><new><type typename="XplIName" /><init ldsrc="873"><list><e><bo><l><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Name of data access variable&#xD;&#xA;" /><Decls><d name="dataAccessVarName" ldsrc="875"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="875"><e><new><type typename="XplIName" /><init ldsrc="875"><list><e><bo><l><bo><l><lit str="var" /></l><r><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Name of related field constant identifier on entity&#xD;&#xA;" /><Decls><d name="relatedFieldConstant" ldsrc="877"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="877"><e><new><type typename="XplIName" /><init ldsrc="877"><list><e><bo><l><bo><l><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity::DBId" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>restriction</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="messageString" ldsrc="878"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="878"><e><bo op="m"><l><n>restriction</n></l><r><n>messageToUser</n></r></bo></e></i></d></Decls><e ldsrc="886"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>funcBody</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="881"><bk><if ldsrc="882"><boolean><bo op="GR"><l><bo op="m"><l><fc><l><bo op="m"><l><n>$dataAccessVarName</n></l><r><n>LoadWhere</n></r></bo></l><args><e><n>$relatedFieldConstant</n></e><e><bo op="m"><l><n>entity</n></l><r><n>Id</n></r></bo></e><e><lit str="false" type="bool" /></e><e><n>OperatorType::Equal</n></e></args></fc></l><r><n>Count</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="882,884"><throw ldsrc="883,883"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="883"><list><e><n>$messageString</n></e></list></init></new></throw></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></forblock></for><documentation short=" Create the Function and insert into de DAO class&#xD;&#xA;" /><e ldsrc="897"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="892"><classmembers><Function name="CheckForDelete" storage="static" ldsrc="893,893"><Parameters><P name="entity" number="1"><type ispointer="true" ldsrc="893"><dt typename="$mainEntityName" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="893,895"><e ldsrc="894"><n>$funcBody</n></e></FunctionBody></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></FunctionBody></Function><documentation short=" Genera la funcion Load para la cargar una entity particular		&#xD;&#xA;" /><Function name="GenerateLoad" internalname="GenerateLoad#49" access="public" storage="static" ldsrc="900,900"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="900" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="900" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="900,1177"><Decls><d name="entity" ldsrc="901"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="901"><e><new><type typename="XplIName" /><init ldsrc="901"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="entityStringName" ldsrc="902"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="902"><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="nameId" ldsrc="903"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="903"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="904"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="904"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="sql" ldsrc="905"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="905"><e><bo><l><lit str="SELECT " /></l><r><n>nameId</n></r></bo></e></i></d></Decls><Decls><d name="timestamp" ldsrc="906"><type typename="$INTEGER$" /><i ldsrc="906"><e><bo><l><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></l><r><lit str="1" type="integer" /></r></bo></e></i></d></Decls><for ldsrc="908,908"><init><dl><d name="i" ldsrc="908"><type typename="$INTEGER$" /><i ldsrc="908"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="909,911"><e ldsrc="910"><a operation="add"><l><n>sql</n></l><r><bo><l><lit str=", " /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e></forblock></for><e ldsrc="913"><a operation="add"><l><n>sql</n></l><r><bo><l><bo><l><bo><l><bo><l><bo><l><lit str=", timestamp FROM [" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="] WHERE " /></r></bo></l><r><n>nameId</n></r></bo></l><r><lit str=" = " /></r></bo></l><r><n>nameIdParameter</n></r></bo></r></a></e><Decls><d name="fieldsBlock" ldsrc="915"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="915"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><e ldsrc="921"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="918"><e><a><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></r></a></e></writecode></e></args></fc></e><Decls><d name="propertyName" ldsrc="923"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></d></Decls><Decls><d name="j" ldsrc="924"><type typename="$INTEGER$" /><i ldsrc="924"><e><lit str="0" type="integer" /></e></i></d></Decls><for ldsrc="925,925"><init><dl><d name="i" ldsrc="925"><type typename="$INTEGER$" /><i ldsrc="925"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="926,990"><e ldsrc="927"><uo op="inc"><u><n>j</n></u></uo></e><Decls><d name="propertyType" ldsrc="928"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="928"><e><cast><e><b><l><n>listaTipos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="propertyTypeCall" ldsrc="929"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="929"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="read" ldsrc="930"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="930"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="datetime" ldsrc="931"><type typename="$BOOLEAN$" /><i ldsrc="931"><e><lit str="false" type="bool" /></e></i></d></Decls><Decls><d name="isString" ldsrc="932"><type typename="$BOOLEAN$" /><i ldsrc="932"><e><lit str="false" type="bool" /></e></i></d></Decls><documentation short=" Console::WriteLine(&quot;$$$ VALOR DEL TIPO : &quot;+propertyName.Identifier+&quot; &quot;+propertyType.get_typename());&#xD;&#xA;" /><switch ldsrc="935"><e><fc><l><bo op="m"><l><n>propertyType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e><case ldsrc="937"><e><n>NativeTypes::Boolean</n></e><bk><e ldsrc="938"><a><l><n>read</n></l><r><writecode ldsrc="938"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetBoolean</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="939" /></bk></case><case ldsrc="940"><e><n>NativeTypes::Float</n></e><bk><e ldsrc="941"><a><l><n>read</n></l><r><writecode ldsrc="941"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetFloat</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="942" /></bk></case><case ldsrc="943"><e><n>NativeTypes::Double</n></e><bk><e ldsrc="944"><a><l><n>read</n></l><r><writecode ldsrc="944"><e><fc><l><n>Convert::ToDouble</n></l><args><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetDecimal</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></args></fc></e></writecode></r></a></e><jump ldsrc="945" /></bk></case><case ldsrc="946"><e><n>NativeTypes::Integer</n></e><bk><e ldsrc="947"><a><l><n>read</n></l><r><writecode ldsrc="947"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="948" /></bk></case><case ldsrc="949"><e><n>NativeTypes::String</n></e><bk><e ldsrc="950"><a><l><n>propertyName</n></l><r><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></r></a></e><e ldsrc="958"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="952"><bk><if ldsrc="954"><boolean><uo op="not"><u><fc><l><bo op="m"><l><n>reader</n></l><r><n>IsDBNull</n></r></bo></l><args><e><n>$j</n></e></args></fc></u></uo></boolean><ifbk ldsrc="955,957"><e ldsrc="956"><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetString</n></r></bo></l><args><e><n>$j</n></e></args></fc></r></a></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="960"><a><l><n>isString</n></l><r><lit str="true" type="bool" /></r></a></e><jump ldsrc="961" /></bk></case><case ldsrc="962"><e><lit str="UtnEmall.Utils.Image" /></e><bk><e ldsrc="963"><a><l><n>propertyName</n></l><r><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></r></a></e><e ldsrc="972"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="965"><bk><if ldsrc="967"><boolean><uo op="not"><u><fc><l><bo op="m"><l><n>reader</n></l><r><n>IsDBNull</n></r></bo></l><args><e><n>$j</n></e></args></fc></u></uo></boolean><ifbk ldsrc="968,971"><Decls><d name="bytes" ldsrc="969"><type ispointer="true"><dt isarray="true"><dt typename="$BYTE$" /></dt><pi ref="true" /></type><i ldsrc="969"><e><cast><e><b><l><n>reader</n></l><args><e><n>$j</n></e></args></b></e><type ispointer="true"><dt isarray="true"><dt typename="$BYTE$" /></dt><pi ref="true" /></type></cast></e></i></d></Decls><e ldsrc="970"><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><fc><l><n>DotNET::System::Convert::ToBase64String</n></l><args><e><n>bytes</n></e></args></fc></r></a></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="974"><a><l><n>isString</n></l><r><lit str="true" type="bool" /></r></a></e><jump ldsrc="975" /></bk></case><case ldsrc="976"><e><empty /></e><bk><e ldsrc="977"><a><l><n>read</n></l><r><writecode ldsrc="977"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetDateTime</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="978" /></bk></case></switch><if ldsrc="981"><boolean><uo op="not"><u><n>isString</n></u></uo></boolean><ifbk ldsrc="982,989"><e ldsrc="983"><a><l><n>propertyName</n></l><r><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></r></a></e><e ldsrc="988"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="985"><e><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><n>$read</n></r></a></e></writecode></e></args></fc></e></ifbk></if></forblock></for><Decls><d name="fieldsBlockRelations" ldsrc="992"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="992"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="993,993"><init><dl><d name="i" ldsrc="993"><type typename="$INTEGER$" /><i ldsrc="993"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaRelaciones</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="994,1006"><Decls><d name="relation" ldsrc="995"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="995"><e><cast><e><b><l><n>listaRelaciones</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="functionName" ldsrc="996"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="996"><e><new><type typename="XplIName" /><init ldsrc="996"><list><e><bo><l><lit str="LoadRelation" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="998"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></boolean><ifbk ldsrc="999,1005"><e ldsrc="1004"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlockRelations</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1001"><e><fc><l><n>$functionName</n></l><args><e><n>$entity</n></e><e><n>scope</n></e></args></fc></e></writecode></e></args></fc></e></ifbk></if></forblock></for><Decls><d name="loadFunction" ldsrc="1010"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="1010"><e><writecode ldsrc="1010"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to load a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;id&quot;&gt;The ID of the record to load&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;loadRelation&quot;&gt;if is true load the relation&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;Internal structure used to avoid circular reference locks, must be provided if calling from other data access object&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;The entity instance&lt;/returns&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If a DbException occurs while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Load" access="public" ldsrc="1022,1022"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="1022" /></P><P name="loadRelation" number="2"><type typename="$BOOLEAN$" ldsrc="1022" /></P><P name="scope" number="3"><type ispointer="true" ldsrc="1022"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$entityType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1023,1117"><documentation short=" Build a key for internal scope object&#xD;&#xA;" /><Decls><d name="scopeKey" ldsrc="1025"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1025"><e><bo><l><fc><l><bo op="m"><l><n>id</n></l><r><n>ToString</n></r></bo></l><args><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><n>$entityStringName</n></r></bo></e></i></d></Decls><if ldsrc="1026"><boolean><bo op="NOTEQ"><l><n>scope</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1027,1034"><documentation short=" If scope contains the object it was already loaded, &#xD;&#xA; return it to avoid circular references&#xD;&#xA;" /><if ldsrc="1030"><boolean><fc><l><bo op="m"><l><n>scope</n></l><r><n>ContainsKey</n></r></bo></l><args><e><n>scopeKey</n></e></args></fc></boolean><ifbk ldsrc="1031,1033"><return ldsrc="1032,1032"><cast><e><b><l><n>scope</n></l><args><e><n>scopeKey</n></e></args></b></e><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></cast></return></ifbk></if></ifbk><else ldsrc="1035"><documentation short=" If there isn't a current scope create one&#xD;&#xA;" /><e ldsrc="1038"><a><l><n>scope</n></l><r><new><type typename="DictionaryOfStringIEntity" /></new></r></a></e></else></if><Decls><d name="$entity" ldsrc="1041"><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type><i ldsrc="1041"><e><lit str="0" type="null" /></e></i></d></Decls><documentation short=" Check if the entity was already loaded by current data access object&#xD;&#xA; and return it if that is the case&#xD;&#xA;" /><if ldsrc="1044"><boolean><fc><l><bo op="m"><l><n>inMemoryEntities</n></l><r><n>ContainsKey</n></r></bo></l><args><e><n>id</n></e></args></fc></boolean><ifbk ldsrc="1045,1049"><e ldsrc="1046"><a><l><n>$entity</n></l><r><b><l><n>inMemoryEntities</n></l><args><e><n>id</n></e></args></b></r></a></e><documentation short=" Add current object to current load scope&#xD;&#xA;" /><e ldsrc="1048"><fc><l><bo op="m"><l><n>scope</n></l><r><n>Add</n></r></bo></l><args><e><n>scopeKey</n></e><e><n>$entity</n></e></args></fc></e></ifbk><else ldsrc="1050"><Decls><d name="closeConnection" ldsrc="1052"><type typename="$BOOLEAN$" /><i ldsrc="1052"><e><lit str="false" type="bool" /></e></i></d></Decls><try ldsrc="1053"><trybk ldsrc="1054,1100"><documentation short=" Open a new connection if it isn't on a transaction&#xD;&#xA;" /><if ldsrc="1056"><boolean><bo op="OR"><l><bo op="EQ"><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="EQ"><l><fc><l><bo op="m"><l><bo op="m"><l><n>dbConnection</n></l><r><n>State</n></r></bo></l><r><n>CompareTo</n></r></bo></l><args><e><n>DotNET::System::Data::ConnectionState::Closed</n></e></args></fc></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="1057,1061"><e ldsrc="1058"><a><l><n>closeConnection</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="1059"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="1060"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e></ifbk></if><Decls><d name="cmdText" ldsrc="1063"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1063"><e><n>$sql</n></e></i></d></Decls><documentation short=" Create the command&#xD;&#xA;" /><Decls><d name="sqlCommand" ldsrc="1065"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="1065"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>cmdText</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><documentation short=" Create the Id parameter for the query&#xD;&#xA;" /><Decls><d name="parameter" ldsrc="1067"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="1067"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="1068"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><n>id</n></r></a></e><e ldsrc="1069"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e><documentation short=" Use a DataReader to get data from db&#xD;&#xA;" /><Decls><d name="reader" ldsrc="1072"><type typename="IDataReader" /><i ldsrc="1072"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteReader</n></r></bo></l><args /></fc></e></i></d></Decls><e ldsrc="1073"><a><l><n>$entity</n></l><r><new><type typename="$entityType" /></new></r></a></e><if ldsrc="1075"><boolean><fc><l><bo op="m"><l><n>reader</n></l><r><n>Read</n></r></bo></l><args /></fc></boolean><ifbk ldsrc="1076,1095"><documentation short=" Load fields of entity&#xD;&#xA;" /><e ldsrc="1078"><n>$fieldsBlock</n></e><documentation short=" Add current object to the scope&#xD;&#xA;" /><e ldsrc="1081"><fc><l><bo op="m"><l><n>scope</n></l><r><n>Add</n></r></bo></l><args><e><n>scopeKey</n></e><e><n>$entity</n></e></args></fc></e><documentation short=" Add current object to cache of loaded entities&#xD;&#xA;" /><e ldsrc="1083"><fc><l><bo op="m"><l><n>inMemoryEntities</n></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></e><e><n>$entity</n></e></args></fc></e><documentation short=" Read the timestamp and set new and changed properties&#xD;&#xA;" /><e ldsrc="1086"><a><l><bo op="m"><l><n>$entity</n></l><r><n>Timestamp</n></r></bo></l><r><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetDateTime</n></r></bo></l><args><e><n>$timestamp</n></e></args></fc></r></a></e><e ldsrc="1087"><a><l><bo op="m"><l><n>$entity</n></l><r><n>IsNew</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e><e ldsrc="1088"><a><l><bo op="m"><l><n>$entity</n></l><r><n>Changed</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e><documentation short=" Close the reader&#xD;&#xA;" /><e ldsrc="1091"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e><documentation short=" Load related objects if required&#xD;&#xA;" /><if ldsrc="1093"><boolean><n>loadRelation</n></boolean><ifbk><e ldsrc="1094"><n>$fieldsBlockRelations</n></e></ifbk></if></ifbk><else ldsrc="1096"><e ldsrc="1098"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e></else></if></trybk><catchbk><init ldsrc="1101"><d name="dbException" ldsrc="1101"><type ispointer="true"><dt typename="DbException" /><pi ref="true" /></type></d></init><bk ldsrc="1102,1105"><documentation short=" Catch DBException and rethrow as custom exception&#xD;&#xA;" /><throw ldsrc="1104,1104"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="1104"><list><e><bo op="m"><l><n>dbException</n></l><r><n>Message</n></r></bo></e><e><n>dbException</n></e></list></init></new></throw></bk></catchbk><finalybk ldsrc="1107,1113"><documentation short=" Close connection if it was opened by ourself&#xD;&#xA;" /><if ldsrc="1109"><boolean><n>closeConnection</n></boolean><ifbk ldsrc="1110,1112"><e ldsrc="1111"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if></finalybk></try></else></if><documentation short=" Return the loaded entity&#xD;&#xA;" /><return ldsrc="1116,1116"><n>$entity</n></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="1121"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="1121"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="1122"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1123,1125"><e ldsrc="1124"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if><Decls><d name="loadFunctionOneParameter" ldsrc="1128"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="1128"><e><writecode ldsrc="1128"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to load a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;id&quot;&gt;The ID of the record to load&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;the entity instance&lt;/returns&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If a DbException occurs while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Load" access="public" ldsrc="1138,1138"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="1138" /></P></Parameters><ReturnType ispointer="true"><dt typename="$entityType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1139,1141"><return ldsrc="1140,1140"><fc><l><n>Load</n></l><args><e><n>id</n></e><e><lit str="true" type="bool" /></e><e><lit str="0" type="null" /></e></args></fc></return></FunctionBody></Function><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to load a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;id&quot;&gt;The ID of the record to load&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;loadRelation&quot;&gt;if is true load the relation&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;the entity instance&lt;/returns&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If a DbException occurs while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Load" access="public" ldsrc="1152,1152"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="1152" /></P><P name="loadRelations" number="2"><type typename="$BOOLEAN$" ldsrc="1152" /></P></Parameters><ReturnType ispointer="true"><dt typename="$entityType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1153,1155"><return ldsrc="1154,1154"><fc><l><n>Load</n></l><args><e><n>id</n></e><e><n>loadRelations</n></e><e><lit str="0" type="null" /></e></args></fc></return></FunctionBody></Function><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to load a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;id&quot;&gt;The ID of the record to load&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;Internal structure used to avoid circular reference locks, must be provided if calling from other data access object&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;the entity instance&lt;/returns&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If a DbException occurs while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Load" access="public" ldsrc="1166,1166"><Parameters><P name="id" number="1"><type typename="$INTEGER$" ldsrc="1166" /></P><P name="scope" number="2"><type ispointer="true" ldsrc="1166"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$entityType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1167,1169"><return ldsrc="1168,1168"><fc><l><n>Load</n></l><args><e><n>id</n></e><e><lit str="true" type="bool" /></e><e><n>scope</n></e></args></fc></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><e ldsrc="1172"><a><l><n>target</n></l><r><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></r></a></e><if ldsrc="1173"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1173,1175"><e ldsrc="1174"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadFunctionOneParameter</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion LoadWhere para cargar todas las entitys correspondientes&#xD;&#xA;" /><Function name="GenerateLoadWhere" internalname="GenerateLoadWhere#50" access="public" storage="static" ldsrc="1179,1179"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1179" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1179" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="1179,1379"><Decls><d name="entityList" ldsrc="1180"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1180"><e><new><type typename="XplIName" /><init ldsrc="1180"><list><e><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="List" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entity" ldsrc="1181"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1181"><e><new><type typename="XplIName" /><init ldsrc="1181"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="nameId" ldsrc="1182"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1182"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="1183"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1183"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="sql" ldsrc="1184"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1184"><e><bo><l><lit str="SELECT " /></l><r><n>nameId</n></r></bo></e></i></d></Decls><Decls><d name="timestamp" ldsrc="1186"><type typename="$INTEGER$" /><i ldsrc="1186"><e><bo><l><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></l><r><lit str="1" type="integer" /></r></bo></e></i></d></Decls><for ldsrc="1188,1188"><init><dl><d name="i" ldsrc="1188"><type typename="$INTEGER$" /><i ldsrc="1188"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1189,1191"><e ldsrc="1190"><a operation="add"><l><n>sql</n></l><r><bo><l><lit str=", " /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e></forblock></for><e ldsrc="1193"><a operation="add"><l><n>sql</n></l><r><bo><l><bo><l><lit str=", timestamp FROM [" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="]" /></r></bo></r></a></e><Decls><d name="fieldsBlock" ldsrc="1195"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1195"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><e ldsrc="1201"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1198"><e><a><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></r></a></e></writecode></e></args></fc></e><Decls><d name="propertyName" ldsrc="1203"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></d></Decls><Decls><d name="j" ldsrc="1204"><type typename="$INTEGER$" /><i ldsrc="1204"><e><lit str="0" type="integer" /></e></i></d></Decls><for ldsrc="1205,1205"><init><dl><d name="i" ldsrc="1205"><type typename="$INTEGER$" /><i ldsrc="1205"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1206,1251"><e ldsrc="1207"><uo op="inc"><u><n>j</n></u></uo></e><Decls><d name="propertyType" ldsrc="1208"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1208"><e><cast><e><b><l><n>listaTipos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="propertyTypeCall" ldsrc="1209"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1209"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="read" ldsrc="1210"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1210"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="datetime" ldsrc="1211"><type typename="$BOOLEAN$" /><i ldsrc="1211"><e><lit str="false" type="bool" /></e></i></d></Decls><Decls><d name="isString" ldsrc="1212"><type typename="$BOOLEAN$" /><i ldsrc="1212"><e><lit str="false" type="bool" /></e></i></d></Decls><switch ldsrc="1213"><e><fc><l><bo op="m"><l><n>propertyType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e><case ldsrc="1215"><e><n>NativeTypes::Boolean</n></e><bk><e ldsrc="1216"><a><l><n>read</n></l><r><writecode ldsrc="1216"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetBoolean</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1217" /></bk></case><case ldsrc="1218"><e><n>NativeTypes::Float</n></e><bk><e ldsrc="1219"><a><l><n>read</n></l><r><writecode ldsrc="1219"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetFloat</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1220" /></bk></case><case ldsrc="1221"><e><n>NativeTypes::Double</n></e><bk><e ldsrc="1222"><a><l><n>read</n></l><r><writecode ldsrc="1222"><e><fc><l><n>Convert::ToDouble</n></l><args><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetDecimal</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></args></fc></e></writecode></r></a></e><jump ldsrc="1223" /></bk></case><case ldsrc="1224"><e><n>NativeTypes::Integer</n></e><bk><e ldsrc="1225"><a><l><n>read</n></l><r><writecode ldsrc="1225"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1226" /></bk></case><case ldsrc="1227"><e><n>NativeTypes::String</n></e><bk><e ldsrc="1228"><a><l><n>propertyName</n></l><r><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></r></a></e><e ldsrc="1234"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1229"><bk><if ldsrc="1230"><boolean><uo op="not"><u><fc><l><bo op="m"><l><n>reader</n></l><r><n>IsDBNull</n></r></bo></l><args><e><n>$j</n></e></args></fc></u></uo></boolean><ifbk ldsrc="1231,1233"><e ldsrc="1232"><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetString</n></r></bo></l><args><e><n>$j</n></e></args></fc></r></a></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="1235"><a><l><n>isString</n></l><r><lit str="true" type="bool" /></r></a></e><jump ldsrc="1236" /></bk></case><case ldsrc="1237"><e><empty /></e><bk><e ldsrc="1238"><a><l><n>read</n></l><r><writecode ldsrc="1238"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetDateTime</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1239" /></bk></case></switch><if ldsrc="1242"><boolean><uo op="not"><u><n>isString</n></u></uo></boolean><ifbk ldsrc="1243,1250"><e ldsrc="1244"><a><l><n>propertyName</n></l><r><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></r></a></e><e ldsrc="1249"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1246"><e><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><n>$read</n></r></a></e></writecode></e></args></fc></e></ifbk></if></forblock></for><Decls><d name="fieldsBlockRelations" ldsrc="1253"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1253"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="1254,1254"><init><dl><d name="i" ldsrc="1254"><type typename="$INTEGER$" /><i ldsrc="1254"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaRelaciones</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1255,1267"><Decls><d name="relation" ldsrc="1256"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="1256"><e><cast><e><b><l><n>listaRelaciones</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="functionName" ldsrc="1257"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1257"><e><new><type typename="XplIName" /><init ldsrc="1257"><list><e><bo><l><lit str="LoadRelation" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="1259"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></boolean><ifbk ldsrc="1260,1266"><e ldsrc="1265"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlockRelations</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1262"><e><fc><l><n>$functionName</n></l><args><e><n>$entity</n></e></args></fc></e></writecode></e></args></fc></e></ifbk></if></forblock></for><documentation short="Tipo para lista&#xD;&#xA;" /><Decls><d name="listOfType" ldsrc="1270"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1270"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1271"><fc><l><bo op="m"><l><n>listOfType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="loadWhereFunction" ldsrc="1273"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="1273"><e><writecode ldsrc="1273"><classmembers><e ldsrc="1275"><fc><l><n>UtnEmall::Utils::List::New</n></l><args><e><n>ListInt</n></e><e><t typename="$INTEGER$" /></e></args></fc></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Load a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;propertyName&quot;&gt;A string with the name of the field or a&#xD;&#xA;	constant from the class that represent that field&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;expValue&quot;&gt;The value that will be inserted on the where&#xD;&#xA; clause of the sql query&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;loadRelation&quot;&gt;If is true load the relations&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;A list containing all the entities that match the where clause&lt;/returns&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; If &lt;paramref name=&quot;propertyName&quot;/&gt; is null or empty.&#xD;&#xA; If &lt;paramref name=&quot;propertyName&quot;/&gt; is not a property of $entityType$ class.&#xD;&#xA; If &lt;paramref name=&quot;expValue&quot;/&gt; is null.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="LoadWhere" access="public" ldsrc="1294,1294"><Parameters><P name="propertyName" number="1"><type ispointer="true" ldsrc="1294"><dt typename="$STRING$" /><pi ref="true" /></type></P><P name="expValue" number="2"><type ispointer="true" ldsrc="1294"><dt typename="$OBJECT$" /><pi ref="true" /></type></P><P name="loadRelation" number="3"><type typename="$BOOLEAN$" ldsrc="1294" /></P><P name="operatorType" number="4"><type typename="OperatorType" ldsrc="1294" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1295,1371"><if ldsrc="1296"><boolean><bo op="OR"><l><fc><l><n>DotNET::System::String::IsNullOrEmpty</n></l><args><e><n>propertyName</n></e></args></fc></l><r><bo op="EQ"><l><n>expValue</n></l><r><lit str="0" type="null" /></r></bo></r></bo></boolean><ifbk ldsrc="1297,1299"><throw ldsrc="1298,1298"><new><type typename="ArgumentException" /><init ldsrc="1298"><list><e><lit str="The argument can not be null or be empty" /></e><e><lit str="propertyName" /></e></list></init></new></throw></ifbk></if><if ldsrc="1300"><boolean><uo op="not"><u><fc><l><bo op="m"><l><n>properties</n></l><r><n>ContainsKey</n></r></bo></l><args><e><n>propertyName</n></e></args></fc></u></uo></boolean><ifbk ldsrc="1301,1303"><throw ldsrc="1302,1302"><new><type typename="ArgumentException" /><init ldsrc="1302"><list><e><bo><l><bo><l><lit str="The property " /></l><r><n>propertyName</n></r></bo></l><r><lit str=" is not a property of this entity" /></r></bo></e><e><lit str="propertyName" /></e></list></init></new></throw></ifbk></if><Decls><d name="$entityList" ldsrc="1305"><type ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></type></d></Decls><Decls><d name="closeConnection" ldsrc="1307"><type typename="$BOOLEAN$" /><i ldsrc="1307"><e><lit str="false" type="bool" /></e></i></d></Decls><try ldsrc="1308"><trybk ldsrc="1309,1355"><documentation short=" Open a new connection with a database if necessary&#xD;&#xA;" /><if ldsrc="1311"><boolean><bo op="OR"><l><bo op="EQ"><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="EQ"><l><fc><l><bo op="m"><l><bo op="m"><l><n>dbConnection</n></l><r><n>State</n></r></bo></l><r><n>CompareTo</n></r></bo></l><args><e><n>DotNET::System::Data::ConnectionState::Closed</n></e></args></fc></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="1312,1316"><e ldsrc="1313"><a><l><n>closeConnection</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="1314"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="1315"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e></ifbk></if><Decls><d name="op" ldsrc="1318"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1318"><e><fc><l><n>DataAccessConnection::GetOperatorString</n></l><args><e><n>operatorType</n></e></args></fc></e></i></d></Decls><documentation short=" Build the query string&#xD;&#xA;" /><Decls><d name="cmdText" ldsrc="1321"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1321"><e><bo><l><bo><l><bo><l><bo><l><bo><l><n>$sql</n></l><r><lit str=" WHERE " /></r></bo></l><r><n>propertyName</n></r></bo></l><r><lit str=" " /></r></bo></l><r><n>op</n></r></bo></l><r><lit str=" @expValue" /></r></bo></e></i></d></Decls><documentation short=" Create the command&#xD;&#xA;" /><Decls><d name="sqlCommand" ldsrc="1323"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="1323"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>cmdText</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><documentation short=" Add parameters values to the command&#xD;&#xA;" /><Decls><d name="parameter" ldsrc="1326"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="1326"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args /></fc></e></i></d></Decls><e ldsrc="1327"><a><l><bo op="m"><l><n>parameter</n></l><r><n>ParameterName</n></r></bo></l><r><lit str="@expValue" /></r></a></e><Decls><d name="parameterType" ldsrc="1328"><type ispointer="true"><dt typename="DotNET::System::Type" /><pi ref="true" /></type><i ldsrc="1328"><e><b><l><n>properties</n></l><args><e><n>propertyName</n></e></args></b></e></i></d></Decls><e ldsrc="1329"><a><l><bo op="m"><l><n>parameter</n></l><r><n>DbType</n></r></bo></l><r><fc><l><n>DataAccessConnection::GetParameterDBType</n></l><args><e><n>parameterType</n></e></args></fc></r></a></e><e ldsrc="1331"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><n>expValue</n></r></a></e><e ldsrc="1332"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e><documentation short=" Create a DataReader&#xD;&#xA;" /><Decls><d name="reader" ldsrc="1335"><type ispointer="true"><dt typename="IDataReader" /><pi ref="true" /></type><i ldsrc="1335"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteReader</n></r></bo></l><args /></fc></e></i></d></Decls><e ldsrc="1336"><a><l><n>$entityList</n></l><r><new><type typename="$listOfType" /></new></r></a></e><Decls><d name="$entity" ldsrc="1337"><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></d></Decls><Decls><d name="listId" ldsrc="1338"><type typename="ListInt" /><i ldsrc="1338"><e><new><type typename="ListInt" /></new></e></i></d></Decls><documentation short=" Add list of Ids to a list&#xD;&#xA;" /><while ldsrc="1341"><boolean><fc><l><bo op="m"><l><n>reader</n></l><r><n>Read</n></r></bo></l><args /></fc></boolean><dobk ldsrc="1342,1344"><e ldsrc="1343"><fc><l><bo op="m"><l><n>listId</n></l><r><n>Add</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></e></args></fc></e></dobk></while><documentation short=" Close the reader&#xD;&#xA;" /><e ldsrc="1347"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e><documentation short=" Load the entities&#xD;&#xA;" /><for ldsrc="1350,1350"><init><dl><d name="id" ldsrc="1350"><type typename="$INTEGER$" /></d></dl></init><condition><n>listId</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1351,1354"><e ldsrc="1352"><a><l><n>$entity</n></l><r><fc><l><n>Load</n></l><args><e><n>id</n></e><e><n>loadRelation</n></e><e><lit str="0" type="null" /></e></args></fc></r></a></e><e ldsrc="1353"><fc><l><bo op="m"><l><n>$entityList</n></l><r><n>Add</n></r></bo></l><args><e><n>$entity</n></e></args></fc></e></forblock></for></trybk><catchbk><init ldsrc="1356"><d name="dbException" ldsrc="1356"><type ispointer="true"><dt typename="DbException" /><pi ref="true" /></type></d></init><bk ldsrc="1357,1360"><documentation short=" Catch DbException and rethrow as custom exception&#xD;&#xA;" /><throw ldsrc="1359,1359"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="1359"><list><e><bo op="m"><l><n>dbException</n></l><r><n>Message</n></r></bo></e><e><n>dbException</n></e></list></init></new></throw></bk></catchbk><finalybk ldsrc="1362,1368"><documentation short=" Close connection if it was opened by myself&#xD;&#xA;" /><if ldsrc="1364"><boolean><n>closeConnection</n></boolean><ifbk ldsrc="1365,1367"><e ldsrc="1366"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if></finalybk></try><return ldsrc="1370,1370"><n>$entityList</n></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="1375"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="1375"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="1376"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1376,1378"><e ldsrc="1377"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadWhereFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion LoadAll para cargar todas las entitys correspondientes&#xD;&#xA;" /><Function name="GenerateLoadAll" internalname="GenerateLoadAll#51" access="public" storage="static" ldsrc="1381,1381"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1381" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1381" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="1381,1556"><Decls><d name="entityList" ldsrc="1382"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1382"><e><new><type typename="XplIName" /><init ldsrc="1382"><list><e><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="List" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entity" ldsrc="1383"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1383"><e><new><type typename="XplIName" /><init ldsrc="1383"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="nameId" ldsrc="1384"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1384"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="1385"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1385"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="sql" ldsrc="1386"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1386"><e><bo><l><lit str="SELECT " /></l><r><n>nameId</n></r></bo></e></i></d></Decls><documentation short=" for(int i = 0; i&lt;listaCampos.Count; i++)&#xD;&#xA; {&#xD;&#xA;	sql += &quot;, &quot; + ToLowerCamelCase(((XplIName^)listaCampos[i]).Identifier);&#xD;&#xA; }&#xD;&#xA; sql+=&quot;, timestamp FROM [&quot;+ tableName.Identifier + &quot;]&quot;;&#xD;&#xA;" /><e ldsrc="1395"><a operation="add"><l><n>sql</n></l><r><bo><l><bo><l><lit str=" FROM [" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="]" /></r></bo></r></a></e><Decls><d name="timestamp" ldsrc="1397"><type typename="$INTEGER$" /><i ldsrc="1397"><e><bo><l><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></l><r><lit str="1" type="integer" /></r></bo></e></i></d></Decls><Decls><d name="fieldsBlock" ldsrc="1399"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1399"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><e ldsrc="1405"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1402"><e><a><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></r></a></e></writecode></e></args></fc></e><Decls><d name="propertyName" ldsrc="1407"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></d></Decls><Decls><d name="j" ldsrc="1408"><type typename="$INTEGER$" /><i ldsrc="1408"><e><lit str="0" type="integer" /></e></i></d></Decls><for ldsrc="1409,1409"><init><dl><d name="i" ldsrc="1409"><type typename="$INTEGER$" /><i ldsrc="1409"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1410,1455"><e ldsrc="1411"><uo op="inc"><u><n>j</n></u></uo></e><Decls><d name="propertyType" ldsrc="1412"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1412"><e><cast><e><b><l><n>listaTipos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="propertyTypeCall" ldsrc="1413"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1413"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="read" ldsrc="1414"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1414"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="datetime" ldsrc="1415"><type typename="$BOOLEAN$" /><i ldsrc="1415"><e><lit str="false" type="bool" /></e></i></d></Decls><Decls><d name="isString" ldsrc="1416"><type typename="$BOOLEAN$" /><i ldsrc="1416"><e><lit str="false" type="bool" /></e></i></d></Decls><switch ldsrc="1417"><e><fc><l><bo op="m"><l><n>propertyType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e><case ldsrc="1419"><e><n>NativeTypes::Boolean</n></e><bk><e ldsrc="1420"><a><l><n>read</n></l><r><writecode ldsrc="1420"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetBoolean</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1421" /></bk></case><case ldsrc="1422"><e><n>NativeTypes::Float</n></e><bk><e ldsrc="1423"><a><l><n>read</n></l><r><writecode ldsrc="1423"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetFloat</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1424" /></bk></case><case ldsrc="1425"><e><n>NativeTypes::Double</n></e><bk><e ldsrc="1426"><a><l><n>read</n></l><r><writecode ldsrc="1426"><e><fc><l><n>Convert::ToDouble</n></l><args><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetDecimal</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></args></fc></e></writecode></r></a></e><jump ldsrc="1427" /></bk></case><case ldsrc="1428"><e><n>NativeTypes::Integer</n></e><bk><e ldsrc="1429"><a><l><n>read</n></l><r><writecode ldsrc="1429"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1430" /></bk></case><case ldsrc="1431"><e><n>NativeTypes::String</n></e><bk><e ldsrc="1432"><a><l><n>propertyName</n></l><r><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></r></a></e><e ldsrc="1438"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1433"><bk><if ldsrc="1434"><boolean><uo op="not"><u><fc><l><bo op="m"><l><n>reader</n></l><r><n>IsDBNull</n></r></bo></l><args><e><n>$j</n></e></args></fc></u></uo></boolean><ifbk ldsrc="1435,1437"><e ldsrc="1436"><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetString</n></r></bo></l><args><e><n>$j</n></e></args></fc></r></a></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="1439"><a><l><n>isString</n></l><r><lit str="true" type="bool" /></r></a></e><jump ldsrc="1440" /></bk></case><case ldsrc="1441"><e><empty /></e><bk><e ldsrc="1442"><a><l><n>read</n></l><r><writecode ldsrc="1442"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetDateTime</n></r></bo></l><args><e><n>$j</n></e></args></fc></e></writecode></r></a></e><jump ldsrc="1443" /></bk></case></switch><if ldsrc="1446"><boolean><uo op="not"><u><n>isString</n></u></uo></boolean><ifbk ldsrc="1447,1454"><e ldsrc="1448"><a><l><n>propertyName</n></l><r><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></r></a></e><e ldsrc="1453"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1450"><e><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><n>$read</n></r></a></e></writecode></e></args></fc></e></ifbk></if></forblock></for><Decls><d name="fieldsBlockRelations" ldsrc="1457"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1457"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="1458,1458"><init><dl><d name="i" ldsrc="1458"><type typename="$INTEGER$" /><i ldsrc="1458"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaRelaciones</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1459,1471"><Decls><d name="relation" ldsrc="1460"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="1460"><e><cast><e><b><l><n>listaRelaciones</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="functionName" ldsrc="1461"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1461"><e><new><type typename="XplIName" /><init ldsrc="1461"><list><e><bo><l><lit str="LoadRelation" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="1463"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></boolean><ifbk ldsrc="1464,1470"><e ldsrc="1469"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlockRelations</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1466"><e><fc><l><n>$functionName</n></l><args><e><n>$entity</n></e></args></fc></e></writecode></e></args></fc></e></ifbk></if></forblock></for><documentation short="Tipo para lista&#xD;&#xA;" /><Decls><d name="listOfTypeName" ldsrc="1474"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1474"><e><new><type typename="XplIName" /><init ldsrc="1474"><list><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="listOfType" ldsrc="1475"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1475"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1476"><fc><l><bo op="m"><l><n>listOfType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo op="m"><l><n>listOfTypeName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e><Decls><d name="loadAllFunction" ldsrc="1478"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="1478"><e><writecode ldsrc="1478"><classmembers><e ldsrc="1480"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTypeName</n></e><e><t ispointer="true"><dt typename="$entityType" /><pi ref="true" /></t></e></args></fc></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Load all the $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;loadRelation&quot;&gt;If is true load the relation&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;A list of all the entities&lt;/returns&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If a DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="LoadAll" access="public" ldsrc="1490,1490"><Parameters><P name="loadRelation" number="1"><type typename="$BOOLEAN$" ldsrc="1490" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1491,1548"><Decls><d name="$entityList" ldsrc="1492"><type ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></type><i ldsrc="1492"><e><new><type typename="$listOfType" /></new></e></i></d></Decls><e ldsrc="1492"><empty /></e><Decls><d name="closeConnection" ldsrc="1494"><type typename="$BOOLEAN$" /><i ldsrc="1494"><e><lit str="false" type="bool" /></e></i></d></Decls><try ldsrc="1495"><trybk ldsrc="1496,1532"><documentation short=" Open a new connection if necessary&#xD;&#xA;" /><if ldsrc="1498"><boolean><bo op="OR"><l><bo op="EQ"><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="EQ"><l><fc><l><bo op="m"><l><bo op="m"><l><n>dbConnection</n></l><r><n>State</n></r></bo></l><r><n>CompareTo</n></r></bo></l><args><e><n>DotNET::System::Data::ConnectionState::Closed</n></e></args></fc></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="1499,1503"><e ldsrc="1500"><a><l><n>closeConnection</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="1501"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="1502"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Build the query string&#xD;&#xA;" /><Decls><d name="cmdText" ldsrc="1506"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1506"><e><n>$sql</n></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="1507"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="1507"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>cmdText</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><documentation short=" Create a DataReader&#xD;&#xA;" /><Decls><d name="reader" ldsrc="1510"><type ispointer="true"><dt typename="IDataReader" /><pi ref="true" /></type><i ldsrc="1510"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteReader</n></r></bo></l><args /></fc></e></i></d></Decls><Decls><d name="$entity" ldsrc="1512"><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></d></Decls><documentation short=" Read the Ids and insert on a list&#xD;&#xA;" /><Decls><d name="listId" ldsrc="1515"><type typename="ListInt" /><i ldsrc="1515"><e><new><type typename="ListInt" /></new></e></i></d></Decls><while ldsrc="1516"><boolean><fc><l><bo op="m"><l><n>reader</n></l><r><n>Read</n></r></bo></l><args /></fc></boolean><dobk ldsrc="1517,1519"><e ldsrc="1518"><fc><l><bo op="m"><l><n>listId</n></l><r><n>Add</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></e></args></fc></e></dobk></while><documentation short=" Close the DataReader&#xD;&#xA;" /><e ldsrc="1521"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e><documentation short=" Create a scope&#xD;&#xA;" /><Decls><d name="scope" ldsrc="1524"><type ispointer="true"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type><i ldsrc="1524"><e><new><type typename="DictionaryOfStringIEntity" /></new></e></i></d></Decls><documentation short=" Load entities and add to return list&#xD;&#xA;" /><for ldsrc="1527,1527"><init><dl><d name="id" ldsrc="1527"><type typename="$INTEGER$" /></d></dl></init><condition><n>listId</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1528,1531"><e ldsrc="1529"><a><l><n>$entity</n></l><r><fc><l><n>Load</n></l><args><e><n>id</n></e><e><n>loadRelation</n></e><e><n>scope</n></e></args></fc></r></a></e><e ldsrc="1530"><fc><l><bo op="m"><l><n>$entityList</n></l><r><n>Add</n></r></bo></l><args><e><n>$entity</n></e></args></fc></e></forblock></for></trybk><catchbk><init ldsrc="1533"><d name="dbException" ldsrc="1533"><type ispointer="true"><dt typename="DbException" /><pi ref="true" /></type></d></init><bk ldsrc="1534,1537"><documentation short=" Catch DbException and rethrow as custom exception&#xD;&#xA;" /><throw ldsrc="1536,1536"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="1536"><list><e><bo op="m"><l><n>dbException</n></l><r><n>Message</n></r></bo></e><e><n>dbException</n></e></list></init></new></throw></bk></catchbk><finalybk ldsrc="1539,1545"><documentation short=" Close the connection&#xD;&#xA;" /><if ldsrc="1541"><boolean><n>closeConnection</n></boolean><ifbk ldsrc="1542,1544"><e ldsrc="1543"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if></finalybk></try><documentation short=" Return the loaded&#xD;&#xA;" /><return ldsrc="1547,1547"><n>$entityList</n></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="1552"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="1552"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="1553"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1553,1555"><e ldsrc="1554"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadAllFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion SaveEntity para guardar una entity&#xD;&#xA;" /><Function name="GenerateSave" internalname="GenerateSave#52" access="public" storage="static" ldsrc="1558,1558"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1558" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1558" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="1558,1971"><Decls><d name="entity" ldsrc="1559"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1559"><e><new><type typename="XplIName" /><init ldsrc="1559"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="entityStringName" ldsrc="1560"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1560"><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="sqlSave" ldsrc="1561"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1561"><e><bo><l><lit str="Save" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="sqlUpdate" ldsrc="1562"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1562"><e><bo><l><lit str="Update" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameId" ldsrc="1563"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1563"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="1564"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1564"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="tableNameString" ldsrc="1565"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1565"><e><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="fieldsBlockCommandType" ldsrc="1566"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1566"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="executeBlock" ldsrc="1567"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1567"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="parameterIdentityBlock" ldsrc="1569"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1569"><e><lit str="0" type="null" /></e></i></d></Decls><if ldsrc="1571"><boolean><uo op="not"><u><n>isIdIdentity</n></u></uo></boolean><ifbk ldsrc="1572,1582"><e ldsrc="1581"><a><l><n>parameterIdentityBlock</n></l><r><writecode ldsrc="1573"><bk><if ldsrc="1574"><boolean><bo op="AND"><l><uo op="not"><u><n>isUpdate</n></u></uo></l><r><bo op="EQ"><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="1575,1577"><e ldsrc="1576"><a><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><fc><l><n>DataAccessConnection::GetNextId</n></l><args><e><n>$nameId</n></e><e><n>$tableNameString</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></r></a></e></ifbk></if><e ldsrc="1578"><a><l><n>parameter</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></r></a></e><e ldsrc="1579"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="1580"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e></bk></writecode></r></a></e></ifbk><else ldsrc="1583"><e ldsrc="1592"><a><l><n>parameterIdentityBlock</n></l><r><writecode ldsrc="1585"><bk><if ldsrc="1586"><boolean><n>isUpdate</n></boolean><ifbk ldsrc="1587,1591"><e ldsrc="1588"><a><l><n>parameter</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></r></a></e><e ldsrc="1589"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="1590"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e></ifbk></if></bk></writecode></r></a></e></else></if><if ldsrc="1595"><boolean><n>isMobil</n></boolean><ifbk ldsrc="1596,1640"><e ldsrc="1597"><a><l><n>sqlSave</n></l><r><bo><l><bo><l><lit str="INSERT INTO [" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="] (" /></r></bo></r></a></e><Decls><d name="sqlSaveValues" ldsrc="1598"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1598"><e><lit str=") VALUES(" /></e></i></d></Decls><e ldsrc="1599"><a><l><n>sqlUpdate</n></l><r><bo><l><bo><l><lit str="UPDATE [" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="] SET " /></r></bo></r></a></e><if ldsrc="1601"><boolean><uo op="not"><u><n>isIdIdentity</n></u></uo></boolean><ifbk ldsrc="1601,1609"><documentation short=" Add the id to the sqlSave and sqlSaveValues&#xD;&#xA;" /><e ldsrc="1603"><a operation="add"><l><n>sqlSave</n></l><r><bo><l><n>nameId</n></l><r><lit str=", " /></r></bo></r></a></e><e ldsrc="1604"><a operation="add"><l><n>sqlSaveValues</n></l><r><bo><l><bo><l><lit str=" @" /></l><r><n>nameId</n></r></bo></l><r><lit str=", " /></r></bo></r></a></e><e ldsrc="1608"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>executeBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1607"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteNonQuery</n></r></bo></l><args /></fc></e></writecode></e></args></fc></e></ifbk><else ldsrc="1610"><e ldsrc="1617"><a><l><n>executeBlock</n></l><r><writecode ldsrc="1611"><bk><e ldsrc="1612"><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteNonQuery</n></r></bo></l><args /></fc></e><if ldsrc="1613"><boolean><uo op="not"><u><n>isUpdate</n></u></uo></boolean><ifbk ldsrc="1613,1616"><e ldsrc="1614"><a><l><n>sqlCommand</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><lit str="SELECT @@IDENTITY;" /></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></r></a></e><e ldsrc="1615"><a><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><fc><l><n>Convert::ToInt32</n></l><args><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteScalar</n></r></bo></l><args /></fc></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></r></a></e></ifbk></if></bk></writecode></r></a></e></else></if><for ldsrc="1620,1620"><init><dl><d name="i" ldsrc="1620"><type typename="$INTEGER$" /><i ldsrc="1620"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1621,1634"><if ldsrc="1622"><boolean><bo op="EQ"><l><n>i</n></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="1623,1627"><e ldsrc="1624"><a operation="add"><l><n>sqlSave</n></l><r><fc><l><bo op="m"><l><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></l><r><n>ToUpper</n></r></bo></l><args /></fc></r></a></e><e ldsrc="1625"><a operation="add"><l><n>sqlSaveValues</n></l><r><bo><l><lit str=" @" /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e><e ldsrc="1626"><a operation="add"><l><n>sqlUpdate</n></l><r><bo><l><bo><l><bo><l><lit /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></l><r><lit str=" = @" /></r></bo></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e></ifbk><else ldsrc="1628"><e ldsrc="1630"><a operation="add"><l><n>sqlSave</n></l><r><bo><l><lit str=", " /></l><r><fc><l><bo op="m"><l><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></l><r><n>ToUpper</n></r></bo></l><args /></fc></r></bo></r></a></e><e ldsrc="1631"><a operation="add"><l><n>sqlSaveValues</n></l><r><bo><l><lit str=",@" /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e><e ldsrc="1632"><a operation="add"><l><n>sqlUpdate</n></l><r><bo><l><bo><l><bo><l><lit str=", " /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></l><r><lit str=" = @" /></r></bo></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e></else></if></forblock></for><e ldsrc="1635"><a operation="add"><l><n>sqlSave</n></l><r><lit str=", [TIMESTAMP] " /></r></a></e><e ldsrc="1636"><a operation="add"><l><n>sqlSaveValues</n></l><r><lit str=", GETDATE()); " /></r></a></e><e ldsrc="1637"><a><l><n>sqlSave</n></l><r><bo><l><n>sqlSave</n></l><r><n>sqlSaveValues</n></r></bo></r></a></e><e ldsrc="1639"><a operation="add"><l><n>sqlUpdate</n></l><r><bo><l><bo><l><bo><l><lit str=" , timestamp=GETDATE() WHERE " /></l><r><n>nameId</n></r></bo></l><r><lit str=" = @" /></r></bo></l><r><n>nameId</n></r></bo></r></a></e></ifbk><else ldsrc="1641"><e ldsrc="1647"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlockCommandType</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1644"><e><a><l><bo op="m"><l><n>sqlCommand</n></l><r><n>CommandType</n></r></bo></l><r><n>CommandType::StoredProcedure</n></r></a></e></writecode></e></args></fc></e><if ldsrc="1649"><boolean><n>isIdIdentity</n></boolean><ifbk ldsrc="1650,1666"><e ldsrc="1665"><a><l><n>executeBlock</n></l><r><writecode ldsrc="1651"><bk><if ldsrc="1652"><boolean><n>isUpdate</n></boolean><ifbk ldsrc="1653,1655"><e ldsrc="1654"><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteNonQuery</n></r></bo></l><args /></fc></e></ifbk><else ldsrc="1656"><Decls><d name="parameterIdOutput" ldsrc="1658"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="1658"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="1659"><a><l><bo op="m"><l><n>parameterIdOutput</n></l><r><n>Direction</n></r></bo></l><r><n>ParameterDirection::ReturnValue</n></r></a></e><e ldsrc="1660"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameterIdOutput</n></e></args></fc></e><e ldsrc="1662"><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteNonQuery</n></r></bo></l><args /></fc></e><e ldsrc="1663"><a><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><fc><l><n>Convert::ToInt32</n></l><args><e><bo op="m"><l><n>parameterIdOutput</n></l><r><n>Value</n></r></bo></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></r></a></e></else></if></bk></writecode></r></a></e></ifbk><else ldsrc="1667"><documentation short="executeBlock = writecode{&#xD;&#xA;	$parameterType^ parameterIdOutput = dataAccess.GetNewDataParameter($nameIdParameter, DbType::Int32);&#xD;&#xA;	sqlCommand.ExecuteNonQuery();&#xD;&#xA;};&#xD;&#xA;" /><e ldsrc="1675"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>executeBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1674"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteNonQuery</n></r></bo></l><args /></fc></e></writecode></e></args></fc></e></else></if></else></if><Decls><d name="fieldsBlock" ldsrc="1679"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1679"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="1681,1681"><init><dl><d name="i" ldsrc="1681"><type typename="$INTEGER$" /><i ldsrc="1681"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1682,1753"><Decls><d name="propertyType" ldsrc="1683"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1683"><e><cast><e><b><l><n>listaTipos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="propertyTypeCall" ldsrc="1684"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1684"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="imageAsChar" ldsrc="1685"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1685"><e><new><type typename="XplIName" /><init ldsrc="1685"><list><e><bo><l><lit str="imageAsChar" /></l><r><n>i</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="imageAsBytes" ldsrc="1686"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1686"><e><new><type typename="XplIName" /><init ldsrc="1686"><list><e><bo><l><lit str="imageAsBytes" /></l><r><n>i</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="isString" ldsrc="1687"><type typename="$BOOLEAN$" /><i ldsrc="1687"><e><lit str="false" type="bool" /></e></i></d></Decls><Decls><d name="isImage" ldsrc="1688"><type typename="$BOOLEAN$" /><i ldsrc="1688"><e><lit str="false" type="bool" /></e></i></d></Decls><switch ldsrc="1690"><e><fc><l><bo op="m"><l><n>propertyType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e><case ldsrc="1692"><e><n>NativeTypes::Boolean</n></e><bk><e ldsrc="1693"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="1693"><list><e><lit str="DbType::Boolean" /></e></list></init></new></r></a></e><jump ldsrc="1694" /></bk></case><case ldsrc="1695"><e><n>NativeTypes::Float</n></e><bk><e ldsrc="1696"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="1696"><list><e><lit str="DbType::Decimal" /></e></list></init></new></r></a></e><jump ldsrc="1697" /></bk></case><case ldsrc="1698"><e><n>NativeTypes::Double</n></e><bk><e ldsrc="1699"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="1699"><list><e><lit str="DbType::Decimal" /></e></list></init></new></r></a></e><jump ldsrc="1700" /></bk></case><case ldsrc="1701"><e><n>NativeTypes::Integer</n></e><bk><e ldsrc="1702"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="1702"><list><e><lit str="DbType::Int32" /></e></list></init></new></r></a></e><jump ldsrc="1703" /></bk></case><case ldsrc="1704"><e><n>NativeTypes::String</n></e><bk><e ldsrc="1705"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="1705"><list><e><lit str="DbType::String" /></e></list></init></new></r></a></e><e ldsrc="1706"><a><l><n>isString</n></l><r><lit str="true" type="bool" /></r></a></e><jump ldsrc="1707" /></bk></case><case ldsrc="1708"><e><lit str="UtnEmall.Utils.Image" /></e><bk><e ldsrc="1709"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="1709"><list><e><lit str="DbType::Object" /></e></list></init></new></r></a></e><e ldsrc="1710"><a><l><n>isImage</n></l><r><lit str="true" type="bool" /></r></a></e><jump ldsrc="1711" /></bk></case><case ldsrc="1712"><e><empty /></e><bk><e ldsrc="1713"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="1713"><list><e><lit str="DbType::DateTime" /></e></list></init></new></r></a></e><jump ldsrc="1714" /></bk></case></switch><Decls><d name="propertyName" ldsrc="1717"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1717"><e><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></e></i></d></Decls><documentation short="XplIName^ propertyNameRelation = new XplIName(propertyName.Identifier.Substring(2));&#xD;&#xA;" /><Decls><d name="propertyStringName" ldsrc="1719"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1719"><e><bo><l><lit str="@" /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>propertyName</n></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></e></i></d></Decls><e ldsrc="1723"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1721"><bk><e ldsrc="1722"><a><l><n>parameter</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$propertyStringName</n></e><e><n>$propertyTypeCall</n></e></args></fc></r></a></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><if ldsrc="1726"><boolean><n>isString</n></boolean><ifbk ldsrc="1727,1737"><e ldsrc="1736"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1728"><bk><e ldsrc="1730"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></r></a></e><if ldsrc="1731"><boolean><fc><l><n>DotNET::System::String::IsNullOrEmpty</n></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></e></args></fc></boolean><ifbk ldsrc="1732,1734"><e ldsrc="1733"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><n>DotNET::System::DBNull::Value</n></r></a></e></ifbk></if><e ldsrc="1735"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk><else ldsrc="1738"><if ldsrc="1738"><boolean><n>isImage</n></boolean><ifbk ldsrc="1738,1745"><e ldsrc="1744"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1739"><bk><Decls><d name="$imageAsChar" ldsrc="1740"><type ispointer="true"><dt isarray="true"><dt typename="$CHAR$" /></dt><pi ref="true" /></type><i ldsrc="1740"><e><fc><l><bo op="m"><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><n>ToCharArray</n></r></bo></l><args /></fc></e></i></d></Decls><Decls><d name="$imageAsBytes" ldsrc="1741"><type ispointer="true"><dt isarray="true"><dt typename="$BYTE$" /></dt><pi ref="true" /></type><i ldsrc="1741"><e><fc><l><n>Convert::FromBase64CharArray</n></l><args><e><n>$imageAsChar</n></e><e><lit str="0" type="integer" /></e><e><cast><e><bo op="m"><l><n>$imageAsChar</n></l><r><n>Length</n></r></bo></e><type typename="$INTEGER$" /></cast></e></args></fc></e></i></d></Decls><e ldsrc="1742"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><n>$imageAsBytes</n></r></a></e><e ldsrc="1743"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk><else ldsrc="1746"><e ldsrc="1751"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1748"><bk><e ldsrc="1749"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></r></a></e><e ldsrc="1750"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></else></if></else></if></forblock></for><Decls><d name="update" ldsrc="1755"><type typename="$BOOLEAN$" /><i ldsrc="1755"><e><lit str="false" type="bool" /></e></i></d></Decls><Decls><d name="fieldsBlockRelations" ldsrc="1757"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1757"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="entityTemp" ldsrc="1758"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1758"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="fieldsBlockRelationsToDelete" ldsrc="1759"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1759"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="fieldsBlockRelationsCollections" ldsrc="1760"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1760"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="1761,1761"><init><dl><d name="i" ldsrc="1761"><type typename="$INTEGER$" /><i ldsrc="1761"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaRelaciones</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1762,1817"><Decls><d name="relation" ldsrc="1763"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="1763"><e><cast><e><b><l><n>listaRelaciones</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></cast></e></i></d></Decls><if ldsrc="1764"><boolean><uo op="not"><u><bo op="AND"><l><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>recursiveSave</n></r></bo></r></bo></u></uo></boolean><ifbk ldsrc="1765,1767"><jump type="continue" ldsrc="1766" /></ifbk></if><Decls><d name="dataAccessRelation" ldsrc="1769"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1769"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1770"><fc><l><bo op="m"><l><n>dataAccessRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="propertyNameRelation" ldsrc="1771"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1771"><e><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></e></i></d></Decls><Decls><d name="idPropertyNameRelation" ldsrc="1772"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1772"><e><new><type typename="XplIName" /><init ldsrc="1772"><list><e><bo><l><lit str="Id" /></l><r><bo op="m"><l><n>propertyNameRelation</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="1774"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>relationType</n></r></bo></l><r><n>RelationTypes::UnoAMuchos</n></r></bo></boolean><ifbk ldsrc="1775,1784"><Decls><d name="functionName" ldsrc="1776"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1776"><e><new><type typename="XplIName" /><init ldsrc="1776"><list><e><bo><l><bo><l><lit str="Save" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="Collection" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="1783"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1778"><bk><if ldsrc="1779"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1780,1782"><e ldsrc="1781"><fc><l><bo op="m"><l><n>this</n></l><r><n>$functionName</n></r></bo></l><args><e><new><type typename="$dataAccessRelation" /></new></e><e><n>$entity</n></e><e><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></e><e><bo op="m"><l><n>$entity</n></l><r><n>IsNew</n></r></bo></e><e><n>scope</n></e></args></fc></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockRelationsCollections</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk><else ldsrc="1785"><Decls><d name="varDataAccess" ldsrc="1787"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1787"><e><new><type typename="XplIName" /><init ldsrc="1787"><list><e><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="1795"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1788"><bk><if ldsrc="1789"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1790,1794"><Decls><d name="$varDataAccess" ldsrc="1791"><type typename="$dataAccessRelation" /><i ldsrc="1791"><e><new><type typename="$dataAccessRelation" /></new></e></i></d></Decls><e ldsrc="1792"><fc><l><bo op="m"><l><n>$varDataAccess</n></l><r><n>SetConnectionObjects</n></r></bo></l><args><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e><e ldsrc="1793"><fc><l><bo op="m"><l><n>$varDataAccess</n></l><r><n>Save</n></r></bo></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></e><e><n>scope</n></e></args></fc></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockRelations</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><if ldsrc="1797"><boolean><bo op="AND"><l><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>relationType</n></r></bo></l><r><n>RelationTypes::UnoAUno</n></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>recursiveSave</n></r></bo></r></bo></boolean><ifbk ldsrc="1798,1814"><Decls><d name="classNameLoadRelation" ldsrc="1799"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1799"><e><new><type typename="XplIName" /><init ldsrc="1799"><list><e><bo><l><lit str="LoadRelation" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entity2" ldsrc="1800"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1800"><e><new><type typename="XplIName" /><init ldsrc="1800"><list><e><bo><l><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="Temp" /></r></bo></l><r><n>i</n></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="1813"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1802"><bk><Decls><d name="$entity2" ldsrc="1803"><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type><i ldsrc="1803"><e><new><type typename="$entityType" /></new></e></i></d></Decls><e ldsrc="1804"><a><l><bo op="m"><l><n>$entity2</n></l><r><n>Id</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="1805"><fc><l><n>$classNameLoadRelation</n></l><args><e><n>$entity2</n></e><e><n>scope</n></e></args></fc></e><if ldsrc="1806"><boolean><bo op="AND"><l><bo op="NOTEQ"><l><bo op="m"><l><n>$entity2</n></l><r><n>$propertyNameRelation</n></r></bo></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="NOTEQ"><l><bo op="m"><l><n>$entity2</n></l><r><n>$idPropertyNameRelation</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>$idPropertyNameRelation</n></r></bo></r></bo></r></bo></boolean><ifbk ldsrc="1807,1811"><Decls><d name="$varDataAccess" ldsrc="1808"><type typename="$dataAccessRelation" /><i ldsrc="1808"><e><new><type typename="$dataAccessRelation" /></new></e></i></d></Decls><e ldsrc="1809"><fc><l><bo op="m"><l><n>$varDataAccess</n></l><r><n>SetConnectionObjects</n></r></bo></l><args><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e><e ldsrc="1810"><fc><l><bo op="m"><l><n>$varDataAccess</n></l><r><n>Delete</n></r></bo></l><args><e><bo op="m"><l><n>$entity2</n></l><r><n>$propertyNameRelation</n></r></bo></e><e><n>scope</n></e></args></fc></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockRelationsToDelete</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if><e ldsrc="1815"><a><l><n>update</n></l><r><lit str="true" type="bool" /></r></a></e></else></if></forblock></for><Decls><d name="fieldsBlockUpdate" ldsrc="1819"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1819"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><if ldsrc="1820"><boolean><n>update</n></boolean><ifbk ldsrc="1821,1825"><e ldsrc="1824"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlockUpdate</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1823"><e><fc><l><n>Update</n></l><args><e><n>$entity</n></e></args></fc></e></writecode></e></args></fc></e></ifbk></if><Decls><d name="saveFunction" ldsrc="1827"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="1827"><e><writecode ldsrc="1827"><classmembers><Function name="FillSaveParameters" ldsrc="1829,1829"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="1829"><dt typename="$entityType" /><pi ref="true" /></type></P><P name="sqlCommand" number="2"><type ispointer="true" ldsrc="1829"><dt typename="$commandType" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="1829,1832"><Decls><d name="parameter" ldsrc="1830"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type></d></Decls><e ldsrc="1831"><n>$fieldsBlock</n></e></FunctionBody></Function><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Save a $entityType$ in the database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$entity$&quot;&gt;$entityType$ to save&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; if &lt;paramref name=&quot;$entity$&quot;/&gt; is not a &lt;c&gt;$entityType$&lt;/c&gt;.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Save" access="public" ldsrc="1845,1845"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="1845"><dt typename="$entityType" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="1845,1847"><e ldsrc="1846"><fc><l><n>Save</n></l><args><e><n>$entity</n></e><e><lit str="0" type="null" /></e></args></fc></e></FunctionBody></Function><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Save a $entityType$ in the database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$entity$&quot;&gt;$entityType$ to save&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;Interna structure to avoid circular reference locks. Provide an instance when calling from other data access object.&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; If &lt;paramref name=&quot;$entity$&quot;/&gt; is not a &lt;c&gt;$entityType$&lt;/c&gt;.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Save" access="public" ldsrc="1859,1859"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="1859"><dt typename="$entityType" /><pi ref="true" /></type></P><P name="scope" number="2"><type ispointer="true" ldsrc="1859"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="1860,1963"><if ldsrc="1861"><boolean><bo op="EQ"><l><n>$entity</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1862,1864"><throw ldsrc="1863,1863"><new><type typename="ArgumentException" /><init ldsrc="1863"><list><e><lit str="The argument can't be null" /></e></list></init></new></throw></ifbk></if><documentation short=" Create a unique key to identify the object in the internal scope&#xD;&#xA;" /><Decls><d name="scopeKey" ldsrc="1867"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1867"><e><bo><l><fc><l><bo op="m"><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><n>ToString</n></r></bo></l><args><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><n>$entityStringName</n></r></bo></e></i></d></Decls><if ldsrc="1868"><boolean><bo op="NOTEQ"><l><n>scope</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1869,1875"><documentation short=" If it's on the scope return it, don't save again&#xD;&#xA;" /><if ldsrc="1871"><boolean><fc><l><bo op="m"><l><n>scope</n></l><r><n>ContainsKey</n></r></bo></l><args><e><n>scopeKey</n></e></args></fc></boolean><ifbk ldsrc="1872,1874"><return ldsrc="1873" /></ifbk></if></ifbk><else ldsrc="1876"><documentation short=" Create a new scope if it's not provided&#xD;&#xA;" /><e ldsrc="1879"><a><l><n>scope</n></l><r><new><type typename="DictionaryOfStringIEntity" /></new></r></a></e></else></if><try ldsrc="1882"><trybk ldsrc="1883,1942"><documentation short=" Open a DbConnection and a new transaction if it isn't on a higher level one&#xD;&#xA;" /><if ldsrc="1885"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="1886,1890"><e ldsrc="1887"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="1888"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e><e ldsrc="1889"><a><l><n>dbTransaction</n></l><r><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>BeginTransaction</n></r></bo></l><args /></fc></r></a></e></ifbk></if><Decls><d name="commandName" ldsrc="1892"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1892"><e><lit /></e></i></d></Decls><Decls><d name="isUpdate" ldsrc="1893"><type typename="$BOOLEAN$" /><i ldsrc="1893"><e><lit str="false" type="bool" /></e></i></d></Decls><documentation short=" Check if it is an insert or update command&#xD;&#xA;" /><if ldsrc="1895"><boolean><bo op="OR"><l><bo op="m"><l><n>$entity</n></l><r><n>IsNew</n></r></bo></l><r><uo op="not"><u><fc><l><n>DataAccessConnection::ExistsEntity</n></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></e><e><n>$tableNameString</n></e><e><n>$nameId</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></u></uo></r></bo></boolean><ifbk ldsrc="1896,1898"><e ldsrc="1897"><a><l><n>commandName</n></l><r><n>$sqlSave</n></r></a></e></ifbk><else ldsrc="1899"><e ldsrc="1901"><a><l><n>isUpdate</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="1902"><a><l><n>commandName</n></l><r><n>$sqlUpdate</n></r></a></e><e ldsrc="1903"><n>$entityTemp</n></e><e ldsrc="1904"><n>$fieldsBlockRelationsToDelete</n></e></else></if><documentation short=" Create a db command&#xD;&#xA;" /><Decls><d name="sqlCommand" ldsrc="1908"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="1908"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>commandName</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><e ldsrc="1909"><n>$fieldsBlockCommandType</n></e><documentation short=" Add parameters values to current command&#xD;&#xA;" /><Decls><d name="parameter" ldsrc="1912"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type></d></Decls><e ldsrc="1914"><n>$parameterIdentityBlock</n></e><e ldsrc="1916"><fc><l><n>FillSaveParameters</n></l><args><e><n>$entity</n></e><e><n>sqlCommand</n></e></args></fc></e><documentation short=" Execute the command&#xD;&#xA;" /><e ldsrc="1919"><n>$executeBlock</n></e><e ldsrc="1921"><a><l><n>scopeKey</n></l><r><bo><l><fc><l><bo op="m"><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><n>ToString</n></r></bo></l><args><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><n>$entityStringName</n></r></bo></r></a></e><documentation short=" Add entity to current internal scope&#xD;&#xA;" /><e ldsrc="1923"><fc><l><bo op="m"><l><n>scope</n></l><r><n>Add</n></r></bo></l><args><e><n>scopeKey</n></e><e><n>$entity</n></e></args></fc></e><documentation short=" Save collections of related objects to current entity&#xD;&#xA;" /><e ldsrc="1926"><n>$fieldsBlockRelationsCollections</n></e><documentation short=" Save objects related to current entity&#xD;&#xA;" /><e ldsrc="1929"><n>$fieldsBlockRelations</n></e><documentation short=" Update&#xD;&#xA;" /><e ldsrc="1932"><n>$fieldsBlockUpdate</n></e><documentation short=" Close transaction if initiated by me&#xD;&#xA;" /><if ldsrc="1935"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="1936,1938"><e ldsrc="1937"><fc><l><bo op="m"><l><n>dbTransaction</n></l><r><n>Commit</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Update new and changed flags&#xD;&#xA;" /><e ldsrc="1940"><a><l><bo op="m"><l><n>$entity</n></l><r><n>IsNew</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e><e ldsrc="1941"><a><l><bo op="m"><l><n>$entity</n></l><r><n>Changed</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e></trybk><catchbk><init ldsrc="1943"><d name="dbException" ldsrc="1943"><type ispointer="true"><dt typename="DbException" /><pi ref="true" /></type></d></init><bk ldsrc="1944,1952"><documentation short=" Rollback transaction&#xD;&#xA;" /><if ldsrc="1946"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="1947,1949"><e ldsrc="1948"><fc><l><bo op="m"><l><n>dbTransaction</n></l><r><n>Rollback</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Rethrow as custom exception&#xD;&#xA;" /><throw ldsrc="1951,1951"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="1951"><list><e><bo op="m"><l><n>dbException</n></l><r><n>Message</n></r></bo></e><e><n>dbException</n></e></list></init></new></throw></bk></catchbk><finalybk ldsrc="1954,1962"><documentation short=" Close connection if initiated by me&#xD;&#xA;" /><if ldsrc="1956"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="1957,1961"><e ldsrc="1958"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e><e ldsrc="1959"><a><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></a></e><e ldsrc="1960"><a><l><n>dbTransaction</n></l><r><lit str="0" type="null" /></r></a></e></ifbk></if></finalybk></try></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="1967"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="1967"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="1968"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1968,1970"><e ldsrc="1969"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>saveFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><Function name="GenerateUpdate" internalname="GenerateUpdate#53" access="public" storage="static" ldsrc="1972,1972"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1972" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="1972" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="1972,2112"><Decls><d name="entity" ldsrc="1973"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1973"><e><new><type typename="XplIName" /><init ldsrc="1973"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="sqlUpdate" ldsrc="1974"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1974"><e><bo><l><lit str="Update" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameId" ldsrc="1975"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1975"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="1976"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1976"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="fieldsBlockCommandType" ldsrc="1978"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1978"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><if ldsrc="1980"><boolean><n>isMobil</n></boolean><ifbk ldsrc="1981,1995"><e ldsrc="1982"><a><l><n>sqlUpdate</n></l><r><bo><l><bo><l><lit str="UPDATE [" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="] SET " /></r></bo></r></a></e><for ldsrc="1983,1983"><init><dl><d name="i" ldsrc="1983"><type typename="$INTEGER$" /><i ldsrc="1983"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="1984,1993"><if ldsrc="1985"><boolean><bo op="EQ"><l><n>i</n></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="1986,1988"><e ldsrc="1987"><a operation="add"><l><n>sqlUpdate</n></l><r><bo><l><bo><l><bo><l><lit /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></l><r><lit str=" = @" /></r></bo></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e></ifbk><else ldsrc="1989"><e ldsrc="1991"><a operation="add"><l><n>sqlUpdate</n></l><r><bo><l><bo><l><bo><l><lit str=", " /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></l><r><lit str=" = @" /></r></bo></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></r></a></e></else></if></forblock></for><e ldsrc="1994"><a operation="add"><l><n>sqlUpdate</n></l><r><bo><l><bo><l><bo><l><lit str=" , timestamp=GETDATE() WHERE " /></l><r><n>nameId</n></r></bo></l><r><lit str=" = @" /></r></bo></l><r><n>nameId</n></r></bo></r></a></e></ifbk><else ldsrc="1996"><e ldsrc="2002"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlockCommandType</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1999"><e><a><l><bo op="m"><l><n>sqlCommand</n></l><r><n>CommandType</n></r></bo></l><r><n>CommandType::StoredProcedure</n></r></a></e></writecode></e></args></fc></e></else></if><Decls><d name="fieldsBlock" ldsrc="2005"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="2005"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="2007,2007"><init><dl><d name="i" ldsrc="2007"><type typename="$INTEGER$" /><i ldsrc="2007"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2008,2065"><Decls><d name="propertyType" ldsrc="2009"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2009"><e><cast><e><b><l><n>listaTipos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></i></d></Decls><Decls><d name="propertyTypeCall" ldsrc="2010"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2010"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="isString" ldsrc="2011"><type typename="$BOOLEAN$" /><i ldsrc="2011"><e><lit str="false" type="bool" /></e></i></d></Decls><switch ldsrc="2013"><e><fc><l><bo op="m"><l><n>propertyType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></e><case ldsrc="2015"><e><n>NativeTypes::Boolean</n></e><bk><e ldsrc="2016"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="2016"><list><e><lit str="DbType::Boolean" /></e></list></init></new></r></a></e><jump ldsrc="2017" /></bk></case><case ldsrc="2018"><e><n>NativeTypes::Float</n></e><bk><e ldsrc="2019"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="2019"><list><e><lit str="DbType::Decimal" /></e></list></init></new></r></a></e><jump ldsrc="2020" /></bk></case><case ldsrc="2021"><e><n>NativeTypes::Double</n></e><bk><e ldsrc="2022"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="2022"><list><e><lit str="DbType::Decimal" /></e></list></init></new></r></a></e><jump ldsrc="2023" /></bk></case><case ldsrc="2024"><e><n>NativeTypes::Integer</n></e><bk><e ldsrc="2025"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="2025"><list><e><lit str="DbType::Int32" /></e></list></init></new></r></a></e><jump ldsrc="2026" /></bk></case><case ldsrc="2027"><e><n>NativeTypes::String</n></e><bk><e ldsrc="2028"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="2028"><list><e><lit str="DbType::String" /></e></list></init></new></r></a></e><e ldsrc="2029"><a><l><n>isString</n></l><r><lit str="true" type="bool" /></r></a></e><jump ldsrc="2030" /></bk></case><case ldsrc="2031"><e><lit str="UtnEmall.Utils.Image" /></e><bk><e ldsrc="2032"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="2032"><list><e><lit str="DbType::Object" /></e></list></init></new></r></a></e><jump ldsrc="2033" /></bk></case><case ldsrc="2034"><e><empty /></e><bk><e ldsrc="2035"><a><l><n>propertyTypeCall</n></l><r><new><type typename="XplIName" /><init ldsrc="2035"><list><e><lit str="DbType::DateTime" /></e></list></init></new></r></a></e><jump ldsrc="2036" /></bk></case></switch><Decls><d name="propertyName" ldsrc="2039"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2039"><e><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></e></i></d></Decls><documentation short="XplIName^ propertyNameRelation = new XplIName(propertyName.Identifier.Substring(2));&#xD;&#xA;" /><Decls><d name="propertyStringName" ldsrc="2041"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2041"><e><bo><l><lit str="@" /></l><r><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>propertyName</n></l><r><n>Identifier</n></r></bo></e></args></fc></r></bo></e></i></d></Decls><e ldsrc="2045"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2043"><bk><e ldsrc="2044"><a><l><n>parameter</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$propertyStringName</n></e><e><n>$propertyTypeCall</n></e></args></fc></r></a></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><if ldsrc="2047"><boolean><n>isString</n></boolean><ifbk ldsrc="2048,2057"><e ldsrc="2055"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2049"><bk><e ldsrc="2050"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></r></a></e><if ldsrc="2051"><boolean><fc><l><n>DotNET::System::String::IsNullOrEmpty</n></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></e></args></fc></boolean><ifbk ldsrc="2051,2053"><e ldsrc="2052"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><n>DotNET::System::DBNull::Value</n></r></a></e></ifbk></if><e ldsrc="2054"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk><else ldsrc="2058"><e ldsrc="2063"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2060"><bk><e ldsrc="2061"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></r></a></e><e ldsrc="2062"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></else></if></forblock></for><Decls><d name="parameterName" ldsrc="2067"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2067"><e><bo op="m"><l><n>entity</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="updateFunction" ldsrc="2068"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2068"><e><writecode ldsrc="2068"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Update a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$entity$&quot;&gt;$entityType$ to update&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; if &lt;paramref name=&quot;$entity$&quot;/&gt; is not a &lt;c&gt;$entityType$&lt;/c&gt;.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Update" ldsrc="2079,2079"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="2079"><dt typename="$entityType" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2080,2104"><if ldsrc="2081"><boolean><bo op="EQ"><l><n>$entity</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2082,2084"><throw ldsrc="2083,2083"><new><type typename="ArgumentException" /><init ldsrc="2083"><list><e><lit str="The argument can't be null" /></e><e><n>$parameterName</n></e></list></init></new></throw></ifbk></if><documentation short=" Build update command&#xD;&#xA;" /><Decls><d name="commandName" ldsrc="2087"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2087"><e><n>$sqlUpdate</n></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="2088"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="2088"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>commandName</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><e ldsrc="2089"><n>$fieldsBlockCommandType</n></e><documentation short=" Set update parameters values&#xD;&#xA;" /><Decls><d name="parameter" ldsrc="2092"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="2092"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="2093"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="2094"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e><e ldsrc="2096"><n>$fieldsBlock</n></e><documentation short=" Execute the update&#xD;&#xA;" /><e ldsrc="2099"><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteNonQuery</n></r></bo></l><args /></fc></e><documentation short=" Update new and changed flags&#xD;&#xA;" /><e ldsrc="2102"><a><l><bo op="m"><l><n>$entity</n></l><r><n>IsNew</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e><e ldsrc="2103"><a><l><bo op="m"><l><n>$entity</n></l><r><n>Changed</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2108"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2108"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2109"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2109,2111"><e ldsrc="2110"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>updateFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion DeleteEntity para borrar una entity&#xD;&#xA;" /><Function name="GenerateDelete" internalname="GenerateDelete#54" access="public" storage="static" ldsrc="2114,2114"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2114" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2114" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2114,2293"><Decls><d name="entityStringName" ldsrc="2115"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2115"><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="entity" ldsrc="2117"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2117"><e><new><type typename="XplIName" /><init ldsrc="2117"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="2118"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2118"><e><bo><l><lit str="Delete" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="2119"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2119"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameId" ldsrc="2120"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2120"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="fieldsBlockCommandType" ldsrc="2122"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="2122"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><if ldsrc="2123"><boolean><n>isMobil</n></boolean><ifbk ldsrc="2124,2126"><e ldsrc="2125"><a><l><n>sqlCommand</n></l><r><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="DELETE FROM [" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="] WHERE " /></r></bo></l><r><n>nameId</n></r></bo></l><r><lit str=" = @" /></r></bo></l><r><n>nameId</n></r></bo></r></a></e></ifbk><else ldsrc="2127"><e ldsrc="2133"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlockCommandType</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="2130"><e><a><l><bo op="m"><l><n>sqlCommand</n></l><r><n>CommandType</n></r></bo></l><r><n>CommandType::StoredProcedure</n></r></a></e></writecode></e></args></fc></e></else></if><Decls><d name="fieldsBlockRelations" ldsrc="2136"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="2136"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="2137,2137"><init><dl><d name="i" ldsrc="2137"><type typename="$INTEGER$" /><i ldsrc="2137"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaRelaciones</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2138,2173"><Decls><d name="relation" ldsrc="2140"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="2140"><e><cast><e><b><l><n>listaRelaciones</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></cast></e></i></d></Decls><if ldsrc="2141"><boolean><uo op="not"><u><bo op="AND"><l><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>deleteCascade</n></r></bo></r></bo></u></uo></boolean><ifbk ldsrc="2142,2144"><jump type="continue" ldsrc="2143" /></ifbk></if><Decls><d name="dataAccessRelation" ldsrc="2146"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2146"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2147"><fc><l><bo op="m"><l><n>dataAccessRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="propertyNameRelation" ldsrc="2148"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2148"><e><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></e></i></d></Decls><if ldsrc="2150"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>relationType</n></r></bo></l><r><lit str="2" type="integer" /></r></bo></boolean><ifbk ldsrc="2151,2160"><Decls><d name="functionName" ldsrc="2152"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2152"><e><new><type typename="XplIName" /><init ldsrc="2152"><list><e><bo><l><bo><l><lit str="Delete" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="Collection" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="2159"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2154"><bk><if ldsrc="2155"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2156,2158"><e ldsrc="2157"><fc><l><bo op="m"><l><n>this</n></l><r><n>$functionName</n></r></bo></l><args><e><new><type typename="$dataAccessRelation" /></new></e><e><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></e><e><n>scope</n></e></args></fc></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockRelations</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk><else ldsrc="2161"><Decls><d name="varDataAccess" ldsrc="2163"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2163"><e><new><type typename="XplIName" /><init ldsrc="2163"><list><e><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="2171"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2164"><bk><if ldsrc="2165"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2166,2170"><Decls><d name="$varDataAccess" ldsrc="2167"><type typename="$dataAccessRelation" /><i ldsrc="2167"><e><new><type typename="$dataAccessRelation" /></new></e></i></d></Decls><e ldsrc="2168"><fc><l><bo op="m"><l><n>$varDataAccess</n></l><r><n>SetConnectionObjects</n></r></bo></l><args><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e><e ldsrc="2169"><fc><l><bo op="m"><l><n>$varDataAccess</n></l><r><n>Delete</n></r></bo></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>$propertyNameRelation</n></r></bo></e><e><n>scope</n></e></args></fc></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockRelations</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></else></if></forblock></for><documentation short=" If there are restrictions defined call check for delete&#xD;&#xA;" /><Decls><d name="blockCheckForDelete" ldsrc="2176"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="2176"><e><writecode ldsrc="2176"><bk><bk ldsrc="2177,2180"><documentation short=" Check for related data&#xD;&#xA;" /><e ldsrc="2179"><fc><l><n>CheckForDelete</n></l><args><e><n>$entity</n></e></args></fc></e></bk></bk></writecode></e></i></d></Decls><if ldsrc="2182"><boolean><bo op="EQ"><l><bo op="m"><l><n>listaRestricciones</n></l><r><n>Count</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk><e ldsrc="2182"><a><l><n>blockCheckForDelete</n></l><r><new><type typename="XplFunctionBody" /></new></r></a></e></ifbk></if><Decls><d name="deleteFunction" ldsrc="2184"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2184"><e><writecode ldsrc="2184"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Delete a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$entity$&quot;&gt;$entityType$ to delete&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; If &lt;paramref name=&quot;$entity$&quot;/&gt; is not a &lt;c&gt;$entityType$&lt;/c&gt;.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Delete" access="public" ldsrc="2196,2196"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="2196"><dt typename="$entityType" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2196,2198"><e ldsrc="2197"><fc><l><n>Delete</n></l><args><e><n>$entity</n></e><e><lit str="0" type="null" /></e></args></fc></e></FunctionBody></Function><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Delete a $entityType$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$entity$&quot;&gt;$entityType$ to delete&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;Internal structure to avoid circular reference locks. Must provide an instance while calling from other data access object.&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; If &lt;paramref name=&quot;$entity$&quot;/&gt; is not a &lt;c&gt;$entityType$&lt;/c&gt;.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="Delete" access="public" ldsrc="2211,2211"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="2211"><dt typename="$entityType" /><pi ref="true" /></type></P><P name="scope" number="2"><type ispointer="true" ldsrc="2211"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2212,2285"><if ldsrc="2213"><boolean><bo op="EQ"><l><n>$entity</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2214,2216"><throw ldsrc="2215,2215"><new><type typename="ArgumentException" /><init ldsrc="2215"><list><e><lit str="The argument can't be null" /></e></list></init></new></throw></ifbk></if><try ldsrc="2218"><trybk ldsrc="2219,2264"><documentation short=" Open connection and initialize a transaction if needed&#xD;&#xA;" /><if ldsrc="2221"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="2222,2226"><e ldsrc="2223"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="2224"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e><e ldsrc="2225"><a><l><n>dbTransaction</n></l><r><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>BeginTransaction</n></r></bo></l><args /></fc></r></a></e></ifbk></if><documentation short=" Reload the entity to ensure deletion of older data&#xD;&#xA;" /><e ldsrc="2228"><a><l><n>$entity</n></l><r><fc><l><bo op="m"><l><n>this</n></l><r><n>Load</n></r></bo></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></e><e><lit str="true" type="bool" /></e></args></fc></r></a></e><if ldsrc="2229"><boolean><bo op="EQ"><l><n>$entity</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2230,2232"><throw ldsrc="2231,2231"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="2231"><list><e><lit str="Error retrieving data while trying to delete." /></e></list></init></new></throw></ifbk></if><e ldsrc="2234"><n>$blockCheckForDelete</n></e><documentation short=" Create a command for delete&#xD;&#xA;" /><Decls><d name="cmdText" ldsrc="2237"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2237"><e><n>$sqlCommand</n></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="2238"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="2238"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>cmdText</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><e ldsrc="2239"><n>$fieldsBlockCommandType</n></e><documentation short=" Add values to parameters&#xD;&#xA;" /><Decls><d name="parameterID" ldsrc="2241"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="2241"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="2242"><a><l><bo op="m"><l><n>parameterID</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="2243"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameterID</n></e></args></fc></e><documentation short=" Execute the command&#xD;&#xA;" /><e ldsrc="2246"><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteNonQuery</n></r></bo></l><args /></fc></e><documentation short=" Delete related objects&#xD;&#xA;" /><e ldsrc="2249"><n>$fieldsBlockRelations</n></e><documentation short=" Commit transaction if is mine&#xD;&#xA;" /><if ldsrc="2252"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="2253,2255"><e ldsrc="2254"><fc><l><bo op="m"><l><n>dbTransaction</n></l><r><n>Commit</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Remove entity from loaded objects&#xD;&#xA;" /><e ldsrc="2257"><fc><l><bo op="m"><l><n>inMemoryEntities</n></l><r><n>Remove</n></r></bo></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></e></args></fc></e><documentation short=" Remove entity from current internal scope&#xD;&#xA;" /><if ldsrc="2259"><boolean><bo op="NOTEQ"><l><n>scope</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2260,2263"><Decls><d name="scopeKey" ldsrc="2261"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2261"><e><bo><l><fc><l><bo op="m"><l><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></l><r><n>ToString</n></r></bo></l><args><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><n>$entityStringName</n></r></bo></e></i></d></Decls><e ldsrc="2262"><fc><l><bo op="m"><l><n>scope</n></l><r><n>Remove</n></r></bo></l><args><e><n>scopeKey</n></e></args></fc></e></ifbk></if></trybk><catchbk><init ldsrc="2265"><d name="dbException" ldsrc="2265"><type ispointer="true"><dt typename="DbException" /><pi ref="true" /></type></d></init><bk ldsrc="2266,2274"><documentation short=" Rollback transaction&#xD;&#xA;" /><if ldsrc="2268"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="2269,2271"><e ldsrc="2270"><fc><l><bo op="m"><l><n>dbTransaction</n></l><r><n>Rollback</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Rethrow as custom exception&#xD;&#xA;" /><throw ldsrc="2273,2273"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="2273"><list><e><bo op="m"><l><n>dbException</n></l><r><n>Message</n></r></bo></e><e><n>dbException</n></e></list></init></new></throw></bk></catchbk><finalybk ldsrc="2276,2284"><documentation short=" Close connection if it was initiated by this instance&#xD;&#xA;" /><if ldsrc="2278"><boolean><uo op="not"><u><n>isGlobalTransaction</n></u></uo></boolean><ifbk ldsrc="2279,2283"><e ldsrc="2280"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e><e ldsrc="2281"><a><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></a></e><e ldsrc="2282"><a><l><n>dbTransaction</n></l><r><lit str="0" type="null" /></r></a></e></ifbk></if></finalybk></try></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2289"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2289"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2290"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2290,2292"><e ldsrc="2291"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>deleteFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><Function name="GenerateDeleteCollection" internalname="GenerateDeleteCollection#55" access="public" storage="static" ldsrc="2296,2296"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2296" /></P><P name="relation" number="2"><type ispointer="true" typeStr="^_UtnEmall.Utils.Relation" ldsrc="2296"><dt typename="Relation" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2296,2343"><Decls><d name="entityTypeRelation" ldsrc="2297"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2297"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2298"><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="dataAccessTypeRelation" ldsrc="2300"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2300"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2301"><fc><l><bo op="m"><l><n>dataAccessTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="functionName" ldsrc="2303"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2303"><e><new><type typename="XplIName" /><init ldsrc="2303"><list><e><bo><l><bo><l><lit str="Delete" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="Collection" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="relationName" ldsrc="2304"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2304"><e><new><type typename="XplIName" /><init ldsrc="2304"><list><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></list></init></new></e></i></d></Decls><documentation short="Tipo para lista&#xD;&#xA;" /><Decls><d name="listOfType" ldsrc="2307"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2307"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2308"><fc><l><bo op="m"><l><n>listOfType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="saveCollectionFunction" ldsrc="2310"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2310"><e><writecode ldsrc="2310"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Delete a list of related entities from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;collectionDataAccess&quot;&gt;IDataAccess of the relation&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;collection&quot;&gt;The collection of entities to delete&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;Internal structure to keep safe circular referencies&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;True if collection not null&lt;/returns&gt;&#xD;&#xA;" /><Function name="$functionName" ldsrc="2318,2318"><Parameters><P name="collectionDataAccess" number="1"><type ispointer="true" ldsrc="2318"><dt typename="$dataAccessTypeRelation" /><pi ref="true" /></type></P><P name="collection" number="2"><type ispointer="true" ldsrc="2318"><dt typename="$listOfType" /><pi ref="true" /></type></P><P name="scope" number="3"><type ispointer="true" ldsrc="2318"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$BOOLEAN$" /><FunctionBody ldsrc="2319,2334"><if ldsrc="2320"><boolean><bo op="EQ"><l><n>collection</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2321,2323"><return ldsrc="2322,2322"><lit str="false" type="bool" /></return></ifbk></if><documentation short=" Set connection objects of related data access object&#xD;&#xA;" /><e ldsrc="2325"><fc><l><bo op="m"><l><n>collectionDataAccess</n></l><r><n>SetConnectionObjects</n></r></bo></l><args><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e><documentation short=" Delete related objects&#xD;&#xA;" /><for ldsrc="2328,2328"><init><dl><d name="i" ldsrc="2328"><type typename="$INTEGER$" /><i ldsrc="2328"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>collection</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2329,2331"><e ldsrc="2330"><fc><l><bo op="m"><l><n>collectionDataAccess</n></l><r><n>Delete</n></r></bo></l><args><e><b><l><n>collection</n></l><args><e><n>i</n></e></args></b></e><e><n>scope</n></e></args></fc></e></forblock></for><return ldsrc="2333,2333"><lit str="true" type="bool" /></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2338"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2338"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2339"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2340,2342"><e ldsrc="2341"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>saveCollectionFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion DBChecked para chequear si existen los procedures y la tabla en la base de datos&#xD;&#xA;" /><Function name="GenerateDBChecked" internalname="GenerateDBChecked#56" access="public" storage="static" ldsrc="2345,2345"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2345" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2345" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2345,2501"><Decls><d name="nameTable" ldsrc="2346"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2346"><e><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="nameProcedureDelete" ldsrc="2347"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2347"><e><bo><l><lit str="Delete" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameProcedureSave" ldsrc="2348"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2348"><e><bo><l><lit str="Save" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameProcedureUpdate" ldsrc="2349"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2349"><e><bo><l><lit str="Update" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameProcedureNextID" ldsrc="2350"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2350"><e><bo><l><lit str="NextID" /></l><r><bo op="m"><l><n>tableName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameId" ldsrc="2351"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2351"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="fieldsBlockCreateTable" ldsrc="2353"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="2353"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><if ldsrc="2355"><boolean><n>isIdIdentity</n></boolean><ifbk ldsrc="2356,2362"><e ldsrc="2361"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2357"><progunit><e ldsrc="2359"><fc><l><n>DataAccessConnection::CreateTable</n></l><args><e><n>$nameTable</n></e><e><n>fieldsName</n></e><e><lit str="true" type="bool" /></e><e><n>fieldsType</n></e></args></fc></e></progunit></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockCreateTable</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk><else ldsrc="2363"><e ldsrc="2369"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2365"><progunit><e ldsrc="2367"><fc><l><n>DataAccessConnection::CreateTable</n></l><args><e><n>$nameTable</n></e><e><n>fieldsName</n></e><e><lit str="false" type="bool" /></e><e><n>fieldsType</n></e></args></fc></e></progunit></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockCreateTable</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></else></if><Decls><d name="fieldsBlockProcedures" ldsrc="2372"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="2372"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><if ldsrc="2374"><boolean><uo op="not"><u><n>isMobil</n></u></uo></boolean><ifbk ldsrc="2375,2430"><if ldsrc="2376"><boolean><uo op="not"><u><n>isIdIdentity</n></u></uo></boolean><ifbk ldsrc="2377,2405"><e ldsrc="2404"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2378"><bk><Decls><d name="existsProcedureDelete" ldsrc="2379"><type typename="$BOOLEAN$" /><i ldsrc="2379"><e><fc><l><n>DataAccessConnection::DBCheckedStoredProcedure</n></l><args><e><n>$nameProcedureDelete</n></e></args></fc></e></i></d></Decls><Decls><d name="existsProcedureSave" ldsrc="2380"><type typename="$BOOLEAN$" /><i ldsrc="2380"><e><fc><l><n>DataAccessConnection::DBCheckedStoredProcedure</n></l><args><e><n>$nameProcedureSave</n></e></args></fc></e></i></d></Decls><Decls><d name="existsProcedureUpdate" ldsrc="2381"><type typename="$BOOLEAN$" /><i ldsrc="2381"><e><fc><l><n>DataAccessConnection::DBCheckedStoredProcedure</n></l><args><e><n>$nameProcedureUpdate</n></e></args></fc></e></i></d></Decls><Decls><d name="existsProcedureNextID" ldsrc="2382"><type typename="$BOOLEAN$" /><i ldsrc="2382"><e><fc><l><n>DataAccessConnection::DBCheckedStoredProcedure</n></l><args><e><n>$nameProcedureNextID</n></e></args></fc></e></i></d></Decls><if ldsrc="2384"><boolean><uo op="not"><u><n>existsProcedureDelete</n></u></uo></boolean><ifbk ldsrc="2385,2387"><e ldsrc="2386"><fc><l><n>DataAccessConnection::CreateDeleteStoredProcedure</n></l><args><e><n>$nameTable</n></e><e><n>$nameId</n></e></args></fc></e></ifbk></if><if ldsrc="2389"><boolean><uo op="not"><u><n>existsProcedureSave</n></u></uo></boolean><ifbk ldsrc="2390,2392"><e ldsrc="2391"><fc><l><n>DataAccessConnection::CreateSaveStoredProcedureNonAutonumeric</n></l><args><e><n>$nameTable</n></e><e><n>fieldsName</n></e><e><n>fieldsType</n></e></args></fc></e></ifbk></if><if ldsrc="2394"><boolean><uo op="not"><u><n>existsProcedureUpdate</n></u></uo></boolean><ifbk ldsrc="2395,2397"><e ldsrc="2396"><fc><l><n>DataAccessConnection::CreateUpdateStoredProcedure</n></l><args><e><n>$nameTable</n></e><e><n>$nameId</n></e><e><n>fieldsName</n></e><e><n>fieldsType</n></e></args></fc></e></ifbk></if><if ldsrc="2399"><boolean><uo op="not"><u><n>existsProcedureNextID</n></u></uo></boolean><ifbk ldsrc="2400,2402"><e ldsrc="2401"><fc><l><n>DataAccessConnection::CreateNextIdStoredProcedure</n></l><args><e><n>$nameTable</n></e><e><n>$nameId</n></e></args></fc></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockProcedures</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk><else ldsrc="2406"><e ldsrc="2427"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="2408"><bk><Decls><d name="existsProcedureDelete" ldsrc="2409"><type typename="$BOOLEAN$" /><i ldsrc="2409"><e><fc><l><n>DataAccessConnection::DBCheckedStoredProcedure</n></l><args><e><n>$nameProcedureDelete</n></e></args></fc></e></i></d></Decls><Decls><d name="existsProcedureSave" ldsrc="2410"><type typename="$BOOLEAN$" /><i ldsrc="2410"><e><fc><l><n>DataAccessConnection::DBCheckedStoredProcedure</n></l><args><e><n>$nameProcedureSave</n></e></args></fc></e></i></d></Decls><Decls><d name="existsProcedureUpdate" ldsrc="2411"><type typename="$BOOLEAN$" /><i ldsrc="2411"><e><fc><l><n>DataAccessConnection::DBCheckedStoredProcedure</n></l><args><e><n>$nameProcedureUpdate</n></e></args></fc></e></i></d></Decls><if ldsrc="2413"><boolean><uo op="not"><u><n>existsProcedureDelete</n></u></uo></boolean><ifbk ldsrc="2414,2416"><e ldsrc="2415"><fc><l><n>DataAccessConnection::CreateDeleteStoredProcedure</n></l><args><e><n>$nameTable</n></e><e><n>$nameId</n></e></args></fc></e></ifbk></if><if ldsrc="2418"><boolean><uo op="not"><u><n>existsProcedureSave</n></u></uo></boolean><ifbk ldsrc="2419,2421"><e ldsrc="2420"><fc><l><n>DataAccessConnection::CreateSaveStoredProcedure</n></l><args><e><n>$nameTable</n></e><e><n>fieldsName</n></e><e><n>fieldsType</n></e></args></fc></e></ifbk></if><if ldsrc="2423"><boolean><uo op="not"><u><n>existsProcedureUpdate</n></u></uo></boolean><ifbk ldsrc="2424,2426"><e ldsrc="2425"><fc><l><n>DataAccessConnection::CreateUpdateStoredProcedure</n></l><args><e><n>$nameTable</n></e><e><n>$nameId</n></e><e><n>fieldsName</n></e><e><n>fieldsType</n></e></args></fc></e></ifbk></if></bk></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>fieldsBlockProcedures</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></else></if></ifbk></if><documentation short="Lista de campos: new {&quot;f1&quot;, &quot;f2&quot;, ....}&#xD;&#xA;" /><Decls><d name="fieldsNamesExp" ldsrc="2432"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="2432"><e><writecode ldsrc="2432"><e><new><type isarray="true"><dt ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></dt></type><init array="true"><e><n>$nameId</n></e></init></new></e></writecode></e></i></d></Decls><Decls><d name="list" ldsrc="2433"><type ispointer="true"><dt typename="XplInitializerList" /><pi ref="true" /></type><i ldsrc="2433"><e><cast><e><fc><l><bo op="m"><l><n>fieldsNamesExp</n></l><r><n>FindNode</n></r></bo></l><args><e><lit str="/init" /></e></args></fc></e><type ispointer="true"><dt typename="XplInitializerList" /><pi ref="true" /></type></cast></e></i></d></Decls><if ldsrc="2434"><boolean><bo op="NOTEQ"><l><n>list</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2434,2441"><for ldsrc="2435,2435"><init><dl><d name="n" ldsrc="2435"><type typename="$INTEGER$" /><i ldsrc="2435"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>n</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>n</n></u></uo></e></repeat><forblock ldsrc="2435,2440"><Decls><d name="nombreCampo" ldsrc="2436"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2436"><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>n</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><e ldsrc="2439"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>list</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="2438"><e><n>$nombreCampo</n></e></writecode></e></args></fc></e></forblock></for></ifbk></if><documentation short="Lista de tipos: new { gettype(int), ....}&#xD;&#xA;" /><Decls><d name="fieldsTypesExp" ldsrc="2444"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="2444"><e><writecode ldsrc="2444"><e><new><type isarray="true"><dt ispointer="true"><dt typename="Type" /><pi ref="true" /></dt></type><init array="true" /></new></e></writecode></e></i></d></Decls><e ldsrc="2445"><a><l><n>list</n></l><r><cast><e><fc><l><bo op="m"><l><n>fieldsTypesExp</n></l><r><n>FindNode</n></r></bo></l><args><e><lit str="/init" /></e></args></fc></e><type ispointer="true"><dt typename="XplInitializerList" /><pi ref="true" /></type></cast></r></a></e><if ldsrc="2446"><boolean><bo op="NOTEQ"><l><n>list</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2447,2464"><e ldsrc="2450"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>list</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="2449"><e><toft typename="$INTEGER$" /></e></writecode></e></args></fc></e><for ldsrc="2452,2452"><init><dl><d name="n" ldsrc="2452"><type typename="$INTEGER$" /><i ldsrc="2452"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>n</n></l><r><bo op="m"><l><n>listaTipos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>n</n></u></uo></e></repeat><forblock ldsrc="2452,2463"><Decls><d name="tipoCampo" ldsrc="2453"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2453"><e><cast><e><b><l><n>listaTipos</n></l><args><e><n>n</n></e></args></b></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></i></d></Decls><if ldsrc="2455"><boolean><bo op="EQ"><l><fc><l><bo op="m"><l><n>tipoCampo</n></l><r><n>get_typeStr</n></r></bo></l><args /></fc></l><r><lit str="UtnEmall.Utils.Image" /></r></bo></boolean><ifbk ldsrc="2455,2458"><e ldsrc="2456"><a><l><n>tipoCampo</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="2457"><fc><l><bo op="m"><l><n>tipoCampo</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="DotNET::System::Drawing::Image" /></e></args></fc></e></ifbk></if><e ldsrc="2462"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>list</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="2461"><e><toft typename="$tipoCampo" /></e></writecode></e></args></fc></e></forblock></for></ifbk></if><Decls><d name="dbChequedFunction" ldsrc="2466"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2466"><e><writecode ldsrc="2466"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to check and create table and stored procedures for this class. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA;" /><Function name="DbChecked" storage="static" ldsrc="2470,2470"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2471,2491"><if ldsrc="2472"><boolean><n>dbChecked</n></boolean><ifbk ldsrc="2473,2475"><return ldsrc="2474" /></ifbk></if><Decls><d name="fieldsName" ldsrc="2477"><type ispointer="true"><dt isarray="true"><dt ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></dt></dt><pi ref="true" /></type><i ldsrc="2477"><e><n>$fieldsNamesExp</n></e></i></d></Decls><Decls><d name="fieldsType" ldsrc="2478"><type ispointer="true"><dt isarray="true"><dt ispointer="true"><dt typename="Type" /><pi ref="true" /></dt></dt><pi ref="true" /></type><i ldsrc="2478"><e><n>$fieldsTypesExp</n></e></i></d></Decls><Decls><d name="existsTable" ldsrc="2480"><type typename="$BOOLEAN$" /><i ldsrc="2480"><e><fc><l><n>DataAccessConnection::DBCheckedTable</n></l><args><e><n>$nameTable</n></e></args></fc></e></i></d></Decls><if ldsrc="2482"><boolean><uo op="not"><u><n>existsTable</n></u></uo></boolean><ifbk ldsrc="2483,2485"><e ldsrc="2484"><n>$fieldsBlockCreateTable</n></e></ifbk></if><e ldsrc="2487"><n>$fieldsBlockProcedures</n></e><e ldsrc="2489"><a><l><n>dbChecked</n></l><r><lit str="true" type="bool" /></r></a></e></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2496"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2496"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2497"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2498,2500"><e ldsrc="2499"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>dbChequedFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><Function name="SetConnectionObjects" internalname="SetConnectionObjects#57" access="public" storage="static" ldsrc="2503,2503"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2503" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2503,2534"><Decls><d name="SetConnectionObjectsFunction" ldsrc="2504"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2504"><e><writecode ldsrc="2504"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; set the connection and the transaction to the object, in the case&#xD;&#xA; that a global transaction is running.&#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;connection&quot;&gt;The $connectionType$ connection to the database&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;transaction&quot;&gt;The global $transactionType$ transaction&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="SetConnectionObjects" access="public" ldsrc="2515,2515"><Parameters><P name="connection" number="1"><type ispointer="true" ldsrc="2515"><dt typename="$connectionType" /><pi ref="true" /></type></P><P name="transaction" number="2"><type ispointer="true" ldsrc="2515"><dt typename="$transactionType" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2516,2526"><if ldsrc="2517"><boolean><bo op="EQ"><l><n>connection</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2518,2520"><throw ldsrc="2519,2519"><new><type typename="ArgumentException" /><init ldsrc="2519"><list><e><lit str="The connection cannot be null" /></e></list></init></new></throw></ifbk></if><e ldsrc="2522"><a><l><bo op="m"><l><n>this</n></l><r><n>dbConnection</n></r></bo></l><r><n>connection</n></r></a></e><e ldsrc="2523"><a><l><bo op="m"><l><n>this</n></l><r><n>dbTransaction</n></r></bo></l><r><n>transaction</n></r></a></e><documentation short=" FIXME : The name of this flag is not always apropiated&#xD;&#xA;" /><e ldsrc="2525"><a><l><bo op="m"><l><n>this</n></l><r><n>isGlobalTransaction</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2529"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2529"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2530"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2531,2533"><e ldsrc="2532"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>SetConnectionObjectsFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><Function name="GenerateSetProperties" internalname="GenerateSetProperties#58" access="public" storage="static" ldsrc="2535,2535"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2535" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2535,2594"><Decls><d name="listaMiembros" ldsrc="2537"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2537"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="fieldsBlock" ldsrc="2539"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="2539"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="nameIdProperty" ldsrc="2540"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2540"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdPropertyStatic" ldsrc="2541"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2541"><e><new><type typename="XplIName" /><init ldsrc="2541"><list><e><bo><l><lit str="DBId" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short="Inserto los miembros en la clase actual&#xD;&#xA;" /><e ldsrc="2546"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="2544"><classmembers><Field name="$nameIdPropertyStatic" access="public" ldsrc="2545,2545"><type ispointer="true" const="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2545"><e><n>$nameIdProperty</n></e></i></Field></classmembers></writecode></r></a></e><e ldsrc="2547"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>listaMiembros</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentClass</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="2553"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="2550"><e><fc><l><bo op="m"><l><n>properties</n></l><r><n>Add</n></r></bo></l><args><e><n>$nameIdProperty</n></e><e><toft typename="$INTEGER$" /></e></args></fc></e></writecode></e></args></fc></e><for ldsrc="2555,2555"><init><dl><d name="i" ldsrc="2555"><type typename="$INTEGER$" /><i ldsrc="2555"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaCampos</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2556,2574"><Decls><d name="propertya" ldsrc="2557"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2557"><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><Decls><d name="propertyb" ldsrc="2558"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2558"><e><bo op="m"><l><cast><e><b><l><n>listaCampos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type></cast></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="propertyaStatic" ldsrc="2559"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2559"><e><new><type typename="XplIName" /><init ldsrc="2559"><list><e><bo><l><lit str="DB" /></l><r><n>propertyb</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="typeProperty" ldsrc="2560"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2560"><e><cast><e><b><l><n>listaTipos</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type></cast></e></i></d></Decls><if ldsrc="2562"><boolean><bo op="EQ"><l><fc><l><bo op="m"><l><n>typeProperty</n></l><r><n>get_typeStr</n></r></bo></l><args /></fc></l><r><lit str="UtnEmall.Utils.Image" /></r></bo></boolean><ifbk ldsrc="2562,2564"><e ldsrc="2563"><fc><l><bo op="m"><l><n>typeProperty</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::String</n></e></args></fc></e></ifbk></if><e ldsrc="2570"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>fieldsBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="2567"><e><fc><l><bo op="m"><l><n>properties</n></l><r><n>Add</n></r></bo></l><args><e><n>$propertya</n></e><e><toft typename="$typeProperty" /></e></args></fc></e></writecode></e></args></fc></e><e ldsrc="2572"><a><l><n>listaMiembros</n></l><r><writecode ldsrc="2572"><classmembers><Field name="$propertyaStatic" access="public" ldsrc="2572,2572"><type ispointer="true" const="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2572"><e><n>$propertya</n></e></i></Field></classmembers></writecode></r></a></e><e ldsrc="2573"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>listaMiembros</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentClass</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></forblock></for><Decls><d name="SetPropertiesFunction" ldsrc="2576"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2576"><e><writecode ldsrc="2576"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Add to the dictionary the properties that can&#xD;&#xA; be used as first parameter on the LoadWhere method.&#xD;&#xA; &lt;/summary&gt;&#xD;&#xA;" /><Function name="SetProperties" storage="static" ldsrc="2581,2581"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2582,2586"><e ldsrc="2583"><a><l><n>properties</n></l><r><new><type typename="dict" /></new></r></a></e><e ldsrc="2584"><fc><l><bo op="m"><l><n>properties</n></l><r><n>Add</n></r></bo></l><args><e><lit str="timestamp" /></e><e><toft typename="DateTime" /></e></args></fc></e><e ldsrc="2585"><n>$fieldsBlock</n></e></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2589"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2589"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2590"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2591,2593"><e ldsrc="2592"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>SetPropertiesFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Crea la funciones correspondientes para cada uno de los campos relacionados.&#xD;&#xA; Se basa en la cardinalidad de la relacion para decidir que funciones crear.&#xD;&#xA;" /><Function name="GenerateFunctionRelations" internalname="GenerateFunctionRelations#59" access="public" storage="static" ldsrc="2597,2597"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2597" /></P><P name="tableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2597" /></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2597,2660"><Decls><d name="update" ldsrc="2598"><type typename="$BOOLEAN$" /><i ldsrc="2598"><e><lit str="false" type="bool" /></e></i></d></Decls><for ldsrc="2600,2600"><init><dl><d name="i" ldsrc="2600"><type typename="$INTEGER$" /><i ldsrc="2600"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>listaRelaciones</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2601,2655"><Decls><d name="relation" ldsrc="2602"><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type><i ldsrc="2602"><e><cast><e><b><l><n>listaRelaciones</n></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="Relation" /><pi ref="true" /></type></cast></e></i></d></Decls><switch ldsrc="2604"><e><bo op="m"><l><n>relation</n></l><r><n>relationType</n></r></bo></e><case ldsrc="2606"><e><lit str="1" type="integer" /></e><bk><documentation short="case RelationTypes::UnoAUno:&#xD;&#xA;" /><if ldsrc="2608"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></boolean><ifbk ldsrc="2609,2615"><e ldsrc="2610"><fc><l><n>GenerateLoadRelations</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e><e><n>relation</n></e></args></fc></e><if ldsrc="2611"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveSave</n></r></bo></boolean><ifbk ldsrc="2612,2614"><e ldsrc="2613"><a><l><n>update</n></l><r><lit str="true" type="bool" /></r></a></e></ifbk></if></ifbk></if><jump ldsrc="2616" /></bk></case><case ldsrc="2618"><e><lit str="2" type="integer" /></e><bk><documentation short="case RelationTypes::UnoAMuchos:&#xD;&#xA;" /><if ldsrc="2620"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></boolean><ifbk ldsrc="2621,2627"><e ldsrc="2622"><fc><l><n>GenerateLoadRelationsUnoMuchos</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e><e><n>relation</n></e></args></fc></e><if ldsrc="2623"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveSave</n></r></bo></boolean><ifbk ldsrc="2624,2626"><e ldsrc="2625"><fc><l><n>GenerateSaveCollection</n></l><args><e><n>modelName</n></e><e><n>relation</n></e></args></fc></e></ifbk></if></ifbk></if><if ldsrc="2629"><boolean><bo op="m"><l><n>relation</n></l><r><n>deleteCascade</n></r></bo></boolean><ifbk ldsrc="2630,2632"><e ldsrc="2631"><fc><l><n>GenerateDeleteCollection</n></l><args><e><n>modelName</n></e><e><n>relation</n></e></args></fc></e></ifbk></if><jump ldsrc="2633" /></bk></case><case ldsrc="2635"><e><lit str="3" type="integer" /></e><bk><documentation short="case RelationTypes::MuchosAUno:						&#xD;&#xA;" /><if ldsrc="2637"><boolean><bo op="m"><l><n>relation</n></l><r><n>generateRelation</n></r></bo></boolean><ifbk ldsrc="2638,2640"><e ldsrc="2639"><fc><l><n>GenerateLoadBy</n></l><args><e><n>modelName</n></e><e><n>relation</n></e></args></fc></e></ifbk></if><if ldsrc="2641"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveLoad</n></r></bo></boolean><ifbk ldsrc="2642,2648"><e ldsrc="2643"><fc><l><n>GenerateLoadRelations</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e><e><n>relation</n></e></args></fc></e><if ldsrc="2644"><boolean><bo op="m"><l><n>relation</n></l><r><n>recursiveSave</n></r></bo></boolean><ifbk ldsrc="2645,2647"><e ldsrc="2646"><a><l><n>update</n></l><r><lit str="true" type="bool" /></r></a></e></ifbk></if></ifbk></if><jump ldsrc="2649" /></bk></case><case ldsrc="2651"><e><lit str="4" type="integer" /></e><bk><documentation short="case RelationTypes::MuchosAMuchos:&#xD;&#xA;" /><jump ldsrc="2653" /></bk></case></switch></forblock></for><if ldsrc="2656"><boolean><n>update</n></boolean><ifbk ldsrc="2657,2659"><e ldsrc="2658"><fc><l><n>GenerateUpdate</n></l><args><e><n>modelName</n></e><e><n>tableName</n></e></args></fc></e></ifbk></if></FunctionBody></Function><Function name="ToLowerCamelCase" internalname="ToLowerCamelCase#60" access="public" storage="static" ldsrc="2661,2661"><Parameters><P name="valor" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="2661"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="2661,2666"><Decls><d name="primeraLetra" ldsrc="2662"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2662"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>valor</n></l><r><n>Substring</n></r></bo></l><args><e><lit str="0" type="integer" /></e><e><lit str="1" type="integer" /></e></args></fc></l><r><n>ToLower</n></r></bo></l><args /></fc></e></i></d></Decls><Decls><d name="ultimasLetras" ldsrc="2663"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2663"><e><fc><l><bo op="m"><l><n>valor</n></l><r><n>Substring</n></r></bo></l><args><e><lit str="1" type="integer" /></e></args></fc></e></i></d></Decls><Decls><d name="resultado" ldsrc="2664"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2664"><e><bo><l><n>primeraLetra</n></l><r><n>ultimasLetras</n></r></bo></e></i></d></Decls><return ldsrc="2665,2665"><n>resultado</n></return></FunctionBody></Function><documentation short=" Genera la funcion Save para cada una de las colecciones&#xD;&#xA;" /><Function name="GenerateSaveCollection" internalname="GenerateSaveCollection#61" access="public" storage="static" ldsrc="2668,2668"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2668" /></P><P name="relation" number="2"><type ispointer="true" typeStr="^_UtnEmall.Utils.Relation" ldsrc="2668"><dt typename="Relation" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2668,2828"><Decls><d name="entityType" ldsrc="2669"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2669"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2670"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="entityTypeRelation" ldsrc="2672"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2672"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2673"><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="dataAccessTypeRelation" ldsrc="2675"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2675"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2676"><fc><l><bo op="m"><l><n>dataAccessTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="propertyName" ldsrc="2678"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2678"><e><new><type typename="XplIName" /><init ldsrc="2678"><list><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="2679"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>relation</n></l><r><n>parentName</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2680,2682"><e ldsrc="2681"><a><l><n>propertyName</n></l><r><new><type typename="XplIName" /><init ldsrc="2681"><list><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>parentName</n></r></bo></l><r><n>Identifier</n></r></bo></e></list></init></new></r></a></e></ifbk></if><Decls><d name="propertyNameRelationString" ldsrc="2684"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2684"><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><Decls><d name="propertyNameRelation" ldsrc="2686"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2686"><e><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></e></i></d></Decls><Decls><d name="functionName" ldsrc="2687"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2687"><e><new><type typename="XplIName" /><init ldsrc="2687"><list><e><bo><l><bo><l><lit str="Save" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="Collection" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="nameId" ldsrc="2689"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2689"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="2690"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2690"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><if ldsrc="2691"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="2692,2695"><e ldsrc="2693"><a><l><n>nameId</n></l><r><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>parentName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></r></a></e><e ldsrc="2694"><a><l><n>nameIdParameter</n></l><r><bo><l><lit str="@id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>parentName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></r></a></e></ifbk></if><Decls><d name="nameTableRelated" ldsrc="2696"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2696"><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="namecolumnRelatedParameter" ldsrc="2697"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2697"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="namecolumnRelated" ldsrc="2698"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2698"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><documentation short="Tipo para lista&#xD;&#xA;" /><Decls><d name="listOfType" ldsrc="2701"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2701"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2702"><fc><l><bo op="m"><l><n>listOfType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="saveCollectionFunction" ldsrc="2704"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2704"><e><writecode ldsrc="2704"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Updates the database to reflect the current state of the list.&#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;collectionDataAccess&quot;&gt;the IDataAccess of the relation&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;parent&quot;&gt;the parent of the object&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;collection&quot;&gt;a collection of items&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;isNewParent&quot;&gt;if the parent is a new object&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;internal data structure to aviod problems with circular referencies on entities&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;UtnEmallDataAccessException&quot;&gt;&#xD;&#xA; If an DbException occurs in the try block while accessing the database.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="$functionName" ldsrc="2716,2716"><Parameters><P name="collectionDataAccess" number="1"><type ispointer="true" ldsrc="2716"><dt typename="$dataAccessTypeRelation" /><pi ref="true" /></type></P><P name="parent" number="2"><type ispointer="true" ldsrc="2716"><dt typename="$entityType" /><pi ref="true" /></type></P><P name="collection" number="3"><type ispointer="true" ldsrc="2716"><dt typename="$listOfType" /><pi ref="true" /></type></P><P name="isNewParent" number="4"><type typename="$BOOLEAN$" ldsrc="2716" /></P><P name="scope" number="5"><type ispointer="true" ldsrc="2716"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2717,2819"><if ldsrc="2718"><boolean><bo op="EQ"><l><n>collection</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2719,2721"><return ldsrc="2720" /></ifbk></if><documentation short=" Set connection objects on collection data access&#xD;&#xA;" /><e ldsrc="2723"><fc><l><bo op="m"><l><n>collectionDataAccess</n></l><r><n>SetConnectionObjects</n></r></bo></l><args><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e><documentation short=" Set the child/parent relation&#xD;&#xA;" /><for ldsrc="2726,2726"><init><dl><d name="i" ldsrc="2726"><type typename="$INTEGER$" /><i ldsrc="2726"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>collection</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2727,2731"><Decls><d name="changed" ldsrc="2728"><type typename="$BOOLEAN$" /><i ldsrc="2728"><e><bo op="m"><l><b><l><n>collection</n></l><args><e><n>i</n></e></args></b></l><r><n>Changed</n></r></bo></e></i></d></Decls><e ldsrc="2729"><a><l><bo op="m"><l><b><l><n>collection</n></l><args><e><n>i</n></e></args></b></l><r><n>$propertyName</n></r></bo></l><r><n>parent</n></r></a></e><e ldsrc="2730"><a><l><bo op="m"><l><b><l><n>collection</n></l><args><e><n>i</n></e></args></b></l><r><n>Changed</n></r></bo></l><r><n>changed</n></r></a></e></forblock></for><documentation short=" If the parent is new save all childs, else check diferencies with db&#xD;&#xA;" /><if ldsrc="2734"><boolean><n>isNewParent</n></boolean><ifbk ldsrc="2735,2740"><for ldsrc="2736,2736"><init><dl><d name="i" ldsrc="2736"><type typename="$INTEGER$" /><i ldsrc="2736"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>collection</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2737,2739"><e ldsrc="2738"><fc><l><bo op="m"><l><n>collectionDataAccess</n></l><r><n>Save</n></r></bo></l><args><e><b><l><n>collection</n></l><args><e><n>i</n></e></args></b></e><e><n>scope</n></e></args></fc></e></forblock></for></ifbk><else ldsrc="2741"><documentation short=" Check the childs that are not part of the parent any more&#xD;&#xA;" /><Decls><d name="idList" ldsrc="2744"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2744"><e><lit str="0" /></e></i></d></Decls><if ldsrc="2745"><boolean><bo op="GR"><l><bo op="m"><l><n>collection</n></l><r><n>Count</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="2746,2748"><e ldsrc="2747"><a><l><n>idList</n></l><r><bo><l><lit /></l><r><bo op="m"><l><b><l><n>collection</n></l><args><e><lit str="0" type="integer" /></e></args></b></l><r><n>Id</n></r></bo></r></bo></r></a></e></ifbk></if><for ldsrc="2750,2750"><init><dl><d name="i" ldsrc="2750"><type typename="$INTEGER$" /><i ldsrc="2750"><e><lit str="1" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>collection</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2751,2753"><e ldsrc="2752"><a operation="add"><l><n>idList</n></l><r><bo><l><lit str=", " /></l><r><bo op="m"><l><b><l><n>collection</n></l><args><e><n>i</n></e></args></b></l><r><n>Id</n></r></bo></r></bo></r></a></e></forblock></for><documentation short=" Returns the ids that doesn't exists in the current collection&#xD;&#xA;" /><Decls><d name="command" ldsrc="2756"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2756"><e><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="SELECT " /></l><r><n>$namecolumnRelated</n></r></bo></l><r><lit str=" FROM [" /></r></bo></l><r><n>$nameTableRelated</n></r></bo></l><r><lit str="] " /></r></bo></l><r><lit str="WHERE " /></r></bo></l><r><n>$nameId</n></r></bo></l><r><lit str=" = " /></r></bo></l><r><n>$nameIdParameter</n></r></bo></l><r><lit str=" AND " /></r></bo></l><r><n>$namecolumnRelated</n></r></bo></l><r><lit str=" NOT IN (" /></r></bo></l><r><n>idList</n></r></bo></l><r><lit str=")" /></r></bo></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="2759"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="2759"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>command</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><Decls><d name="sqlParameterId" ldsrc="2761"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="2761"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="2762"><a><l><bo op="m"><l><n>sqlParameterId</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>parent</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="2763"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>sqlParameterId</n></e></args></fc></e><Decls><d name="reader" ldsrc="2765"><type ispointer="true"><dt typename="IDataReader" /><pi ref="true" /></type><i ldsrc="2765"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteReader</n></r></bo></l><args /></fc></e></i></d></Decls><Decls><d name="objectsToDelete" ldsrc="2766"><type ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></type><i ldsrc="2766"><e><new><type typename="$listOfType" /></new></e></i></d></Decls><documentation short=" Insert Ids on a list&#xD;&#xA;" /><Decls><d name="listId" ldsrc="2769"><type typename="ListInt" /><i ldsrc="2769"><e><new><type typename="ListInt" /></new></e></i></d></Decls><while ldsrc="2770"><boolean><fc><l><bo op="m"><l><n>reader</n></l><r><n>Read</n></r></bo></l><args /></fc></boolean><dobk ldsrc="2771,2773"><e ldsrc="2772"><fc><l><bo op="m"><l><n>listId</n></l><r><n>Add</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></e></args></fc></e></dobk></while><e ldsrc="2774"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e><documentation short=" Load items to be removed&#xD;&#xA;" /><for ldsrc="2777,2777"><init><dl><d name="id" ldsrc="2777"><type typename="$INTEGER$" /></d></dl></init><condition><n>listId</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="2778,2781"><Decls><d name="entityToDelete" ldsrc="2779"><type ispointer="true"><dt typename="$entityTypeRelation" /><pi ref="true" /></type><i ldsrc="2779"><e><fc><l><bo op="m"><l><n>collectionDataAccess</n></l><r><n>Load</n></r></bo></l><args><e><n>id</n></e><e><n>scope</n></e></args></fc></e></i></d></Decls><e ldsrc="2780"><fc><l><bo op="m"><l><n>objectsToDelete</n></l><r><n>Add</n></r></bo></l><args><e><n>entityToDelete</n></e></args></fc></e></forblock></for><documentation short=" Have to do this because the reader must be closed before&#xD;&#xA; deletion of entities&#xD;&#xA;" /><for ldsrc="2785,2785"><init><dl><d name="i" ldsrc="2785"><type typename="$INTEGER$" /><i ldsrc="2785"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>objectsToDelete</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2786,2788"><e ldsrc="2787"><fc><l><bo op="m"><l><n>collectionDataAccess</n></l><r><n>Delete</n></r></bo></l><args><e><b><l><n>objectsToDelete</n></l><args><e><n>i</n></e></args></b></e><e><n>scope</n></e></args></fc></e></forblock></for><Decls><d name="timestamp" ldsrc="2790"><type typename="zoe::lang::DateTime" /></d></Decls><documentation short=" Check all the properties of the collection items &#xD;&#xA; to see if they have changed (timestamp)&#xD;&#xA;" /><for ldsrc="2793,2793"><init><dl><d name="i" ldsrc="2793"><type typename="$INTEGER$" /><i ldsrc="2793"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><n>collection</n></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="2794,2817"><Decls><d name="item" ldsrc="2795"><type ispointer="true"><dt typename="$entityTypeRelation" /><pi ref="true" /></type><i ldsrc="2795"><e><b><l><n>collection</n></l><args><e><n>i</n></e></args></b></e></i></d></Decls><if ldsrc="2796"><boolean><bo op="AND"><l><uo op="not"><u><bo op="m"><l><n>item</n></l><r><n>Changed</n></r></bo></u></uo></l><r><uo op="not"><u><bo op="m"><l><n>item</n></l><r><n>IsNew</n></r></bo></u></uo></r></bo></boolean><ifbk ldsrc="2797,2811"><documentation short=" Create the command&#xD;&#xA;" /><Decls><d name="sql" ldsrc="2799"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2799"><e><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="SELECT timestamp FROM [" /></l><r><n>$nameTableRelated</n></r></bo></l><r><lit str="] WHERE " /></r></bo></l><r><n>$namecolumnRelated</n></r></bo></l><r><lit str=" = " /></r></bo></l><r><n>$namecolumnRelatedParameter</n></r></bo></e></i></d></Decls><Decls><d name="sqlCommandTimestamp" ldsrc="2800"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="2800"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>sql</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><documentation short=" Set the command's parameters values	&#xD;&#xA;" /><Decls><d name="sqlParameterIdPreference" ldsrc="2802"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="2802"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$namecolumnRelatedParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="2803"><a><l><bo op="m"><l><n>sqlParameterIdPreference</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>item</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="2804"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommandTimestamp</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>sqlParameterIdPreference</n></e></args></fc></e><e ldsrc="2806"><a><l><n>timestamp</n></l><r><cast><e><fc><l><bo op="m"><l><n>sqlCommandTimestamp</n></l><r><n>ExecuteScalar</n></r></bo></l><args /></fc></e><type typename="zoe::lang::DateTime" /></cast></r></a></e><if ldsrc="2807"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>item</n></l><r><n>Timestamp</n></r></bo></l><r><n>timestamp</n></r></bo></boolean><ifbk ldsrc="2808,2810"><e ldsrc="2809"><a><l><bo op="m"><l><n>item</n></l><r><n>Changed</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e></ifbk></if></ifbk></if><documentation short=" Save the item if it changed or is new&#xD;&#xA;" /><if ldsrc="2813"><boolean><bo op="OR"><l><bo op="m"><l><n>item</n></l><r><n>Changed</n></r></bo></l><r><bo op="m"><l><n>item</n></l><r><n>IsNew</n></r></bo></r></bo></boolean><ifbk ldsrc="2814,2816"><e ldsrc="2815"><fc><l><bo op="m"><l><n>collectionDataAccess</n></l><r><n>Save</n></r></bo></l><args><e><n>item</n></e></args></fc></e></ifbk></if></forblock></for></else></if></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2823"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2823"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2824"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2825,2827"><e ldsrc="2826"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>saveCollectionFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion LoadRelations para cardinalidad uno a muchos&#xD;&#xA;" /><Function name="GenerateLoadRelationsUnoMuchos" internalname="GenerateLoadRelationsUnoMuchos#62" access="public" storage="static" ldsrc="2830,2830"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2830" /></P><P name="sqlTableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2830" /></P><P name="relation" number="3"><type ispointer="true" typeStr="^_UtnEmall.Utils.Relation" ldsrc="2830"><dt typename="Relation" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2830,2886"><Decls><d name="entity" ldsrc="2831"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2831"><e><new><type typename="XplIName" /><init ldsrc="2831"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="relationDataAccess" ldsrc="2832"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2832"><e><new><type typename="XplIName" /><init ldsrc="2832"><list><e><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="nameId" ldsrc="2833"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2833"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameTable" ldsrc="2834"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2834"><e><bo op="m"><l><n>sqlTableName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><documentation short=" modelName.Identifier;&#xD;&#xA;" /><Decls><d name="nameIdParameter" ldsrc="2836"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2836"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="namecolumnRelated" ldsrc="2838"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2838"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="entityTypeRelation" ldsrc="2840"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2840"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2841"><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="dataAccessTypeRelation" ldsrc="2842"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2842"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2843"><fc><l><bo op="m"><l><n>dataAccessTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="functionLoadByName" ldsrc="2845"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2845"><e><new><type typename="XplIName" /><init ldsrc="2845"><list><e><bo><l><bo><l><lit str="LoadBy" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="Collection" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="propertyName" ldsrc="2847"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2847"><e><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></e></i></d></Decls><Decls><d name="functionName" ldsrc="2849"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2849"><e><new><type typename="XplIName" /><init ldsrc="2849"><list><e><bo><l><lit str="LoadRelation" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short="Lista de tipos generica&#xD;&#xA;" /><Decls><d name="listOfType" ldsrc="2852"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2852"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2853"><fc><l><bo op="m"><l><n>listOfType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="loadRelationsFunction" ldsrc="2855"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2855"><e><writecode ldsrc="2855"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Load the relation $propertyName$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$entity$&quot;&gt;$entityType$ parent&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;Internal structure to avoid problems with circular referencies&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; if &lt;paramref name=&quot;$entity$&quot;/&gt; is not a &lt;c&gt;$entityType$&lt;/c&gt;.&#xD;&#xA; &lt;/exception&gt;&#xD;&#xA;" /><Function name="$functionName" access="public" ldsrc="2865,2865"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="2865"><dt typename="$entityType" /><pi ref="true" /></type></P><P name="scope" number="2"><type ispointer="true" ldsrc="2865"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2866,2877"><if ldsrc="2867"><boolean><bo op="EQ"><l><n>$entity</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2868,2870"><throw ldsrc="2869,2869"><new><type typename="ArgumentException" /><init ldsrc="2869"><list><e><lit str="The argument can't be null" /></e></list></init></new></throw></ifbk></if><documentation short=" Create data access object for related object&#xD;&#xA;" /><Decls><d name="$relationDataAccess" ldsrc="2872"><type ispointer="true"><dt typename="$dataAccessTypeRelation" /><pi ref="true" /></type><i ldsrc="2872"><e><new><type typename="$dataAccessTypeRelation" /></new></e></i></d></Decls><documentation short=" Set connection objects to the data access&#xD;&#xA;" /><e ldsrc="2874"><fc><l><bo op="m"><l><n>$relationDataAccess</n></l><r><n>SetConnectionObjects</n></r></bo></l><args><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e><documentation short=" Load related objects&#xD;&#xA;" /><e ldsrc="2876"><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><fc><l><bo op="m"><l><n>$relationDataAccess</n></l><r><n>$functionLoadByName</n></r></bo></l><args><e><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></e><e><n>scope</n></e></args></fc></r></a></e></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2881"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2881"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2882"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2883,2885"><e ldsrc="2884"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadRelationsFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion LoadRelations para cardinalidad muchos a uno y uno a uno.&#xD;&#xA;" /><Function name="GenerateLoadRelations" internalname="GenerateLoadRelations#63" access="public" storage="static" ldsrc="2888,2888"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2888" /></P><P name="sqlTableName" number="2"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2888" /></P><P name="relation" number="3"><type ispointer="true" typeStr="^_UtnEmall.Utils.Relation" ldsrc="2888"><dt typename="Relation" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2888,2975"><Decls><d name="entity" ldsrc="2889"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2889"><e><new><type typename="XplIName" /><init ldsrc="2889"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="relationDataAccess" ldsrc="2890"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2890"><e><new><type typename="XplIName" /><init ldsrc="2890"><list><e><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="DataAccess" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="nameId" ldsrc="2892"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2892"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameTable" ldsrc="2893"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2893"><e><bo op="m"><l><n>sqlTableName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><documentation short=" modelName.Identifier;&#xD;&#xA;" /><Decls><d name="nameIdParameter" ldsrc="2894"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2894"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="namecolumnRelated" ldsrc="2896"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2896"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="entityTypeRelation" ldsrc="2898"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2898"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2899"><fc><l><bo op="m"><l><n>entityTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="dataAccessTypeRelation" ldsrc="2900"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2900"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2901"><fc><l><bo op="m"><l><n>dataAccessTypeRelation</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="DataAccess" /></r></bo></e></args></fc></e><Decls><d name="propertyName" ldsrc="2903"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2903"><e><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></e></i></d></Decls><Decls><d name="className" ldsrc="2905"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2905"><e><new><type typename="XplIName" /><init ldsrc="2905"><list><e><bo><l><lit str="LoadRelation" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="loadSubRelations" ldsrc="2907"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="2907"><e><writecode ldsrc="2907"><e><lit str="true" type="bool" /></e></writecode></e></i></d></Decls><if ldsrc="2909"><boolean><uo op="not"><u><bo op="m"><l><n>relation</n></l><r><n>loadSubRelations</n></r></bo></u></uo></boolean><ifbk><e ldsrc="2909"><a><l><n>loadSubRelations</n></l><r><writecode ldsrc="2909"><e><lit str="false" type="bool" /></e></writecode></r></a></e></ifbk></if><Decls><d name="loadRelationsFunction" ldsrc="2911"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2911"><e><writecode ldsrc="2911"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Load the relation $propertyName$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$entity$&quot;&gt;$entityType$ parent&lt;/param&gt;&#xD;&#xA; &lt;exception cref=&quot;ArgumentNullException&quot;&gt;&#xD;&#xA; if &lt;paramref name=&quot;$entity$&quot;/&gt; is not a &lt;c&gt;$entityType$&lt;/c&gt;.&#xD;&#xA; &lt;/exception&gt;		&#xD;&#xA;" /><Function name="$className" access="public" ldsrc="2920,2920"><Parameters><P name="$entity" number="1"><type ispointer="true" ldsrc="2920"><dt typename="$entityType" /><pi ref="true" /></type></P><P name="scope" number="2"><type ispointer="true" ldsrc="2920"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="2921,2967"><if ldsrc="2922"><boolean><bo op="EQ"><l><n>$entity</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2923,2925"><throw ldsrc="2924,2924"><new><type typename="ArgumentException" /><init ldsrc="2924"><list><e><lit str="The argument can't be null" /></e></list></init></new></throw></ifbk></if><Decls><d name="closeConnection" ldsrc="2926"><type typename="$BOOLEAN$" /><i ldsrc="2926"><e><lit str="false" type="bool" /></e></i></d></Decls><try ldsrc="2927"><trybk ldsrc="2928,2953"><documentation short=" Create a new connection if needed&#xD;&#xA;" /><if ldsrc="2930"><boolean><bo op="OR"><l><bo op="EQ"><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="EQ"><l><fc><l><bo op="m"><l><bo op="m"><l><n>dbConnection</n></l><r><n>State</n></r></bo></l><r><n>CompareTo</n></r></bo></l><args><e><n>DotNET::System::Data::ConnectionState::Closed</n></e></args></fc></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="2931,2935"><e ldsrc="2932"><a><l><n>closeConnection</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="2933"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="2934"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Create a command&#xD;&#xA;" /><Decls><d name="cmdText" ldsrc="2937"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2937"><e><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="SELECT " /></l><r><n>$namecolumnRelated</n></r></bo></l><r><lit str=" FROM [" /></r></bo></l><r><n>$nameTable</n></r></bo></l><r><lit str="] WHERE " /></r></bo></l><r><n>$nameId</n></r></bo></l><r><lit str=" = " /></r></bo></l><r><n>$nameIdParameter</n></r></bo></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="2938"><type ispointer="true"><dt typename="$commandType" /><pi ref="true" /></type><i ldsrc="2938"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>cmdText</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><Decls><d name="parameter" ldsrc="2939"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="2939"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$nameIdParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><documentation short=" Set command parameters values&#xD;&#xA;" /><e ldsrc="2941"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><bo op="m"><l><n>$entity</n></l><r><n>Id</n></r></bo></r></a></e><e ldsrc="2942"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e><documentation short=" Execute commands&#xD;&#xA;" /><Decls><d name="idRelation" ldsrc="2944"><type ispointer="true"><dt typename="$OBJECT$" /><pi ref="true" /></type><i ldsrc="2944"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteScalar</n></r></bo></l><args /></fc></e></i></d></Decls><if ldsrc="2945"><boolean><bo op="AND"><l><bo op="NOTEQ"><l><n>idRelation</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="GR"><l><cast><e><n>idRelation</n></e><type typename="$INTEGER$" /></cast></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="2946,2952"><documentation short=" Create data access objects and set connection objects&#xD;&#xA;" /><Decls><d name="$relationDataAccess" ldsrc="2948"><type ispointer="true"><dt typename="$dataAccessTypeRelation" /><pi ref="true" /></type><i ldsrc="2948"><e><new><type typename="$dataAccessTypeRelation" /></new></e></i></d></Decls><e ldsrc="2949"><fc><l><bo op="m"><l><n>$relationDataAccess</n></l><r><n>SetConnectionObjects</n></r></bo></l><args><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e><documentation short=" Load related object&#xD;&#xA;" /><e ldsrc="2951"><a><l><bo op="m"><l><n>$entity</n></l><r><n>$propertyName</n></r></bo></l><r><fc><l><bo op="m"><l><n>$relationDataAccess</n></l><r><n>Load</n></r></bo></l><args><e><cast><e><n>idRelation</n></e><type typename="$INTEGER$" /></cast></e><e><n>$loadSubRelations</n></e><e><n>scope</n></e></args></fc></r></a></e></ifbk></if></trybk><catchbk><init ldsrc="2954"><d name="dbException" ldsrc="2954"><type ispointer="true"><dt typename="DbException" /><pi ref="true" /></type></d></init><bk ldsrc="2955,2958"><documentation short=" Catch and rethrow as custom exception&#xD;&#xA;" /><throw ldsrc="2957,2957"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="2957"><list><e><bo op="m"><l><n>dbException</n></l><r><n>Message</n></r></bo></e><e><n>dbException</n></e></list></init></new></throw></bk></catchbk><finalybk ldsrc="2960,2966"><documentation short=" Close connection if initiated by me&#xD;&#xA;" /><if ldsrc="2962"><boolean><n>closeConnection</n></boolean><ifbk ldsrc="2963,2965"><e ldsrc="2964"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if></finalybk></try></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="2971"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="2971"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="2972"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2972,2974"><e ldsrc="2973"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadRelationsFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion LoadBy para cardinalidad uno a muchos.&#xD;&#xA;" /><Function name="GenerateLoadByUnoMuchos" internalname="GenerateLoadByUnoMuchos#64" access="public" storage="static" ldsrc="2977,2977"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="2977" /></P><P name="relation" number="2"><type ispointer="true" typeStr="^_UtnEmall.Utils.Relation" ldsrc="2977"><dt typename="Relation" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="2977,3057"><Decls><d name="entity" ldsrc="2978"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2978"><e><new><type typename="XplIName" /><init ldsrc="2978"><list><e><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></list></init></new></e></i></d></Decls><Decls><d name="nameId" ldsrc="2979"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2979"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="2981"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2981"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="namecolumnRelated" ldsrc="2983"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2983"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameColumnRelatedInt" ldsrc="2984"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2984"><e><new><type typename="XplIName" /><init ldsrc="2984"><list><e><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="namecolumnRelatedParameter" ldsrc="2985"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2985"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameTableRelated" ldsrc="2987"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="2987"><e><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="entityType" ldsrc="2989"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="2989"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="2990"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="propertyName" ldsrc="2992"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2992"><e><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></e></i></d></Decls><Decls><d name="className" ldsrc="2994"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="2994"><e><new><type typename="XplIName" /><init ldsrc="2994"><list><e><bo><l><lit str="LoadBy" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="loadByFunction" ldsrc="2997"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="2997"><e><writecode ldsrc="2997"><classmembers><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Load a $entityType$ by a $propertyName$ from database. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$nameColumnRelatedInt$&quot;&gt;$propertyName$ Id&lt;/param&gt;&#xD;&#xA;" /><Function name="$className" access="public" ldsrc="3003,3003"><Parameters><P name="$nameColumnRelatedInt" number="1"><type typename="$INTEGER$" ldsrc="3003" /></P><P name="scope" number="2"><type ispointer="true" ldsrc="3003"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$entityType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="3004,3049"><Decls><d name="$entity" ldsrc="3005"><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></d></Decls><Decls><d name="closeConnection" ldsrc="3006"><type typename="$BOOLEAN$" /><i ldsrc="3006"><e><lit str="false" type="bool" /></e></i></d></Decls><try ldsrc="3007"><trybk ldsrc="3008,3038"><documentation short=" Create a connection if necessary&#xD;&#xA;" /><if ldsrc="3010"><boolean><bo op="OR"><l><bo op="EQ"><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="EQ"><l><fc><l><bo op="m"><l><bo op="m"><l><n>dbConnection</n></l><r><n>State</n></r></bo></l><r><n>CompareTo</n></r></bo></l><args><e><n>DotNET::System::Data::ConnectionState::Closed</n></e></args></fc></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="3011,3015"><e ldsrc="3012"><a><l><n>closeConnection</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="3013"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="3014"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Create a command&#xD;&#xA;" /><Decls><d name="cmdText" ldsrc="3017"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="3017"><e><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="SELECT " /></l><r><n>$nameId</n></r></bo></l><r><lit str=" FROM [" /></r></bo></l><r><n>$nameTableRelated</n></r></bo></l><r><lit str="] WHERE " /></r></bo></l><r><n>$namecolumnRelated</n></r></bo></l><r><lit str=" = " /></r></bo></l><r><n>$namecolumnRelatedParameter</n></r></bo></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="3018"><type typename="$commandType" /><i ldsrc="3018"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>cmdText</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><documentation short=" Set command parameters values&#xD;&#xA;" /><Decls><d name="parameter" ldsrc="3020"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="3020"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$namecolumnRelatedParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="3021"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><n>$nameColumnRelatedInt</n></r></a></e><e ldsrc="3022"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e><documentation short=" Create a Data Reader and load the related object&#xD;&#xA;" /><Decls><d name="reader" ldsrc="3025"><type ispointer="true"><dt typename="IDataReader" /><pi ref="true" /></type><i ldsrc="3025"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteReader</n></r></bo></l><args /></fc></e></i></d></Decls><e ldsrc="3026"><a><l><n>$entity</n></l><r><new><type typename="$entityType" /></new></r></a></e><if ldsrc="3028"><boolean><fc><l><bo op="m"><l><n>reader</n></l><r><n>Read</n></r></bo></l><args /></fc></boolean><ifbk ldsrc="3029,3033"><Decls><d name="id" ldsrc="3030"><type typename="$INTEGER$" /><i ldsrc="3030"><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></e></i></d></Decls><e ldsrc="3031"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e><e ldsrc="3032"><a><l><n>$entity</n></l><r><cast><e><fc><l><n>Load</n></l><args><e><n>id</n></e><e><n>scope</n></e></args></fc></e><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></cast></r></a></e></ifbk><else ldsrc="3034"><e ldsrc="3036"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e></else></if></trybk><finalybk ldsrc="3040,3046"><documentation short=" Close connection if initiated by me&#xD;&#xA;" /><if ldsrc="3042"><boolean><n>closeConnection</n></boolean><ifbk ldsrc="3043,3045"><e ldsrc="3044"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if></finalybk></try><documentation short=" Return the related object&#xD;&#xA;" /><return ldsrc="3048,3048"><n>$entity</n></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="3053"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="3053"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="3054"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="3054,3056"><e ldsrc="3055"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadByFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><documentation short=" Genera la funcion LoadBy para cardinalidad muchos a uno y uno a uno.&#xD;&#xA;" /><Function name="GenerateLoadBy" internalname="GenerateLoadBy#65" access="public" storage="static" ldsrc="3059,3059"><Parameters><P name="modelName" number="1"><type typename="$VOID$" ftype="iname" typeStr="$VOID$" ldsrc="3059" /></P><P name="relation" number="2"><type ispointer="true" typeStr="^_UtnEmall.Utils.Relation" ldsrc="3059"><dt typename="Relation" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="3059,3175"><Decls><d name="entityList" ldsrc="3060"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="3060"><e><new><type typename="XplIName" /><init ldsrc="3060"><list><e><bo><l><fc><l><n>ToLowerCamelCase</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></l><r><lit str="List" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="nameId" ldsrc="3061"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="3061"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameTable" ldsrc="3063"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="3063"><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="nameIdParameter" ldsrc="3064"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="3064"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="namecolumnRelated" ldsrc="3066"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="3066"><e><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><Decls><d name="nameColumnRelatedInt" ldsrc="3067"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="3067"><e><new><type typename="XplIName" /><init ldsrc="3067"><list><e><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="namecolumnRelatedParameter" ldsrc="3068"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="3068"><e><bo><l><lit str="@id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></i></d></Decls><if ldsrc="3070"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="3071,3074"><e ldsrc="3072"><a><l><n>namecolumnRelated</n></l><r><bo><l><lit str="id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>parentName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></r></a></e><e ldsrc="3073"><a><l><n>namecolumnRelatedParameter</n></l><r><bo><l><lit str="@id" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>parentName</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></r></a></e></ifbk></if><Decls><d name="propertyName" ldsrc="3076"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="3076"><e><bo op="m"><l><n>relation</n></l><r><n>fieldName</n></r></bo></e></i></d></Decls><Decls><d name="className" ldsrc="3078"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="3078"><e><new><type typename="XplIName" /><init ldsrc="3078"><list><e><bo><l><bo><l><lit str="LoadBy" /></l><r><bo op="m"><l><bo op="m"><l><n>relation</n></l><r><n>referencedType</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="Collection" /></r></bo></e></list></init></new></e></i></d></Decls><documentation short="Tipo para lista&#xD;&#xA;" /><Decls><d name="listOfTypeName" ldsrc="3081"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="3081"><e><new><type typename="XplIName" /><init ldsrc="3081"><list><e><bo><l><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="Entity" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entityType" ldsrc="3082"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="3082"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="3083"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><Decls><d name="listOfType" ldsrc="3084"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="3084"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="3085"><fc><l><bo op="m"><l><n>listOfType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo op="m"><l><n>listOfTypeName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e><Decls><d name="loadByFunction" ldsrc="3087"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="3087"><e><writecode ldsrc="3087"><classmembers><e ldsrc="3088"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTypeName</n></e><e><t ispointer="true"><dt typename="$entityType" /><pi ref="true" /></t></e></args></fc></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Load a list of $entityType$ from database by $nameColumnRelatedInt$. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$nameColumnRelatedInt$&quot;&gt;Foreing key column&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;scope&quot;&gt;Internal data structure to avoid circular reference problems&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;List of $entityType$&lt;/returns&gt;&#xD;&#xA;" /><Function name="$className" access="public" ldsrc="3096,3096"><Parameters><P name="$nameColumnRelatedInt" number="1"><type typename="$INTEGER$" ldsrc="3096" /></P><P name="scope" number="2"><type ispointer="true" ldsrc="3096"><dt typename="DictionaryOfStringIEntity" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="3097,3149"><Decls><d name="$entityList" ldsrc="3098"><type ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></type></d></Decls><Decls><d name="closeConnection" ldsrc="3099"><type typename="$BOOLEAN$" /><i ldsrc="3099"><e><lit str="false" type="bool" /></e></i></d></Decls><try ldsrc="3100"><trybk ldsrc="3101,3133"><documentation short=" Create a new connection&#xD;&#xA;" /><if ldsrc="3103"><boolean><bo op="OR"><l><bo op="EQ"><l><n>dbConnection</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="EQ"><l><fc><l><bo op="m"><l><bo op="m"><l><n>dbConnection</n></l><r><n>State</n></r></bo></l><r><n>CompareTo</n></r></bo></l><args><e><n>DotNET::System::Data::ConnectionState::Closed</n></e></args></fc></l><r><lit str="0" type="integer" /></r></bo></r></bo></boolean><ifbk ldsrc="3104,3108"><e ldsrc="3105"><a><l><n>closeConnection</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="3106"><a><l><n>dbConnection</n></l><r><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewConnection</n></r></bo></l><args /></fc></r></a></e><e ldsrc="3107"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Open</n></r></bo></l><args /></fc></e></ifbk></if><documentation short=" Create a command&#xD;&#xA;" /><Decls><d name="cmdText" ldsrc="3110"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="3110"><e><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="SELECT " /></l><r><n>$nameId</n></r></bo></l><r><lit str=" FROM [" /></r></bo></l><r><n>$nameTable</n></r></bo></l><r><lit str="] WHERE " /></r></bo></l><r><n>$namecolumnRelated</n></r></bo></l><r><lit str=" = " /></r></bo></l><r><n>$namecolumnRelatedParameter</n></r></bo></e></i></d></Decls><Decls><d name="sqlCommand" ldsrc="3111"><type typename="$commandType" /><i ldsrc="3111"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewCommand</n></r></bo></l><args><e><n>cmdText</n></e><e><n>dbConnection</n></e><e><n>dbTransaction</n></e></args></fc></e></i></d></Decls><documentation short=" Set command parameters values&#xD;&#xA;" /><Decls><d name="parameter" ldsrc="3113"><type ispointer="true"><dt typename="$parameterType" /><pi ref="true" /></type><i ldsrc="3113"><e><fc><l><bo op="m"><l><n>dataAccess</n></l><r><n>GetNewDataParameter</n></r></bo></l><args><e><n>$namecolumnRelatedParameter</n></e><e><n>DbType::Int32</n></e></args></fc></e></i></d></Decls><e ldsrc="3114"><a><l><bo op="m"><l><n>parameter</n></l><r><n>Value</n></r></bo></l><r><n>$nameColumnRelatedInt</n></r></a></e><e ldsrc="3115"><fc><l><bo op="m"><l><bo op="m"><l><n>sqlCommand</n></l><r><n>Parameters</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>parameter</n></e></args></fc></e><documentation short=" Create a DataReader&#xD;&#xA;" /><Decls><d name="reader" ldsrc="3118"><type ispointer="true"><dt typename="IDataReader" /><pi ref="true" /></type><i ldsrc="3118"><e><fc><l><bo op="m"><l><n>sqlCommand</n></l><r><n>ExecuteReader</n></r></bo></l><args /></fc></e></i></d></Decls><e ldsrc="3119"><a><l><n>$entityList</n></l><r><new><type typename="$listOfType" /></new></r></a></e><documentation short=" Load Ids of related objects into a list of int&#xD;&#xA;" /><Decls><d name="listId" ldsrc="3121"><type typename="ListInt" /><i ldsrc="3121"><e><new><type typename="ListInt" /></new></e></i></d></Decls><while ldsrc="3122"><boolean><fc><l><bo op="m"><l><n>reader</n></l><r><n>Read</n></r></bo></l><args /></fc></boolean><dobk ldsrc="3123,3125"><e ldsrc="3124"><fc><l><bo op="m"><l><n>listId</n></l><r><n>Add</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>reader</n></l><r><n>GetInt32</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></fc></e></args></fc></e></dobk></while><e ldsrc="3126"><fc><l><bo op="m"><l><n>reader</n></l><r><n>Close</n></r></bo></l><args /></fc></e><documentation short=" Load related objects and add to collection&#xD;&#xA;" /><for ldsrc="3129,3129"><init><dl><d name="id" ldsrc="3129"><type typename="$INTEGER$" /></d></dl></init><condition><n>listId</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="3130,3132"><e ldsrc="3131"><fc><l><bo op="m"><l><n>$entityList</n></l><r><n>Add</n></r></bo></l><args><e><fc><l><n>Load</n></l><args><e><n>id</n></e><e><n>scope</n></e></args></fc></e></args></fc></e></forblock></for></trybk><catchbk><init ldsrc="3134"><d name="dbException" ldsrc="3134"><type ispointer="true"><dt typename="DbException" /><pi ref="true" /></type></d></init><bk ldsrc="3135,3138"><documentation short=" Rethrow as custom exception&#xD;&#xA;" /><throw ldsrc="3137,3137"><new><type typename="UtnEmallDataAccessException" /><init ldsrc="3137"><list><e><bo op="m"><l><n>dbException</n></l><r><n>Message</n></r></bo></e><e><n>dbException</n></e></list></init></new></throw></bk></catchbk><finalybk ldsrc="3140,3146"><documentation short=" Close connection if initiated be me&#xD;&#xA;" /><if ldsrc="3142"><boolean><n>closeConnection</n></boolean><ifbk ldsrc="3143,3145"><e ldsrc="3144"><fc><l><bo op="m"><l><n>dbConnection</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if></finalybk></try><documentation short=" Return related objects list&#xD;&#xA;" /><return ldsrc="3148,3148"><n>$entityList</n></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><Decls><d name="target" ldsrc="3153"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="3153"><e><fc><l><n>GetDataAccessClass</n></l><args><e><bo op="m"><l><n>modelName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e></i></d></Decls><if ldsrc="3154"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="3154,3156"><e ldsrc="3155"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadByFunction</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if><Decls><d name="loadByFunctionOverWrite" ldsrc="3158"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="3158"><e><writecode ldsrc="3158"><classmembers><e ldsrc="3159"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$listOfTypeName</n></e><e><t ispointer="true"><dt typename="$entityType" /><pi ref="true" /></t></e></args></fc></e><documentation short=" &lt;summary&gt;&#xD;&#xA; Function to Load a list of $entityType$ from database by $nameColumnRelatedInt$. &#xD;&#xA; &lt;/summary&gt;&#xD;&#xA; &lt;param name=&quot;$nameColumnRelatedInt$&quot;&gt;Foreing key column&lt;/param&gt;&#xD;&#xA; &lt;returns&gt;IList of $entityType$&lt;/returns&gt;&#xD;&#xA;" /><Function name="$className" access="public" ldsrc="3166,3166"><Parameters><P name="$nameColumnRelatedInt" number="1"><type typename="$INTEGER$" ldsrc="3166" /></P></Parameters><ReturnType ispointer="true"><dt typename="$listOfType" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="3167,3169"><return ldsrc="3168,3168"><fc><l><n>$className</n></l><args><e><n>$nameColumnRelatedInt</n></e><e><lit str="0" type="null" /></e></args></fc></return></FunctionBody></Function></classmembers></writecode></e></i></d></Decls><if ldsrc="3172"><boolean><bo op="NOTEQ"><l><n>target</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="3172,3174"><e ldsrc="3173"><fc><l><n>XplNodeList::CopyNodesAtEnd</n></l><args><e><fc><l><bo op="m"><l><n>loadByFunctionOverWrite</n></l><r><n>Children</n></r></bo></l><args /></fc></e><e><fc><l><bo op="m"><l><n>target</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></FunctionBody></Function><Field name="clases" access="public" storage="static" ldsrc="3177,3177"><type ispointer="true" typeStr="^_DotNET.System.Collections.Hashtable"><dt typename="Hashtable" /><pi ref="true" /></type><i ldsrc="3177"><e><new><type typename="Hashtable" /></new></e></i></Field><Function name="GetDataAccessClass" internalname="GetDataAccessClass#67" access="public" storage="static" ldsrc="3178,3178"><Parameters><P name="modelName" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="3178"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplClass"><dt typename="XplClass" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="3178,3187"><if ldsrc="3179"><boolean><fc><l><bo op="m"><l><n>clases</n></l><r><n>ContainsKey</n></r></bo></l><args><e><bo><l><n>modelName</n></l><r><lit str="DataAccess" /></r></bo></e></args></fc></boolean><ifbk ldsrc="3179,3181"><return ldsrc="3180,3180"><cast><e><b><l><n>clases</n></l><args><e><bo><l><n>modelName</n></l><r><lit str="DataAccess" /></r></bo></e></args></b></e><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type></cast></return></ifbk><else ldsrc="3182"><Decls><d name="myClass" ldsrc="3183"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="3183"><e><cast><e><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>FindNode</n></r></bo></l><args><e><bo><l><bo><l><bo><l><lit str="/@XplClass[name='" /></l><r><n>modelName</n></r></bo></l><r><lit str="DataAccess" /></r></bo></l><r><lit str="']" /></r></bo></e></args></fc></e><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type></cast></e></i></d></Decls><e ldsrc="3184"><fc><l><bo op="m"><l><n>clases</n></l><r><n>Add</n></r></bo></l><args><e><bo><l><n>modelName</n></l><r><lit str="DataAccess" /></r></bo></e><e><n>myClass</n></e></args></fc></e><return ldsrc="3185,3185"><n>myClass</n></return></else></if></FunctionBody></Function><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><documentation short=" Factory class Relation para declarar Relaciones entre entitys&#xD;&#xA;" /><Class name="Relation" access="public" isfactory="true" ldsrc="3193,3206"><Field name="referencedType" access="public"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="fieldName" access="public"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="parentName" access="public" ldsrc="3195,3197"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="relationType" access="public" ldsrc="3199,3199"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="recursiveLoad" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="recursiveSave" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="deleteCascade" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="generateRelation" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="loadSubRelations" access="public" ldsrc="3201,3205"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="DeleteRestriction" access="public" isfactory="true" ldsrc="3208,3213"><Field name="referencedType" access="public"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="fieldName" access="public" ldsrc="3210,3211"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="messageToUser" access="public" ldsrc="3212,3212"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><documentation short=" Factory class para expresar tipos de relaciones entre entity.&#xD;&#xA;" /><Class name="RelationTypes" access="public" isfactory="true" ldsrc="3215,3221"><Field name="UnoAUno" access="public" storage="static" ldsrc="3217,3217"><type typename="$INTEGER$" typeStr="$INTEGER$" /><i ldsrc="3217"><e><lit str="1" type="integer" /></e></i></Field><Field name="UnoAMuchos" access="public" storage="static" ldsrc="3218,3218"><type typename="$INTEGER$" typeStr="$INTEGER$" /><i ldsrc="3218"><e><lit str="2" type="integer" /></e></i></Field><Field name="MuchosAUno" access="public" storage="static" ldsrc="3219,3219"><type typename="$INTEGER$" typeStr="$INTEGER$" /><i ldsrc="3219"><e><lit str="3" type="integer" /></e></i></Field><Field name="MuchosAMuchos" access="public" storage="static" ldsrc="3220,3220"><type typename="$INTEGER$" typeStr="$INTEGER$" /><i ldsrc="3220"><e><lit str="4" type="integer" /></e></i></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="Image" access="public" isfactory="true" ldsrc="0,3224"><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class></Namespace></DocumentBody></XPLDocument>