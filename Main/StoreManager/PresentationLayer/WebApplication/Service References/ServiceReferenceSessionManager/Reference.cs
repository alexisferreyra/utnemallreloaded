//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.ServiceReferenceSessionManager {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceSessionManager.ISessionManager")]
    public interface ISessionManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/UserLogOff", ReplyAction="http://tempuri.org/ISessionManager/UserLogOffResponse")]
        bool UserLogOff(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/ValidateCustomer", ReplyAction="http://tempuri.org/ISessionManager/ValidateCustomerResponse")]
        string ValidateCustomer(string userName, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/ValidateUser", ReplyAction="http://tempuri.org/ISessionManager/ValidateUserResponse")]
        string ValidateUser(string userName, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/GetCustomerFromSession", ReplyAction="http://tempuri.org/ISessionManager/GetCustomerFromSessionResponse")]
        UtnEmall.Server.EntityModel.CustomerEntity GetCustomerFromSession(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/GetUserFromSession", ReplyAction="http://tempuri.org/ISessionManager/GetUserFromSessionResponse")]
        UtnEmall.Server.EntityModel.UserEntity GetUserFromSession(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/IsCustomerSession", ReplyAction="http://tempuri.org/ISessionManager/IsCustomerSessionResponse")]
        bool IsCustomerSession(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/IsUserSession", ReplyAction="http://tempuri.org/ISessionManager/IsUserSessionResponse")]
        bool IsUserSession(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/StoreFromUserSession", ReplyAction="http://tempuri.org/ISessionManager/StoreFromUserSessionResponse")]
        UtnEmall.Server.EntityModel.StoreEntity StoreFromUserSession(string sessionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ISessionManagerChannel : WebApplication.ServiceReferenceSessionManager.ISessionManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SessionManagerClient : System.ServiceModel.ClientBase<WebApplication.ServiceReferenceSessionManager.ISessionManager>, WebApplication.ServiceReferenceSessionManager.ISessionManager {
        
        public SessionManagerClient() {
        }
        
        public SessionManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UserLogOff(string sessionId) {
            return base.Channel.UserLogOff(sessionId);
        }
        
        public string ValidateCustomer(string userName, string passwordHash) {
            return base.Channel.ValidateCustomer(userName, passwordHash);
        }
        
        public string ValidateUser(string userName, string passwordHash) {
            return base.Channel.ValidateUser(userName, passwordHash);
        }
        
        public UtnEmall.Server.EntityModel.CustomerEntity GetCustomerFromSession(string sessionId) {
            return base.Channel.GetCustomerFromSession(sessionId);
        }
        
        public UtnEmall.Server.EntityModel.UserEntity GetUserFromSession(string sessionId) {
            return base.Channel.GetUserFromSession(sessionId);
        }
        
        public bool IsCustomerSession(string sessionId) {
            return base.Channel.IsCustomerSession(sessionId);
        }
        
        public bool IsUserSession(string sessionId) {
            return base.Channel.IsUserSession(sessionId);
        }
        
        public UtnEmall.Server.EntityModel.StoreEntity StoreFromUserSession(string sessionId) {
            return base.Channel.StoreFromUserSession(sessionId);
        }
    }
}
