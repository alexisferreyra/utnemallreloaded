<XPLDocument><DocumentBody ldsrc="1,1,.\\MainTemplate\\MobileFormModelTemplates.dpp"><documentation short="&#xD;&#xA;Mobile Client Form Generator&#xD;&#xA;UtnEmall Project - 2008&#xD;&#xA;" /><Import ldsrc="6"><ns>Microsoft</ns><ns>platform=DotNET</ns><ns>ns=DotNET</ns><ns>assembly=mscorlib</ns></Import><Import ldsrc="7"><ns>System</ns><ns>platform=DotNET</ns><ns>ns=DotNET</ns><ns>assembly=mscorlib</ns></Import><Using ldsrc="8"><ns>Zoe</ns></Using><Using ldsrc="9"><ns>DotNET::System</ns></Using><Using ldsrc="10"><ns>DotNET::System::IO</ns></Using><Using ldsrc="11"><ns>DotNET::System::Collections</ns></Using><Using ldsrc="12"><ns>DotNET::LayerD::CodeDOM</ns></Using><Using ldsrc="13"><ns>DotNET::LayerD::ZOECompiler</ns></Using><Using ldsrc="14" lddata="ZOEC:BAD"><ns>DotNET::LayerD::ZoeCompiler</ns></Using><Using ldsrc="15"><ns>DotNET::LayerD::CodeDOM</ns></Using><Using ldsrc="16"><ns>DotNET::System::Collections::Generic</ns></Using><Using ldsrc="17"><ns>Zoe::Tools</ns></Using><Namespace name="UtnEmall::Utils" ldsrc="19,2185"><documentation short="	CLASE GENERADORA de Forms Visuales - ModelMobile&#xD;&#xA;		Clase factory para la construcción de interfaces Mobile&#xD;&#xA;		" /><Class name="ModelMobile" access="public" isfactory="true" ldsrc="27,2116"><Field name="storeID" access="public" storage="static" ldsrc="31,31"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="storeService" access="public" storage="static" ldsrc="32,32"><type ispointer="true" typeStr="^_UtnEmall.Utils.CustomerServiceData"><dt typename="CustomerServiceData" /><pi ref="true" /></type></Field><Function name="New" internalname="New#3" access="public" storage="static" ldsrc="34,34"><Parameters><P name="serviceData" number="1"><type typename="$BLOCK$" typeStr="$BLOCK$" ldsrc="34" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="34,53"><Decls><d name="interpreter" ldsrc="35"><type ispointer="true"><dt typename="MyInterpreter" /><pi ref="true" /></type><i ldsrc="35"><e><new><type typename="MyInterpreter" /></new></e></i></d></Decls><Decls><d name="data" ldsrc="36"><type ispointer="true"><dt typename="CustomerServiceData" /><pi ref="true" /></type><i ldsrc="36"><e><fc><l><bo op="m"><l><n>interpreter</n></l><r><n>ProcessCustomerServiceData</n></r></bo></l><args><e><n>serviceData</n></e></args></fc></e></i></d></Decls><e ldsrc="40"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>GenerateProxy</n></l><args><e><n>data</n></e></args></fc></e></args></fc></e><documentation short="Insertar llamada para creacion de capa de negocios duplicada localmente&#xD;&#xA;para usar cuando no estamos en linea&#xD;&#xA;" /><e ldsrc="50"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="45"><e><fc><l><n>UtnEmall::Utils::CustomServiceServer::New</n></l><args><e><lit str="true" type="bool" /></e></args><bk ldsrc="46,48"><e ldsrc="47"><n>$serviceData</n></e></bk></fc></e></writecode></e></args></fc></e><return ldsrc="52,52"><fc><l><n>Generate</n></l><args><e><n>data</n></e></args></fc></return></FunctionBody></Function><documentation short=" Define las clase Form (y Designer) para cada pantalla del modelo.&#xD;&#xA;" /><Function name="Generate" internalname="Generate#4" access="public" storage="static" ldsrc="56,56"><Parameters><P name="service" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.CustomerServiceData" ldsrc="56"><dt typename="CustomerServiceData" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="57,74"><e ldsrc="58"><a><l><n>storeID</n></l><r><bo op="m"><l><n>service</n></l><r><n>StoreID</n></r></bo></r></a></e><e ldsrc="59"><a><l><n>storeService</n></l><r><n>service</n></r></a></e><for ldsrc="61,61"><init><dl><d name="i" ldsrc="61"><type typename="$INTEGER$" /><i ldsrc="61"><e><lit str="0" type="integer" /></e></i></d></dl></init><condition><bo op="LS"><l><n>i</n></l><r><bo op="m"><l><bo op="m"><l><n>service</n></l><r><n>Forms</n></r></bo></l><r><n>Count</n></r></bo></r></bo></condition><repeat><e><uo op="inc"><u><n>i</n></u></uo></e></repeat><forblock ldsrc="62,66"><Decls><d name="form" ldsrc="63"><type ispointer="true"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type><i ldsrc="63"><e><cast><e><b><l><bo op="m"><l><n>service</n></l><r><n>Forms</n></r></bo></l><args><e><n>i</n></e></args></b></e><type ispointer="true"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type></cast></e></i></d></Decls><e ldsrc="64"><fc><l><n>CheckNumericRanges</n></l><args><e><uo op="aof"><u><n>form</n></u></uo></e></args></fc></e><e ldsrc="65"><fc><l><n>PreProcessFieldTemplates</n></l><args><e><uo op="aof"><u><n>form</n></u></uo></e></args></fc></e></forblock></for><for ldsrc="68,68"><init><dl><d name="form" ldsrc="68"><type ispointer="true"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>service</n></l><r><n>Forms</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="68,71"><Decls><d name="clase" ldsrc="69"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="69"><e><fc><l><n>GetDefaultClass</n></l><args><e><n>form</n></e><e><n>service</n></e></args></fc></e></i></d></Decls><e ldsrc="70"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>clase</n></e></args></fc></e></forblock></for><return ldsrc="73,73"><lit str="0" type="null" /></return></FunctionBody></Function><Function name="GetDefaultClass" internalname="GetDefaultClass#5" access="public" storage="static" ldsrc="76,77"><Parameters><P name="form" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="76"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type></P><P name="service" number="2"><type ispointer="true" typeStr="^_UtnEmall.Utils.CustomerServiceData" ldsrc="77"><dt typename="UtnEmall::Utils::CustomerServiceData" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplClass"><dt typename="XplClass" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="78,253"><Decls><d name="clase" ldsrc="79"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="79"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="formName" ldsrc="80"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="80"><e><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></e></i></d></Decls><Decls><d name="formCodeBlock" ldsrc="81"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="81"><e><fc><l><n>GenerateInitializeComponent</n></l><args><e><n>form</n></e></args></fc></e></i></d></Decls><Decls><d name="backButtonText" ldsrc="83"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="83"><e><lit str="Back" /></e></i></d></Decls><if ldsrc="84"><boolean><bo op="m"><l><n>form</n></l><r><n>StartForm</n></r></bo></boolean><ifbk ldsrc="85,87"><e ldsrc="86"><a><l><n>backButtonText</n></l><r><lit str="Exit" /></r></a></e></ifbk></if><Decls><d name="title" ldsrc="89"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="89"><e><bo op="m"><l><n>form</n></l><r><n>Title</n></r></bo></e></i></d></Decls><Decls><d name="sFormName" ldsrc="90"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="90"><e><bo op="m"><l><n>formName</n></l><r><n>Identifier</n></r></bo></e></i></d></Decls><Decls><d name="serviceID" ldsrc="91"><type typename="$INTEGER$" /><i ldsrc="91"><e><bo op="m"><l><n>service</n></l><r><n>ServiceID</n></r></bo></e></i></d></Decls><Decls><d name="idComponent" ldsrc="92"><type typename="$INTEGER$" /><i ldsrc="92"><e><bo op="m"><l><n>form</n></l><r><n>IdComponent</n></r></bo></e></i></d></Decls><Decls><d name="isStartForm" ldsrc="94"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="94"><e><writecode ldsrc="94"><e><lit str="false" type="bool" /></e></writecode></e></i></d></Decls><if ldsrc="96"><boolean><bo op="m"><l><n>form</n></l><r><n>StartForm</n></r></bo></boolean><ifbk ldsrc="96,98"><e ldsrc="97"><a><l><n>isStartForm</n></l><r><writecode ldsrc="97"><e><lit str="true" type="bool" /></e></writecode></r></a></e></ifbk></if><e ldsrc="246"><a><l><n>clase</n></l><r><writecode ldsrc="100"><class name="$formName" access="public" ldsrc="101,245"><Inherits><c name="DotNET::UtnEmall::Client::PresentationLayer::BaseForm" access="public" ldsrc="101" /></Inherits><Field name="components" ldsrc="104,104"><type ispointer="true"><dt typename="IContainer" /><pi ref="true" /></type><i ldsrc="104"><e><lit str="0" type="null" /></e></i></Field><Field name="mainMenu" ldsrc="105,105"><type ispointer="true"><dt typename="MainMenu" /><pi ref="true" /></type></Field><Field name="backMenu" ldsrc="106,106"><type ispointer="true"><dt typename="MenuItem" /><pi ref="true" /></type></Field><Field name="acceptMenu" ldsrc="107,107"><type ispointer="true"><dt typename="MenuItem" /><pi ref="true" /></type></Field><Field name="localDataEntity" ldsrc="108,108"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /><pi ref="true" /></type></Field><documentation short=" This item is for statistic information&#xD;&#xA;" /><Field name="formStart" ldsrc="110,110"><type typename="zoe::lang::DateTime" /></Field><Field name="header" ldsrc="111,111"><type ispointer="true"><dt typename="PictureBox" /><pi ref="true" /></type></Field><Field name="title" ldsrc="112,112"><type ispointer="true"><dt typename="Label" /><pi ref="true" /></type></Field><Field name="_idTable" ldsrc="113,113"><type typename="$INTEGER$" /></Field><Field name="_idRegister" ldsrc="114,114"><type typename="$INTEGER$" /></Field><Function name="backMenu_Click" ldsrc="116,116"><Parameters><P name="sender" number="1"><type ispointer="true" ldsrc="116"><dt typename="$OBJECT$" /><pi ref="true" /></type></P><P name="e" number="2"><type ispointer="true" ldsrc="116"><dt typename="EventArgs" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="117,121"><documentation short=" this.backMenu.remove_Click(new DotNET::System::EventHandler(&amp;this.backMenu_Click));&#xD;&#xA; this.acceptMenu.remove_Click(new DotNET::System::EventHandler(&amp;this.acceptMenu_Click));&#xD;&#xA;" /><e ldsrc="120"><fc><l><bo op="m"><l><n>this</n></l><r><n>Close</n></r></bo></l><args /></fc></e></FunctionBody></Function><Function name="acceptMenu_Click" ldsrc="123,123"><Parameters><P name="sender" number="1"><type ispointer="true" ldsrc="123"><dt typename="$OBJECT$" /><pi ref="true" /></type></P><P name="e" number="2"><type ispointer="true" ldsrc="123"><dt typename="EventArgs" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="124,127"><documentation short=" Same function as Enter key&#xD;&#xA;" /><e ldsrc="126"><fc><l><n>Form_KeyDown</n></l><args><e><lit str="0" type="null" /></e><e><new><type typename="KeyEventArgs" /><init ldsrc="126"><list><e><n>Keys::Enter</n></e></list></init></new></e></args></fc></e></FunctionBody></Function><Function name="Form_Closing" ldsrc="129,129"><Parameters><P name="sender" number="1"><type ispointer="true" ldsrc="129"><dt typename="$OBJECT$" /><pi ref="true" /></type></P><P name="e" number="2"><type ispointer="true" ldsrc="129"><dt typename="DotNET::System::ComponentModel::CancelEventArgs" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="130,151"><documentation short=" Run statistics operations&#xD;&#xA;" /><Decls><d name="stop" ldsrc="132"><type typename="zoe::lang::DateTime" /><i ldsrc="132"><e><n>zoe::lang::DateTime::Now</n></e></i></d></Decls><Decls><d name="userAction" ldsrc="134"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /><pi ref="true" /></type><i ldsrc="134"><e><new><type typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /></new></e></i></d></Decls><Decls><d name="userActionDataAccess" ldsrc="136"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /><pi ref="true" /></type><i ldsrc="136"><e><new><type typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /></new></e></i></d></Decls><documentation short=" Fill statistical data&#xD;&#xA;" /><e ldsrc="141"><a><l><bo op="m"><l><n>userAction</n></l><r><n>ActionType</n></r></bo></l><r><fc><l><n>DotNET::System::Convert::ToInt32</n></l><args><e><n>DotNET::UtnEmall::Client::PresentationLayer::StatisticsActionType::FormConsumption</n></e></args></fc></r></a></e><e ldsrc="142"><a><l><bo op="m"><l><n>userAction</n></l><r><n>Start</n></r></bo></l><r><n>formStart</n></r></a></e><e ldsrc="143"><a><l><bo op="m"><l><n>userAction</n></l><r><n>Stop</n></r></bo></l><r><n>stop</n></r></a></e><e ldsrc="144"><a><l><bo op="m"><l><n>userAction</n></l><r><n>IdComponent</n></r></bo></l><r><n>$idComponent</n></r></a></e><e ldsrc="145"><a><l><bo op="m"><l><n>userAction</n></l><r><n>IdService</n></r></bo></l><r><n>$serviceID</n></r></a></e><e ldsrc="146"><a><l><bo op="m"><l><n>userAction</n></l><r><n>IdRegister</n></r></bo></l><r><bo op="m"><l><n>this</n></l><r><n>_idRegister</n></r></bo></r></a></e><e ldsrc="147"><a><l><bo op="m"><l><n>userAction</n></l><r><n>IdTable</n></r></bo></l><r><bo op="m"><l><n>this</n></l><r><n>_idTable</n></r></bo></r></a></e><documentation short=" Save the current statistic&#xD;&#xA;" /><e ldsrc="150"><fc><l><bo op="m"><l><n>userActionDataAccess</n></l><r><n>Save</n></r></bo></l><args><e><n>userAction</n></e></args></fc></e></FunctionBody></Function><Property name="IsStartForm" access="public" storage="static" ldsrc="155"><type typename="$BOOLEAN$" /><body ldsrc="155,159"><Get ldsrc="156,158"><return ldsrc="157,157"><n>$isStartForm</n></return></Get></body></Property><Function name="$formName" access="public" ldsrc="160,160"><ReturnType /><FunctionBody ldsrc="160,162"><e ldsrc="161"><fc><l><n>InitializeComponent</n></l><args /></fc></e></FunctionBody></Function><Function name="$formName" access="public" ldsrc="163,163"><Parameters><P name="form" number="1"><type ispointer="true" ldsrc="163"><dt typename="DotNET::UtnEmall::Client::PresentationLayer::BaseForm" /><pi ref="true" /></type></P></Parameters><ReturnType /><FunctionBody ldsrc="164,166"><e ldsrc="165"><fc><l><n>InitializeComponent</n></l><args /></fc></e></FunctionBody><BaseInitializers><i className="base" ldsrc="163,163"><params><e><n>form</n></e></params></i></BaseInitializers></Function><Function name="InitializeComponent" access="public" ldsrc="168,168"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="168,244"><e ldsrc="169"><a><l><bo op="m"><l><n>this</n></l><r><n>localDataEntity</n></r></bo></l><r><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /></new></r></a></e><documentation short=" Statistic usage data&#xD;&#xA;" /><e ldsrc="171"><a><l><bo op="m"><l><n>this</n></l><r><n>formStart</n></r></bo></l><r><n>zoe::lang::DateTime::Now</n></r></a></e><e ldsrc="173"><a><l><bo op="m"><l><n>this</n></l><r><n>mainMenu</n></r></bo></l><r><new><type typename="MainMenu" /></new></r></a></e><e ldsrc="174"><a><l><bo op="m"><l><n>this</n></l><r><n>backMenu</n></r></bo></l><r><new><type typename="MenuItem" /></new></r></a></e><e ldsrc="175"><a><l><bo op="m"><l><n>this</n></l><r><n>acceptMenu</n></r></bo></l><r><new><type typename="MenuItem" /></new></r></a></e><e ldsrc="177"><fc><l><bo op="m"><l><n>this</n></l><r><n>SuspendLayout</n></r></bo></l><args /></fc></e><documentation short="&#xD;&#xA; mainMenu1&#xD;&#xA;&#xD;&#xA;" /><e ldsrc="181"><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>mainMenu</n></r></bo></l><r><n>MenuItems</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>this</n></l><r><n>backMenu</n></r></bo></e></args></fc></e><e ldsrc="182"><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>mainMenu</n></r></bo></l><r><n>MenuItems</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>this</n></l><r><n>acceptMenu</n></r></bo></e></args></fc></e><documentation short="&#xD;&#xA; backMenu&#xD;&#xA;&#xD;&#xA;" /><e ldsrc="186"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>backMenu</n></r></bo></l><r><n>Text</n></r></bo></l><r><n>$backButtonText</n></r></a></e><e ldsrc="187"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>backMenu</n></r></bo></l><r><n>add_Click</n></r></bo></l><args><e><new><type typename="DotNET::System::EventHandler" /><init ldsrc="187"><list><e><uo op="aof"><u><bo op="m"><l><n>this</n></l><r><n>backMenu_Click</n></r></bo></u></uo></e></list></init></new></e></args></fc></e><documentation short="&#xD;&#xA; acceptMenu&#xD;&#xA;&#xD;&#xA;" /><e ldsrc="191"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>acceptMenu</n></r></bo></l><r><n>Text</n></r></bo></l><r><lit str="Accept" /></r></a></e><e ldsrc="192"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>acceptMenu</n></r></bo></l><r><n>add_Click</n></r></bo></l><args><e><new><type typename="DotNET::System::EventHandler" /><init ldsrc="192"><list><e><uo op="aof"><u><bo op="m"><l><n>this</n></l><r><n>acceptMenu_Click</n></r></bo></u></uo></e></list></init></new></e></args></fc></e><documentation short="&#xD;&#xA; General Form properties&#xD;&#xA;&#xD;&#xA;" /><e ldsrc="196"><a><l><bo op="m"><l><n>this</n></l><r><n>WindowState</n></r></bo></l><r><n>FormWindowState::Normal</n></r></a></e><e ldsrc="197"><a><l><bo op="m"><l><n>this</n></l><r><n>AutoScaleMode</n></r></bo></l><r><n>AutoScaleMode::Dpi</n></r></a></e><e ldsrc="198"><a><l><bo op="m"><l><n>this</n></l><r><n>AutoScroll</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="200"><a><l><bo op="m"><l><n>this</n></l><r><n>KeyPreview</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="201"><a><l><bo op="m"><l><n>this</n></l><r><n>Menu</n></r></bo></l><r><bo op="m"><l><n>this</n></l><r><n>mainMenu</n></r></bo></r></a></e><e ldsrc="202"><a><l><bo op="m"><l><n>this</n></l><r><n>Name</n></r></bo></l><r><n>$sFormName</n></r></a></e><e ldsrc="203"><a><l><bo op="m"><l><n>this</n></l><r><n>Text</n></r></bo></l><r><n>$title</n></r></a></e><e ldsrc="204"><fc><l><bo op="m"><l><n>this</n></l><r><n>add_KeyDown</n></r></bo></l><args><e><new><type typename="KeyEventHandler" /><init ldsrc="204"><list><e><uo op="aof"><u><bo op="m"><l><n>this</n></l><r><n>Form_KeyDown</n></r></bo></u></uo></e></list></init></new></e></args></fc></e><e ldsrc="205"><fc><l><bo op="m"><l><n>this</n></l><r><n>add_Closing</n></r></bo></l><args><e><new><type typename="DotNET::System::ComponentModel::CancelEventHandler" /><init ldsrc="205"><list><e><uo op="aof"><u><bo op="m"><l><n>this</n></l><r><n>Form_Closing</n></r></bo></u></uo></e></list></init></new></e></args></fc></e><e ldsrc="207"><a><l><bo op="m"><l><n>this</n></l><r><n>header</n></r></bo></l><r><new><type typename="PictureBox" /></new></r></a></e><e ldsrc="208"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>header</n></r></bo></l><r><n>Top</n></r></bo></l><r><lit str="0" type="integer" /></r></a></e><e ldsrc="209"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>header</n></r></bo></l><r><n>Image</n></r></bo></l><r><new><type typename="Bitmap" /><init ldsrc="209"><list><e><bo><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::AppPath</n></l><r><lit str="images\\\\\\header.png" /></r></bo></e></list></init></new></r></a></e><Decls><d name="titleFont" ldsrc="211"><type ispointer="true"><dt typename="Font" /><pi ref="true" /></type><i ldsrc="211"><e><new><type typename="Font" /><init ldsrc="211"><list><e><lit str="Tahoma" /></e><e><lit str="12" type="integer" /></e><e><n>FontStyle::Bold</n></e></list></init></new></e></i></d></Decls><e ldsrc="212"><a><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><new><type typename="Label" /></new></r></a></e><e ldsrc="213"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>BackColor</n></r></bo></l><r><fc><l><n>Color::FromArgb</n></l><args><e><cast><e><cast><e><lit str="120" type="integer" /></e><type typename="$BYTE$" /></cast></e><type typename="$INTEGER$" /></cast></e><e><cast><e><cast><e><lit str="137" type="integer" /></e><type typename="$BYTE$" /></cast></e><type typename="$INTEGER$" /></cast></e><e><cast><e><cast><e><lit str="145" type="integer" /></e><type typename="$BYTE$" /></cast></e><type typename="$INTEGER$" /></cast></e></args></fc></r></a></e><e ldsrc="214"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>ForeColor</n></r></bo></l><r><n>Color::White</n></r></a></e><e ldsrc="215"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>Font</n></r></bo></l><r><n>titleFont</n></r></a></e><e ldsrc="216"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>Name</n></r></bo></l><r><lit str="title" /></r></a></e><e ldsrc="217"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>Text</n></r></bo></l><r><n>$title</n></r></a></e><Decls><d name="height" ldsrc="219"><type typename="$INTEGER$" /><i ldsrc="219"><e><bo op="m"><l><bo op="m"><l><n>Screen::PrimaryScreen</n></l><r><n>WorkingArea</n></r></bo></l><r><n>Height</n></r></bo></e></i></d></Decls><Decls><d name="width" ldsrc="220"><type typename="$INTEGER$" /><i ldsrc="220"><e><bo op="m"><l><bo op="m"><l><n>Screen::PrimaryScreen</n></l><r><n>WorkingArea</n></r></bo></l><r><n>Width</n></r></bo></e></i></d></Decls><documentation short="int headerHeight = (int)(width / 5.4);&#xD;&#xA;" /><Decls><d name="headerHeight" ldsrc="222"><type typename="$INTEGER$" /><i ldsrc="222"><e><cast><e><bo op="div"><l><n>width</n></l><r><lit str="3.4" type="real" /></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><documentation short="int stepBase = (int)(height / 11.0);&#xD;&#xA;" /><Decls><d name="stepBase" ldsrc="224"><type typename="$INTEGER$" /><i ldsrc="224"><e><cast><e><bo op="div"><l><n>height</n></l><r><lit str="8.0" type="real" /></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="step" ldsrc="225"><type typename="$INTEGER$" /><i ldsrc="225"><e><n>headerHeight</n></e></i></d></Decls><documentation short="this.Height = height;&#xD;&#xA;this.Width = width;&#xD;&#xA;" /><e ldsrc="230"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>Left</n></r></bo></l><r><lit str="0" type="integer" /></r></a></e><e ldsrc="231"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>Width</n></r></bo></l><r><n>width</n></r></a></e><e ldsrc="232"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></l><r><n>Top</n></r></bo></l><r><bo op="div"><l><n>headerHeight</n></l><r><lit str="3" type="integer" /></r></bo></r></a></e><e ldsrc="234"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>header</n></r></bo></l><r><n>Width</n></r></bo></l><r><n>width</n></r></a></e><e ldsrc="235"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>header</n></r></bo></l><r><n>Height</n></r></bo></l><r><n>headerHeight</n></r></a></e><e ldsrc="237"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>this</n></l><r><n>title</n></r></bo></e></args></fc></e><e ldsrc="238"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>this</n></l><r><n>header</n></r></bo></e></args></fc></e><documentation short="$isStartForm;&#xD;&#xA;" /><e ldsrc="242"><n>$formCodeBlock</n></e><e ldsrc="243"><fc><l><bo op="m"><l><n>this</n></l><r><n>ResumeLayout</n></r></bo></l><args><e><lit str="false" type="bool" /></e></args></fc></e></FunctionBody></Function></class></writecode></r></a></e><e ldsrc="248"><fc><l><n>GenerateDeclarationsBlock</n></l><args><e><n>form</n></e><e><n>clase</n></e></args></fc></e><e ldsrc="249"><fc><l><n>GenerateLoadingDataFunctions</n></l><args><e><n>form</n></e><e><n>clase</n></e><e><n>service</n></e></args></fc></e><e ldsrc="250"><fc><l><n>GenerateAcceptEvent</n></l><args><e><n>form</n></e><e><bo op="m"><l><n>service</n></l><r><n>Relations</n></r></bo></e><e><n>clase</n></e><e><n>service</n></e></args></fc></e><return ldsrc="252,252"><n>clase</n></return></FunctionBody></Function><documentation short="Generates all the form specific declarations and controls&#xD;&#xA;" /><Function name="GenerateDeclarationsBlock" internalname="GenerateDeclarationsBlock#6" access="public" storage="static" ldsrc="256,256"><Parameters><P name="form" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="256"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type></P><P name="clase" number="2"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplClass" ldsrc="256"><dt typename="XplClass" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="256,324"><Decls><d name="declarations" ldsrc="257"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="257"><e><new><type typename="XplClassMembersList" /></new></e></i></d></Decls><documentation short="En el caso de ser un Form de Menu&#xD;&#xA;" /><if ldsrc="260"><boolean><bo op="OR"><l><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="List" /></r></bo></l><r><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Menu" /></r></bo></r></bo></boolean><ifbk ldsrc="260,270"><Decls><d name="listClassName" ldsrc="261"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="261"><e><bo op="m"><l><n>form</n></l><r><n>ListClassName</n></r></bo></e></i></d></Decls><e ldsrc="266"><a><l><n>declarations</n></l><r><writecode ldsrc="263"><classmembers><Field name="contentListView" ldsrc="265,265"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::UserControls::ListUserControl" /><pi ref="true" /></type></Field></classmembers></writecode></r></a></e><documentation short=" Custom item class (for a custom list)&#xD;&#xA;" /><e ldsrc="269"><fc><l><n>GenerateCustomListClass</n></l><args><e><n>listClassName</n></e><e><n>form</n></e></args></fc></e></ifbk></if><documentation short="Formulario tipo ShowData&#xD;&#xA;" /><if ldsrc="273"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Enter" /></r></bo></boolean><ifbk ldsrc="273,285"><Decls><d name="fieldName" ldsrc="274"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="274"><e><new><type typename="XplIName" /><init ldsrc="274"><list><e><bo op="m"><l><n>form</n></l><r><n>EnterDataFieldName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="controlType" ldsrc="275"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="275"><e><bo op="m"><l><n>form</n></l><r><n>EnterDataControlType</n></r></bo></e></i></d></Decls><documentation short="Determinar el tipo de retorno&#xD;&#xA;" /><e ldsrc="284"><a><l><n>declarations</n></l><r><writecode ldsrc="278"><classmembers><Field name="formIcon" ldsrc="280,280"><type ispointer="true"><dt typename="PictureBox" /><pi ref="true" /></type></Field><Field name="$fieldName" ldsrc="281,281"><type ispointer="true"><dt typename="$controlType" /><pi ref="true" /></type></Field><Field name="lblDescription" ldsrc="282,282"><type ispointer="true"><dt typename="Label" /><pi ref="true" /></type></Field><Field name="culture" ldsrc="283,283"><type ispointer="true"><dt typename="DotNET::System::Globalization::CultureInfo" /><pi ref="true" /></type></Field></classmembers></writecode></r></a></e></ifbk></if><documentation short="Formulario tipo ShowData&#xD;&#xA;" /><if ldsrc="288"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Show" /></r></bo></boolean><ifbk ldsrc="289,321"><Decls><d name="templates" ldsrc="290"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="290"><e><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></e></i></d></Decls><for ldsrc="291,291"><init><dl><d name="field" ldsrc="291"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><n>templates</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="292,320"><Decls><d name="fieldType" ldsrc="293"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="293"><e><new><type typename="XplIName" /><init ldsrc="293"><list><e><lit str="Label" /></e></list></init></new></e></i></d></Decls><Decls><d name="fieldName" ldsrc="294"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="294"><e><bo op="m"><l><n>field</n></l><r><n>FieldMemberName</n></r></bo></e></i></d></Decls><Decls><d name="propertyName" ldsrc="295"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="295"><e><bo op="m"><l><n>field</n></l><r><n>PropertyName</n></r></bo></e></i></d></Decls><if ldsrc="297"><boolean><bo op="EQ"><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><lit str="Image" /></r></bo></boolean><ifbk ldsrc="298,300"><e ldsrc="299"><a><l><n>fieldType</n></l><r><new><type typename="XplIName" /><init ldsrc="299"><list><e><lit str="PictureBox" /></e></list></init></new></r></a></e></ifbk></if><e ldsrc="319"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>declarations</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="303"><classmembers><Field name="$fieldName" ldsrc="305,305"><type ispointer="true"><dt typename="$fieldType" /><pi ref="true" /></type></Field><Property name="$propertyName" access="public" ldsrc="307"><type ispointer="true"><dt typename="$fieldType" /><pi ref="true" /></type><body ldsrc="308,317"><Set ldsrc="310,312"><e ldsrc="311"><a><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>value</n></r></a></e></Set><Get ldsrc="314,316"><return ldsrc="315,315"><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></return></Get></body></Property></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></forblock></for></ifbk></if><e ldsrc="323"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>clase</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>declarations</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></FunctionBody></Function><documentation short="Genera el método InitializeComponent para cada formulario&#xD;&#xA;Su responsabilidad es establecer la disposición de cada uno&#xD;&#xA;de los componentes visuales&#xD;&#xA;" /><Function name="GenerateInitializeComponent" internalname="GenerateInitializeComponent#7" access="public" storage="static" ldsrc="329,329"><Parameters><P name="form" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="329"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplFunctionBody"><dt typename="XplFunctionBody" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="329,454"><Decls><d name="formBlockCode" ldsrc="330"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="330"><e><lit str="0" type="null" /></e></i></d></Decls><documentation short=" En el caso de ser un Menu&#xD;&#xA;" /><if ldsrc="333"><boolean><bo op="OR"><l><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="List" /></r></bo></l><r><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Menu" /></r></bo></r></bo></boolean><ifbk ldsrc="333,345"><e ldsrc="344"><a><l><n>formBlockCode</n></l><r><writecode ldsrc="334"><bk><e ldsrc="335"><a><l><bo op="m"><l><n>this</n></l><r><n>contentListView</n></r></bo></l><r><new><type typename="DotNET::UtnEmall::Client::UserControls::ListUserControl" /><init ldsrc="335"><list><e><n>this</n></e></list></init></new></r></a></e><e ldsrc="336"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>contentListView</n></r></bo></l><r><n>AutoScroll</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="337"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>contentListView</n></r></bo></l><r><n>Width</n></r></bo></l><r><n>width</n></r></a></e><e ldsrc="338"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>contentListView</n></r></bo></l><r><n>Height</n></r></bo></l><r><bo op="min"><l><bo op="m"><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::VisibleScreenSize</n></l><r><n>Height</n></r></bo></l><r><n>headerHeight</n></r></bo></r></a></e><documentation short="this.contentListView.Height = height - headerHeight - 26;&#xD;&#xA;" /><e ldsrc="340"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>contentListView</n></r></bo></l><r><n>SelectedItemColor</n></r></bo></l><r><fc><l><n>Color::FromArgb</n></l><args><e><lit str="192" type="integer" /></e><e><lit str="224" type="integer" /></e><e><lit str="255" type="integer" /></e></args></fc></r></a></e><e ldsrc="341"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>contentListView</n></r></bo></l><r><n>Top</n></r></bo></l><r><bo op="m"><l><n>header</n></l><r><n>Bottom</n></r></bo></r></a></e><e ldsrc="342"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>this</n></l><r><n>contentListView</n></r></bo></e></args></fc></e><e ldsrc="343"><fc><l><n>LoadItems</n></l><args /></fc></e></bk></writecode></r></a></e></ifbk></if><documentation short="Formulario tipo EnterData&#xD;&#xA;" /><if ldsrc="348"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Enter" /></r></bo></boolean><ifbk ldsrc="348,429"><Decls><d name="sFieldName" ldsrc="349"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="349"><e><bo op="m"><l><n>form</n></l><r><n>EnterDataFieldName</n></r></bo></e></i></d></Decls><Decls><d name="sDescription" ldsrc="350"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="350"><e><bo op="m"><l><n>form</n></l><r><n>EnterDataDescription</n></r></bo></e></i></d></Decls><Decls><d name="fieldName" ldsrc="351"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="351"><e><new><type typename="XplIName" /><init ldsrc="351"><list><e><n>sFieldName</n></e></list></init></new></e></i></d></Decls><Decls><d name="controlType" ldsrc="352"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="352"><e><bo op="m"><l><n>form</n></l><r><n>EnterDataControlType</n></r></bo></e></i></d></Decls><documentation short=" Set the textbox align accordig to the datatype&#xD;&#xA;" /><Decls><d name="textAlign" ldsrc="355"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="355"><e><writecode ldsrc="355"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>TextAlign</n></r></bo></l><r><n>HorizontalAlignment::Right</n></r></a></e></writecode></e></i></d></Decls><Decls><d name="multiLine" ldsrc="356"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="356"><e><writecode ldsrc="356"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Multiline</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e></writecode></e></i></d></Decls><Decls><d name="checkBoxMessage" ldsrc="357"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="357"><e><writecode ldsrc="357"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Text</n></r></bo></l><r><lit /></r></a></e></writecode></e></i></d></Decls><switch ldsrc="359"><e><bo op="m"><l><n>form</n></l><r><n>EnterDataValueType</n></r></bo></e><case ldsrc="361"><e><lit str="2" type="integer" /></e><bk><e ldsrc="362"><a><l><n>textAlign</n></l><r><writecode ldsrc="362"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>TextAlign</n></r></bo></l><r><n>HorizontalAlignment::Right</n></r></a></e></writecode></r></a></e><jump ldsrc="363" /></bk></case><case ldsrc="364"><e><lit str="4" type="integer" /></e><bk><e ldsrc="365"><a><l><n>checkBoxMessage</n></l><r><writecode ldsrc="365"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Text</n></r></bo></l><r><lit str="Yes / No" /></r></a></e></writecode></r></a></e><e ldsrc="366"><a><l><n>textAlign</n></l><r><writecode ldsrc="366"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Checked</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e></writecode></r></a></e><e ldsrc="367"><a><l><n>multiLine</n></l><r><writecode ldsrc="367"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Checked</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e></writecode></r></a></e><jump ldsrc="368" /></bk></case><case ldsrc="369"><e><empty /></e><bk><e ldsrc="370"><a><l><n>textAlign</n></l><r><writecode ldsrc="370"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>TextAlign</n></r></bo></l><r><n>HorizontalAlignment::Left</n></r></a></e></writecode></r></a></e><jump ldsrc="371" /></bk></case></switch><e ldsrc="428"><a><l><n>formBlockCode</n></l><r><writecode ldsrc="374"><bk><Decls><d name="labelSize" ldsrc="375"><type typename="$INTEGER$" /><i ldsrc="375"><e><bo op="div"><l><n>width</n></l><r><lit str="4" type="integer" /></r></bo></e></i></d></Decls><e ldsrc="377"><a><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><new><type typename="PictureBox" /></new></r></a></e><e ldsrc="378"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><n>Image</n></r></bo></l><r><new><type typename="Bitmap" /><init ldsrc="378"><list><e><bo><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::AppPath</n></l><r><lit str="images\\\\\\ico_services.png" /></r></bo></e></list></init></new></r></a></e><e ldsrc="379"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><n>Width</n></r></bo></l><r><lit str="20" type="integer" /></r></a></e><e ldsrc="380"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><n>Height</n></r></bo></l><r><lit str="20" type="integer" /></r></a></e><e ldsrc="381"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><n>Top</n></r></bo></l><r><bo><l><bo op="m"><l><n>header</n></l><r><n>Bottom</n></r></bo></l><r><lit str="10" type="integer" /></r></bo></r></a></e><e ldsrc="382"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><n>Left</n></r></bo></l><r><bo op="min"><l><bo op="div"><l><n>labelSize</n></l><r><lit str="2" type="integer" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><n>Width</n></r></bo></r></bo></r></a></e><e ldsrc="383"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>formIcon</n></r></bo></l><r><n>SizeMode</n></r></bo></l><r><n>PictureBoxSizeMode::StretchImage</n></r></a></e><e ldsrc="384"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>formIcon</n></e></args></fc></e><Decls><d name="descriptionLocation" ldsrc="386"><type typename="Point" /><i ldsrc="386"><e><new><type typename="Point" /><init ldsrc="386"><list><e><bo op="div"><l><n>labelSize</n></l><r><lit str="2" type="integer" /></r></bo></e><e><bo op="m"><l><n>formIcon</n></l><r><n>Top</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="descriptionSize" ldsrc="387"><type typename="Size" /><i ldsrc="387"><e><new><type typename="Size" /><init ldsrc="387"><list><e><bo op="mul"><l><n>labelSize</n></l><r><lit str="2" type="integer" /></r></bo></e><e><bo op="div"><l><bo op="min"><l><n>height</n></l><r><n>headerHeight</n></r></bo></l><r><lit str="2" type="integer" /></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="389"><a><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><new><type typename="$controlType" /></new></r></a></e><e ldsrc="390"><a><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><new><type typename="Label" /></new></r></a></e><documentation short="&#xD;&#xA; lblDescription&#xD;&#xA;&#xD;&#xA;" /><e ldsrc="395"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><n>Location</n></r></bo></l><r><n>descriptionLocation</n></r></a></e><e ldsrc="396"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><n>Size</n></r></bo></l><r><n>descriptionSize</n></r></a></e><e ldsrc="397"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><n>Name</n></r></bo></l><r><lit str="lblDescription" /></r></a></e><e ldsrc="398"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><n>Text</n></r></bo></l><r><n>$sDescription</n></r></a></e><e ldsrc="399"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><n>TextAlign</n></r></bo></l><r><n>ContentAlignment::TopCenter</n></r></a></e><Decls><d name="labelFont" ldsrc="400"><type ispointer="true"><dt typename="Font" /><pi ref="true" /></type><i ldsrc="400"><e><new><type typename="Font" /><init ldsrc="400"><list><e><lit str="Tahoma" /></e><e><lit str="12" type="integer" /></e><e><n>FontStyle::Bold</n></e></list></init></new></e></i></d></Decls><e ldsrc="401"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><n>Font</n></r></bo></l><r><n>labelFont</n></r></a></e><e ldsrc="402"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>lblDescription</n></r></bo></l><r><n>Width</n></r></bo></l><r><bo op="min"><l><n>width</n></l><r><bo op="m"><l><n>formIcon</n></l><r><n>Right</n></r></bo></r></bo></r></a></e><Decls><d name="location" ldsrc="404"><type typename="Point" /><i ldsrc="404"><e><new><type typename="Point" /><init ldsrc="404"><list><e><n>labelSize</n></e><e><bo op="m"><l><n>lblDescription</n></l><r><n>Bottom</n></r></bo></e></list></init></new></e></i></d></Decls><documentation short="Size size = new Size(labelSize*2, (height-headerHeight)/3);&#xD;&#xA;" /><Decls><d name="size" ldsrc="406"><type typename="Size" /><i ldsrc="406"><e><new><type typename="Size" /><init ldsrc="406"><list><e><bo op="mul"><l><n>labelSize</n></l><r><lit str="2" type="integer" /></r></bo></e><e><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Height</n></r></bo></e></list></init></new></e></i></d></Decls><documentation short="&#xD;&#xA; tbxData&#xD;&#xA;&#xD;&#xA;" /><e ldsrc="410"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Location</n></r></bo></l><r><n>location</n></r></a></e><e ldsrc="411"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Size</n></r></bo></l><r><n>size</n></r></a></e><e ldsrc="412"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Name</n></r></bo></l><r><n>$sFieldName</n></r></a></e><e ldsrc="413"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>TabIndex</n></r></bo></l><r><lit str="3" type="integer" /></r></a></e><e ldsrc="414"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Font</n></r></bo></l><r><n>labelFont</n></r></a></e><e ldsrc="415"><n>$multiLine</n></e><e ldsrc="416"><n>$textAlign</n></e><e ldsrc="417"><n>$checkBoxMessage</n></e><e ldsrc="419"><a><l><bo op="m"><l><n>this</n></l><r><n>culture</n></r></bo></l><r><new><type typename="DotNET::System::Globalization::CultureInfo" /><init ldsrc="419"><list><e><lit str="fr-FR" /></e></list></init></new></r></a></e><documentation short="&#xD;&#xA; EnterSingleData&#xD;&#xA;&#xD;&#xA;this.BackColor = DotNET::System::Drawing::Color::Peru;&#xD;&#xA;" /><e ldsrc="424"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>$fieldName</n></e></args></fc></e><e ldsrc="425"><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><n>lblDescription</n></e></args></fc></e><e ldsrc="426"><a><l><bo op="m"><l><n>this</n></l><r><n>Name</n></r></bo></l><r><lit str="EnterSingleData" /></r></a></e><e ldsrc="427"><fc><l><n>LoadItems</n></l><args /></fc></e></bk></writecode></r></a></e></ifbk></if><documentation short="Formulario tipo ShowData&#xD;&#xA;" /><if ldsrc="432"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Show" /></r></bo></boolean><ifbk ldsrc="432,450"><e ldsrc="433"><a><l><n>formBlockCode</n></l><r><new><type typename="XplFunctionBody" /></new></r></a></e><documentation short=" Saca el contenido desde los templates&#xD;&#xA;" /><Decls><d name="templates" ldsrc="435"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="435"><e><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></e></i></d></Decls><for ldsrc="436,436"><init><dl><d name="field" ldsrc="436"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><n>templates</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="436,445"><if ldsrc="437"><boolean><bo op="EQ"><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><lit str="Image" /></r></bo></boolean><ifbk ldsrc="438,440"><e ldsrc="439"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>GetImageField</n></l><args><e><n>field</n></e><e><lit str="true" type="bool" /></e><e><lit str="0" type="null" /></e><e><lit str="true" type="bool" /></e></args></fc></e></args></fc></e></ifbk><else ldsrc="441"><e ldsrc="443"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>GetLabelField</n></l><args><e><n>field</n></e><e><lit str="true" type="bool" /></e><e><lit str="0" type="null" /></e><e><lit str="true" type="bool" /></e></args></fc></e></args></fc></e></else></if></forblock></for><e ldsrc="449"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="448"><e><fc><l><n>LoadItems</n></l><args /></fc></e></writecode></e></args></fc></e></ifbk></if><documentation short=" Retorno el mètodo generado&#xD;&#xA;" /><return ldsrc="453,453"><n>formBlockCode</n></return></FunctionBody></Function><documentation short=" Generates specific loading data functions&#xD;&#xA;" /><Function name="GenerateLoadingDataFunctions" internalname="GenerateLoadingDataFunctions#8" access="public" storage="static" ldsrc="457,461"><Parameters><P name="form" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="458"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type></P><P name="clase" number="2"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplClass" ldsrc="459"><dt typename="XplClass" /><pi ref="true" /></type></P><P name="service" number="3"><type ispointer="true" typeStr="^_UtnEmall.Utils.CustomerServiceData" ldsrc="460"><dt typename="CustomerServiceData" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="461,698"><Decls><d name="declarations" ldsrc="463"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="463"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="serviceName" ldsrc="464"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="464"><e><new><type typename="XplIName" /><init ldsrc="464"><list><e><bo><l><bo op="m"><l><bo op="m"><l><n>service</n></l><r><n>ServiceName</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Smart" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="storeID" ldsrc="465"><type typename="$INTEGER$" /><i ldsrc="465"><e><bo op="m"><l><n>service</n></l><r><n>StoreID</n></r></bo></e></i></d></Decls><Decls><d name="idTable" ldsrc="466"><type typename="$INTEGER$" /><i ldsrc="466"><e><bo op="m"><l><n>form</n></l><r><n>IdInputTable</n></r></bo></e></i></d></Decls><documentation short=" En el caso de ser un Form de Lista o Menu&#xD;&#xA;" /><if ldsrc="469"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="List" /></r></bo></boolean><ifbk ldsrc="469,567"><Decls><d name="entityType" ldsrc="470"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="470"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="471"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo><l><bo><l><lit str="DotNET::UtnEmall::Store" /></l><r><n>storeID</n></r></bo></l><r><lit str="::EntityModel::" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></args></fc></e><documentation short="WS Method name to call&#xD;&#xA;" /><Decls><d name="sourceCondition" ldsrc="474"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type></d></Decls><documentation short=" indica si carga por WS(true) o por form fuente (false)&#xD;&#xA;" /><Decls><d name="loadFromWS" ldsrc="476"><type typename="$BOOLEAN$" /><i ldsrc="476"><e><lit str="false" type="bool" /></e></i></d></Decls><e ldsrc="477"><a><l><n>sourceCondition</n></l><r><new><type typename="XplFunctionBody" /></new></r></a></e><Decls><d name="source" ldsrc="478"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="478"><e><lit /></e></i></d></Decls><Decls><d name="target" ldsrc="479"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="479"><e><lit /></e></i></d></Decls><documentation short="bool founded = false;&#xD;&#xA;" /><Decls><d name="ds" ldsrc="482"><type ispointer="true"><dt typename="DataSource" /><pi ref="true" /></type><i ldsrc="482"><e><fc><l><n>GetDataSourceFor</n></l><args><e><n>form</n></e></args></fc></e></i></d></Decls><if ldsrc="483"><boolean><bo op="NOTEQ"><l><n>ds</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="484,488"><e ldsrc="485"><a><l><n>loadFromWS</n></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="486"><a><l><n>source</n></l><r><bo op="m"><l><bo op="m"><l><n>ds</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></a></e><e ldsrc="487"><a><l><n>target</n></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></a></e></ifbk></if><if ldsrc="490"><boolean><n>loadFromWS</n></boolean><ifbk ldsrc="490,504"><Decls><d name="mName" ldsrc="491"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="491"><e><bo><l><bo><l><bo><l><bo><l><lit str="Get" /></l><r><n>source</n></r></bo></l><r><lit str="List" /></r></bo></l><r><lit str="For" /></r></bo></l><r><n>target</n></r></bo></e></i></d></Decls><Decls><d name="methodName" ldsrc="492"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="492"><e><new><type typename="XplIName" /><init ldsrc="492"><list><e><n>mName</n></e></list></init></new></e></i></d></Decls><Decls><d name="serviceID" ldsrc="493"><type typename="$INTEGER$" /><i ldsrc="493"><e><bo op="m"><l><n>service</n></l><r><n>ServiceID</n></r></bo></e></i></d></Decls><Decls><d name="arrayListIName" ldsrc="495"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="495"><e><new><type typename="XplIName" /><init ldsrc="495"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entityTypeName" ldsrc="496"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="496"><e><new><type typename="XplIName" /><init ldsrc="496"><list><e><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="503"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>sourceCondition</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>CallRemoteService</n></l><args><e><lit str="false" type="bool" /></e><e><n>serviceName</n></e><e><n>serviceID</n></e><e><writecode ldsrc="501"><e><a><l><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></l><r><new><type typename="ArrayList" /><init ldsrc="501"><list><e><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>$methodName</n></r></bo></l><args><e><lit /></e></args></fc></e></list></init></new></r></a></e></writecode></e><e><n>arrayListIName</n></e><e><n>entityTypeName</n></e></args></fc></e></args></fc></e></ifbk></if><documentation short=" Set the items to show in the custom list&#xD;&#xA;" /><Decls><d name="initBlock" ldsrc="507"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="507"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="listClassName" ldsrc="508"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="508"><e><bo op="m"><l><n>form</n></l><r><n>ListClassName</n></r></bo></e></i></d></Decls><Decls><d name="templates" ldsrc="509"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="509"><e><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></e></i></d></Decls><for ldsrc="510,510"><init><dl><d name="field" ldsrc="510"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><n>templates</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="511,532"><Decls><d name="entityFieldName" ldsrc="512"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="512"><e><new><type typename="XplIName" /><init ldsrc="512"><list><e><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="propertyName" ldsrc="513"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="513"><e><bo op="m"><l><n>field</n></l><r><n>PropertyName</n></r></bo></e></i></d></Decls><if ldsrc="515"><boolean><bo op="EQ"><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><lit str="Image" /></r></bo></boolean><ifbk ldsrc="516,522"><e ldsrc="521"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>initBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="517"><bk><e ldsrc="518"><a><l><bo op="m"><l><bo op="m"><l><n>listItem</n></l><r><n>$propertyName</n></r></bo></l><r><n>Image</n></r></bo></l><r><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::String64ToImage</n></l><args><e><fc><l><bo op="m"><l><bo op="m"><l><cast><e><n>entity</n></e><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></cast></l><r><n>$entityFieldName</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e></args></fc></r></a></e><e ldsrc="519"><a><l><bo op="m"><l><bo op="m"><l><n>listItem</n></l><r><n>$propertyName</n></r></bo></l><r><n>SizeMode</n></r></bo></l><r><n>PictureBoxSizeMode::StretchImage</n></r></a></e><e ldsrc="520"><a><l><bo op="m"><l><n>listItem</n></l><r><n>Entity</n></r></bo></l><r><n>entity</n></r></a></e></bk></writecode></e></args></fc></e></ifbk><else ldsrc="523"><e ldsrc="530"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>initBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="525"><bk><Decls><d name="text" ldsrc="526"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="526"><e><fc><l><bo op="m"><l><bo op="m"><l><cast><e><n>entity</n></e><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></cast></l><r><n>$entityFieldName</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e></i></d></Decls><e ldsrc="527"><a><l><bo op="m"><l><bo op="m"><l><n>listItem</n></l><r><n>$propertyName</n></r></bo></l><r><n>Text</n></r></bo></l><r><n>text</n></r></a></e><e ldsrc="528"><a><l><bo op="m"><l><n>listItem</n></l><r><n>Entity</n></r></bo></l><r><n>entity</n></r></a></e><e ldsrc="529"><a><l><bo op="m"><l><bo op="m"><l><n>listItem</n></l><r><n>$propertyName</n></r></bo></l><r><n>Width</n></r></bo></l><r><bo><l><bo op="m"><l><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>Graphics</n></l><r><n>MeasureString</n></r></bo></l><args><e><n>text</n></e><e><bo op="m"><l><bo op="m"><l><n>listItem</n></l><r><n>$propertyName</n></r></bo></l><r><n>Font</n></r></bo></e></args></fc></l><r><n>ToSize</n></r></bo></l><args /></fc></l><r><n>Width</n></r></bo></l><r><lit str="2" type="integer" /></r></bo></r></a></e></bk></writecode></e></args></fc></e></else></if></forblock></for><e ldsrc="566"><a><l><n>declarations</n></l><r><writecode ldsrc="534"><classmembers><documentation short=" Load all items to show in the listView&#xD;&#xA;" /><Function name="LoadItems" ldsrc="537,537"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="538,565"><try ldsrc="539"><trybk ldsrc="539,562"><documentation short=" Check if the data to show is comming from the source form&#xD;&#xA;" /><if ldsrc="541"><boolean><bo op="AND"><l><bo op="NOTEQ"><l><n>SourceForm</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="NOTEQ"><l><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></l><r><lit str="0" type="null" /></r></bo></r></bo></boolean><ifbk ldsrc="542,544"><e ldsrc="543"><a><l><n>localDataEntity</n></l><r><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></r></a></e></ifbk><else ldsrc="545"><e ldsrc="547"><n>$sourceCondition</n></e></else></if><documentation short=" Add the items to the custom list&#xD;&#xA;" /><if ldsrc="551"><boolean><bo op="m"><l><n>localDataEntity</n></l><r><n>IsList</n></r></bo></boolean><ifbk ldsrc="551,561"><for ldsrc="552,552"><init><dl><d name="entity" ldsrc="552"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::IEntity" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="553,560"><if ldsrc="554"><boolean><bo op="AND"><l><bo op="NOTEQ"><l><n>entity</n></l><r><lit str="0" type="null" /></r></bo></l><r><uo op="not"><u><bo op="m"><l><cast><e><n>entity</n></e><type ispointer="true"><dt typename="$entityType" /><pi ref="true" /></type></cast></l><r><n>Deleted</n></r></bo></u></uo></r></bo></boolean><ifbk ldsrc="555,559"><Decls><d name="listItem" ldsrc="556"><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type><i ldsrc="556"><e><new><type typename="$listClassName" /><init ldsrc="556"><list><e><n>this</n></e></list></init></new></e></i></d></Decls><e ldsrc="557"><n>$initBlock</n></e><e ldsrc="558"><fc><l><bo op="m"><l><n>contentListView</n></l><r><n>AddItem</n></r></bo></l><args><e><n>listItem</n></e></args></fc></e></ifbk></if></forblock></for></ifbk></if></trybk><catchbk><init ldsrc="562"><d name="error" ldsrc="562"><type typename="Exception" /></d></init><bk ldsrc="562,564"><e ldsrc="563"><fc><l><n>ShowErrorMessage</n></l><args><e><bo op="m"><l><n>error</n></l><r><n>Message</n></r></bo></e><e><lit str="Excecution Error" /></e></args></fc></e></bk></catchbk></try></FunctionBody></Function></classmembers></writecode></r></a></e></ifbk></if><documentation short="En el caso de ser un Form de Menu&#xD;&#xA;" /><if ldsrc="570"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Menu" /></r></bo></boolean><ifbk ldsrc="570,616"><Decls><d name="formBlockCode" ldsrc="572"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="572"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="listClassName" ldsrc="573"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="573"><e><bo op="m"><l><n>form</n></l><r><n>ListClassName</n></r></bo></e></i></d></Decls><Decls><d name="fieldName" ldsrc="574"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="574"><e><new><type typename="XplIName" /><init ldsrc="574"><list><e><lit str="_" /></e></list></init></new></e></i></d></Decls><Decls><d name="propertyName" ldsrc="575"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="575"><e><new><type typename="XplIName" /><init ldsrc="575"><list><e><lit str="_" /></e></list></init></new></e></i></d></Decls><e ldsrc="575"><empty /></e><Decls><d name="i" ldsrc="576"><type typename="$INTEGER$" /><i ldsrc="576"><e><lit str="0" type="integer" /></e></i></d></Decls><for ldsrc="578,578"><init><dl><d name="field" ldsrc="578"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="578,597"><Decls><d name="menuText" ldsrc="579"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="579"><e><bo op="m"><l><n>field</n></l><r><n>MenuText</n></r></bo></e></i></d></Decls><Decls><d name="menuFieldName" ldsrc="580"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="580"><e><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></e></i></d></Decls><Decls><d name="menuFieldIName" ldsrc="581"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="581"><e><new><type typename="XplIName" /><init ldsrc="581"><list><e><n>menuFieldName</n></e></list></init></new></e></i></d></Decls><if ldsrc="583"><boolean><bo op="EQ"><l><n>i</n></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="584,587"><e ldsrc="585"><a><l><n>fieldName</n></l><r><bo op="m"><l><n>field</n></l><r><n>FieldMemberName</n></r></bo></r></a></e><e ldsrc="586"><a><l><n>propertyName</n></l><r><bo op="m"><l><n>field</n></l><r><n>PropertyName</n></r></bo></r></a></e></ifbk></if><e ldsrc="594"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="589"><bk><Decls><d name="listItem" ldsrc="590"><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type><i ldsrc="590"><e><new><type typename="$listClassName" /><init ldsrc="590"><list><e><n>this</n></e></list></init></new></e></i></d></Decls><e ldsrc="591"><a><l><bo op="m"><l><bo op="m"><l><n>listItem</n></l><r><n>$propertyName</n></r></bo></l><r><n>Text</n></r></bo></l><r><n>$menuText</n></r></a></e><e ldsrc="592"><a><l><bo op="m"><l><n>listItem</n></l><r><n>Tag</n></r></bo></l><r><n>$menuFieldName</n></r></a></e><e ldsrc="593"><fc><l><bo op="m"><l><n>contentListView</n></l><r><n>AddItem</n></r></bo></l><args><e><n>listItem</n></e></args></fc></e></bk></writecode></e></args></fc></e><e ldsrc="596"><uo op="inc"><u><n>i</n></u></uo></e></forblock></for><e ldsrc="615"><a><l><n>declarations</n></l><r><writecode ldsrc="599"><classmembers><documentation short=" Load all items to show in the listView&#xD;&#xA;" /><Function name="LoadItems" ldsrc="602,602"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="603,614"><try ldsrc="604"><trybk ldsrc="604,611"><if ldsrc="605"><boolean><bo op="AND"><l><bo op="NOTEQ"><l><n>SourceForm</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="NOTEQ"><l><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></l><r><lit str="0" type="null" /></r></bo></r></bo></boolean><ifbk ldsrc="606,609"><documentation short=" Assign to the local DotNET::UtnEmall::Client::PresentationLayer::DataEntity the previously created Data Entity&#xD;&#xA;" /><e ldsrc="608"><a><l><n>localDataEntity</n></l><r><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></r></a></e></ifbk></if><e ldsrc="610"><n>$formBlockCode</n></e></trybk><catchbk><init ldsrc="611"><d name="error" ldsrc="611"><type typename="Exception" /></d></init><bk ldsrc="611,613"><e ldsrc="612"><fc><l><n>ShowErrorMessage</n></l><args><e><bo op="m"><l><n>error</n></l><r><n>Message</n></r></bo></e><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="2" type="integer" /></e></args></fc></e></args></fc></e></bk></catchbk></try></FunctionBody></Function></classmembers></writecode></r></a></e></ifbk></if><documentation short="Formulario tipo ShowData&#xD;&#xA;" /><if ldsrc="619"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Show" /></r></bo></boolean><ifbk ldsrc="619,673"><Decls><d name="entityType" ldsrc="620"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="620"><e><new><type typename="XplIName" /><init ldsrc="620"><list><e><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></e></list></init></new></e></i></d></Decls><documentation short="WS Method name to call&#xD;&#xA;" /><Decls><d name="sourceCondition" ldsrc="623"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="623"><e><lit str="0" type="null" /></e></i></d></Decls><e ldsrc="631"><a><l><n>sourceCondition</n></l><r><writecode ldsrc="625"><bk><if ldsrc="626"><boolean><bo op="AND"><l><bo op="NOTEQ"><l><n>SourceForm</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="NOTEQ"><l><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></l><r><lit str="0" type="null" /></r></bo></r></bo></boolean><ifbk ldsrc="627,630"><documentation short=" Assign to the local DotNET::UtnEmall::Client::PresentationLayer::DataEntity the previously created Data Entity&#xD;&#xA;" /><e ldsrc="629"><a><l><n>localDataEntity</n></l><r><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></r></a></e></ifbk></if></bk></writecode></r></a></e><documentation short=" Saca el contenido desde los templates&#xD;&#xA;" /><Decls><d name="templates" ldsrc="634"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="634"><e><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></e></i></d></Decls><for ldsrc="636,636"><init><dl><d name="field" ldsrc="636"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><n>templates</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="636,647"><Decls><d name="fieldDataName" ldsrc="637"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="637"><e><new><type typename="XplIName" /><init ldsrc="637"><list><e><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="dataType" ldsrc="638"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="638"><e><new><type typename="XplIName" /><init ldsrc="638"><list><e><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="640"><boolean><bo op="EQ"><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><lit str="Image" /></r></bo></boolean><ifbk ldsrc="640,643"><Decls><d name="imgXp" ldsrc="641"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="641"><e><writecode ldsrc="641"><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::String64ToImage</n></l><args><e><fc><l><bo op="m"><l><bo op="m"><l><cast><e><b><l><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></b></e><type ispointer="true"><dt typename="$dataType" /><pi ref="true" /></type></cast></l><r><n>$fieldDataName</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e></args></fc></e></writecode></e></i></d></Decls><e ldsrc="642"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>sourceCondition</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>GetImageField</n></l><args><e><n>field</n></e><e><lit str="false" type="bool" /></e><e><n>imgXp</n></e><e><lit str="true" type="bool" /></e></args></fc></e></args></fc></e></ifbk><else ldsrc="643"><Decls><d name="textExp" ldsrc="644"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="644"><e><writecode ldsrc="644"><e><fc><l><bo op="m"><l><bo op="m"><l><cast><e><b><l><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></b></e><type ispointer="true"><dt typename="$dataType" /><pi ref="true" /></type></cast></l><r><n>$fieldDataName</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e></writecode></e></i></d></Decls><e ldsrc="645"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>sourceCondition</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>GetLabelField</n></l><args><e><n>field</n></e><e><lit str="false" type="bool" /></e><e><n>textExp</n></e><e><lit str="true" type="bool" /></e></args></fc></e></args></fc></e></else></if></forblock></for><documentation short="Determinar el tipo de retorno&#xD;&#xA;" /><e ldsrc="672"><a><l><n>declarations</n></l><r><writecode ldsrc="650"><classmembers><documentation short=" Load all items to show in the listView&#xD;&#xA;" /><Function name="LoadItems" ldsrc="653,653"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="654,671"><try ldsrc="655"><trybk ldsrc="655,667"><e ldsrc="656"><a><l><bo op="m"><l><n>this</n></l><r><n>_idTable</n></r></bo></l><r><n>$idTable</n></r></a></e><Decls><d name="entityId" ldsrc="657"><type typename="$INTEGER$" /><i ldsrc="657"><e><lit str="0" type="integer" /></e></i></d></Decls><if ldsrc="658"><boolean><bo op="m"><l><n>localDataEntity</n></l><r><n>IsList</n></r></bo></boolean><ifbk ldsrc="658,660"><e ldsrc="659"><a><l><n>entityId</n></l><r><bo op="m"><l><cast><e><b><l><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></b></e><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::IEntity" /><pi ref="true" /></type></cast></l><r><n>Id</n></r></bo></r></a></e></ifbk><else ldsrc="660"><e ldsrc="661"><a><l><n>entityId</n></l><r><bo op="m"><l><bo op="m"><l><n>localDataEntity</n></l><r><n>Entity</n></r></bo></l><r><n>Id</n></r></bo></r></a></e></else></if><e ldsrc="663"><a><l><bo op="m"><l><n>this</n></l><r><n>_idRegister</n></r></bo></l><r><n>entityId</n></r></a></e><e ldsrc="665"><n>$sourceCondition</n></e></trybk><catchbk><init ldsrc="668"><d name="error" ldsrc="668"><type ispointer="true"><dt typename="Exception" /><pi ref="true" /></type></d></init><bk ldsrc="668,670"><e ldsrc="669"><fc><l><n>ShowErrorMessage</n></l><args><e><bo op="m"><l><n>error</n></l><r><n>Message</n></r></bo></e><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="2" type="integer" /></e></args></fc></e></args></fc></e></bk></catchbk></try></FunctionBody></Function></classmembers></writecode></r></a></e></ifbk></if><if ldsrc="675"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Enter" /></r></bo></boolean><ifbk ldsrc="675,692"><e ldsrc="691"><a><l><n>declarations</n></l><r><writecode ldsrc="676"><classmembers><documentation short=" Load all items to show in the listView&#xD;&#xA;" /><Function name="LoadItems" ldsrc="679,679"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="680,690"><try ldsrc="681"><trybk ldsrc="681,687"><if ldsrc="682"><boolean><bo op="AND"><l><bo op="NOTEQ"><l><n>SourceForm</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="NOTEQ"><l><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></l><r><lit str="0" type="null" /></r></bo></r></bo></boolean><ifbk ldsrc="683,686"><documentation short=" Assign to the local DotNET::UtnEmall::Client::PresentationLayer::DataEntity the previously created Data Entity&#xD;&#xA;" /><e ldsrc="685"><a><l><n>localDataEntity</n></l><r><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></r></a></e></ifbk></if></trybk><catchbk><init ldsrc="687"><d name="error" ldsrc="687"><type typename="Exception" /></d></init><bk ldsrc="687,689"><e ldsrc="688"><fc><l><n>ShowErrorMessage</n></l><args><e><bo op="m"><l><n>error</n></l><r><n>Message</n></r></bo></e><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="2" type="integer" /></e></args></fc></e></args></fc></e></bk></catchbk></try></FunctionBody></Function></classmembers></writecode></r></a></e></ifbk></if><e ldsrc="696"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>clase</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>declarations</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></FunctionBody></Function><documentation short="**********************************&#xD;&#xA;Creates the accept option event&#xD;&#xA;**********************************&#xD;&#xA;" /><Function name="GenerateAcceptEvent" internalname="GenerateAcceptEvent#9" access="public" storage="static" ldsrc="702,707"><Parameters><P name="form" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="703"><dt typename="UtnEmall::Utils::Form" /><pi ref="true" /></type></P><P name="relations" number="2"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList" ldsrc="704"><dt typename="ArrayList" /><pi ref="true" /></type></P><P name="clase" number="3"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplClass" ldsrc="705"><dt typename="XplClass" /><pi ref="true" /></type></P><P name="service" number="4"><type ispointer="true" typeStr="^_UtnEmall.Utils.CustomerServiceData" ldsrc="706"><dt typename="CustomerServiceData" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="707,1196"><Decls><d name="declarations" ldsrc="709"><type ispointer="true"><dt typename="XplClassMembersList" /><pi ref="true" /></type><i ldsrc="709"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="formBlockCode" ldsrc="710"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="710"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="serviceName" ldsrc="711"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="711"><e><new><type typename="XplIName" /><init ldsrc="711"><list><e><bo><l><bo op="m"><l><bo op="m"><l><n>service</n></l><r><n>ServiceName</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Smart" /></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="idTable" ldsrc="712"><type typename="$INTEGER$" /><i ldsrc="712"><e><bo op="m"><l><n>form</n></l><r><n>IdInputTable</n></r></bo></e></i></d></Decls><Decls><d name="serviceID" ldsrc="713"><type typename="$INTEGER$" /><i ldsrc="713"><e><bo op="m"><l><n>service</n></l><r><n>ServiceID</n></r></bo></e></i></d></Decls><Decls><d name="idComponent" ldsrc="714"><type typename="$INTEGER$" /><i ldsrc="714"><e><bo op="m"><l><n>form</n></l><r><n>IdComponent</n></r></bo></e></i></d></Decls><documentation short="En el caso de ser un Form de menu&#xD;&#xA;" /><if ldsrc="717"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Menu" /></r></bo></boolean><ifbk ldsrc="718,831"><documentation short="Recorrer todas las relaciones&#xD;&#xA;" /><for ldsrc="720,720"><init><dl><d name="relation" ldsrc="720"><type typename="UtnEmall::Utils::Relation" /></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="721,830"><Decls><d name="source" ldsrc="722"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="722"><e><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></e></i></d></Decls><if ldsrc="724"><boolean><bo op="EQ"><l><fc><l><bo op="m"><l><n>source</n></l><r><n>Trim</n></r></bo></l><args /></fc></l><r><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Trim</n></r></bo></l><args /></fc></r></bo></boolean><ifbk ldsrc="725,829"><documentation short="Va a generar una serie de ifs&#xD;&#xA;dependiendo de la opciòn seleccionada&#xD;&#xA;option es igual al nombre del campo&#xD;&#xA;" /><Decls><d name="option" ldsrc="729"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="729"><e><bo op="m"><l><n>relation</n></l><r><n>Option</n></r></bo></e></i></d></Decls><Decls><d name="target" ldsrc="730"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="730"><e><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></e></i></d></Decls><Decls><d name="targetType" ldsrc="731"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="731"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="732"><fc><l><bo op="m"><l><n>targetType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>target</n></e></args></fc></e><documentation short=" Search for the IdComponent&#xD;&#xA;" /><for ldsrc="735,735"><init><dl><d name="ft" ldsrc="735"><type typename="UtnEmall::Utils::FieldTemplate" /></d></dl></init><condition><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="736,741"><if ldsrc="737"><boolean><bo op="EQ"><l><bo op="m"><l><n>ft</n></l><r><n>FieldName</n></r></bo></l><r><n>option</n></r></bo></boolean><ifbk ldsrc="738,740"><e ldsrc="739"><a><l><n>idComponent</n></l><r><bo op="m"><l><n>ft</n></l><r><n>IdComponent</n></r></bo></r></a></e></ifbk></if></forblock></for><documentation short=" Generar la salida de datos apropiada, dependiendo de&#xD;&#xA; la opcion seleccionada&#xD;&#xA;" /><Decls><d name="getMenuData" ldsrc="745"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="745"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="listClassName" ldsrc="746"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="746"><e><bo op="m"><l><n>form</n></l><r><n>ListClassName</n></r></bo></e></i></d></Decls><if ldsrc="748"><boolean><bo op="NOTEQ"><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="749,798"><documentation short=" Si tiene un InputTable, alguna opción debería tener&#xD;&#xA; un OutputTable. Buscar la opcion seleccionada&#xD;&#xA;" /><Decls><d name="datasource" ldsrc="752"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="752"><e><lit /></e></i></d></Decls><Decls><d name="found" ldsrc="753"><type typename="$BOOLEAN$" /><i ldsrc="753"><e><lit str="false" type="bool" /></e></i></d></Decls><for ldsrc="754,754"><init><dl><d name="field" ldsrc="754"><type typename="FieldTemplate" /></d></dl></init><condition><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="755,797"><if ldsrc="756"><boolean><bo op="EQ"><l><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></l><r><n>option</n></r></bo></boolean><ifbk ldsrc="757,796"><documentation short="Si la entrada del menu es la entrada del próximo form&#xD;&#xA;" /><if ldsrc="759"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="760,768"><e ldsrc="761"><fc><l><n>Console::WriteLine</n></l><args><e><lit str="Menu--&gt;Formulario sin llamada a servicio" /></e></args></fc></e><e ldsrc="766"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>getMenuData</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="763"><bk><e ldsrc="764"><a><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><bo op="m"><l><n>this</n></l><r><n>localDataEntity</n></r></bo></r></a></e></bk></writecode></e></args></fc></e><jump ldsrc="767" /></ifbk><else ldsrc="769"><if ldsrc="769"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="769,775"><e ldsrc="774"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>getMenuData</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="771"><bk><e ldsrc="772"><a><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><lit str="0" type="null" /></r></a></e></bk></writecode></e></args></fc></e></ifbk><else ldsrc="776"><Decls><d name="mName" ldsrc="778"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="778"><e><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="Get" /></l><r><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="List" /></r></bo></l><r><lit str="From" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="For" /></r></bo></l><r><n>target</n></r></bo></e></i></d></Decls><Decls><d name="methodName" ldsrc="781"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="781"><e><new><type typename="XplIName" /><init ldsrc="781"><list><e><n>mName</n></e></list></init></new></e></i></d></Decls><Decls><d name="arrayListIName" ldsrc="782"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="782"><e><new><type typename="XplIName" /><init ldsrc="782"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entityTypeName" ldsrc="783"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="783"><e><new><type typename="XplIName" /><init ldsrc="783"><list><e><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="785"><fc><l><n>Console::WriteLine</n></l><args><e><bo><l><lit str="Menu--&gt;Formulario con llamada a servicio " /></l><r><n>mName</n></r></bo></e></args></fc></e><e ldsrc="792"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>getMenuData</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>CallRemoteService</n></l><args><e><lit str="true" type="bool" /></e><e><n>serviceName</n></e><e><n>serviceID</n></e><e><writecode ldsrc="790"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><n>IEntityList</n></r></bo></l><r><new><type typename="ArrayList" /><init ldsrc="790"><list><e><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>$methodName</n></r></bo></l><args><e><bo op="m"><l><cast><e><b><l><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></b></e><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::IEntity" /><pi ref="true" /></type></cast></l><r><n>Id</n></r></bo></e><e><lit /></e></args></fc></e></list></init></new></r></a></e></writecode></e><e><n>arrayListIName</n></e><e><n>entityTypeName</n></e></args></fc></e></args></fc></e><jump ldsrc="794" /></else></if></else></if></ifbk></if><documentation short="if&#xD;&#xA;" /></forblock></for><documentation short="for&#xD;&#xA;" /></ifbk></if><e ldsrc="828"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="801"><bk><if ldsrc="802"><boolean><bo op="EQ"><l><n>$option</n></l><r><fc><l><bo op="m"><l><bo op="m"><l><cast><e><bo op="m"><l><n>contentListView</n></l><r><n>SelectedItem</n></r></bo></e><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type></cast></l><r><n>Tag</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></boolean><ifbk ldsrc="802,827"><e ldsrc="804"><n>$getMenuData</n></e><documentation short=" Save statistics information&#xD;&#xA;" /><Decls><d name="startMenuUsage" ldsrc="806"><type typename="zoe::lang::DateTime" /><i ldsrc="806"><e><n>zoe::lang::DateTime::Now</n></e></i></d></Decls><Decls><d name="userActionMenu" ldsrc="808"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /><pi ref="true" /></type><i ldsrc="808"><e><new><type typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /></new></e></i></d></Decls><Decls><d name="userActionMenuDataAccess" ldsrc="810"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /><pi ref="true" /></type><i ldsrc="810"><e><new><type typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /></new></e></i></d></Decls><documentation short=" Fill statistical data&#xD;&#xA;" /><e ldsrc="815"><a><l><bo op="m"><l><n>userActionMenu</n></l><r><n>ActionType</n></r></bo></l><r><fc><l><n>DotNET::System::Convert::ToInt32</n></l><args><e><n>DotNET::UtnEmall::Client::PresentationLayer::StatisticsActionType::MenuItemSelection</n></e></args></fc></r></a></e><e ldsrc="816"><a><l><bo op="m"><l><n>userActionMenu</n></l><r><n>Start</n></r></bo></l><r><n>startMenuUsage</n></r></a></e><e ldsrc="817"><a><l><bo op="m"><l><n>userActionMenu</n></l><r><n>Stop</n></r></bo></l><r><n>startMenuUsage</n></r></a></e><e ldsrc="818"><a><l><bo op="m"><l><n>userActionMenu</n></l><r><n>IdService</n></r></bo></l><r><n>$serviceID</n></r></a></e><e ldsrc="819"><a><l><bo op="m"><l><n>userActionMenu</n></l><r><n>IdComponent</n></r></bo></l><r><n>$idComponent</n></r></a></e><documentation short=" Save the current statistic&#xD;&#xA;" /><e ldsrc="821"><fc><l><bo op="m"><l><n>userActionMenuDataAccess</n></l><r><n>Save</n></r></bo></l><args><e><n>userActionMenu</n></e></args></fc></e><documentation short=" Show the next form&#xD;&#xA;" /><Decls><d name="target" ldsrc="824"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::PresentationLayer::BaseForm" /><pi ref="true" /></type><i ldsrc="824"><e><new><type typename="$targetType" /><init ldsrc="824"><list><e><n>this</n></e></list></init></new></e></i></d></Decls><e ldsrc="825"><a><l><bo op="m"><l><n>target</n></l><r><n>Owner</n></r></bo></l><r><n>this</n></r></a></e><e ldsrc="826"><fc><l><bo op="m"><l><n>target</n></l><r><n>ShowDialog</n></r></bo></l><args /></fc></e></ifbk></if></bk></writecode></e></args></fc></e></ifbk></if></forblock></for></ifbk></if><documentation short="if &quot;Menu&quot;&#xD;&#xA;En el caso de ser un Form de Lista&#xD;&#xA;" /><if ldsrc="834"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="List" /></r></bo></boolean><ifbk ldsrc="835,937"><documentation short=" Recorrer todas las relaciones&#xD;&#xA;" /><for ldsrc="837,837"><init><dl><d name="relation" ldsrc="837"><type typename="UtnEmall::Utils::Relation" /></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="837,936"><Decls><d name="source" ldsrc="838"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="838"><e><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></e></i></d></Decls><if ldsrc="840"><boolean><bo op="EQ"><l><fc><l><bo op="m"><l><n>source</n></l><r><n>Trim</n></r></bo></l><args /></fc></l><r><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Trim</n></r></bo></l><args /></fc></r></bo></boolean><ifbk ldsrc="840,935"><Decls><d name="option" ldsrc="841"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="841"><e><bo op="m"><l><n>relation</n></l><r><n>Option</n></r></bo></e></i></d></Decls><Decls><d name="target" ldsrc="842"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="842"><e><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></e></i></d></Decls><Decls><d name="listClassName" ldsrc="843"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="843"><e><bo op="m"><l><n>form</n></l><r><n>ListClassName</n></r></bo></e></i></d></Decls><Decls><d name="targetType" ldsrc="844"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="844"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="845"><fc><l><bo op="m"><l><n>targetType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>target</n></e></args></fc></e><Decls><d name="nextFormCall" ldsrc="847"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="847"><e><fc><l><n>XplFunctionBody::new_bk</n></l><args /></fc></e></i></d></Decls><e ldsrc="875"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>nextFormCall</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="850"><bk><documentation short=" Save statistics information&#xD;&#xA;" /><Decls><d name="startItemSelection" ldsrc="852"><type typename="zoe::lang::DateTime" /><i ldsrc="852"><e><n>zoe::lang::DateTime::Now</n></e></i></d></Decls><Decls><d name="userActionItemSelection" ldsrc="854"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /><pi ref="true" /></type><i ldsrc="854"><e><new><type typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /></new></e></i></d></Decls><Decls><d name="userActionDataAccessItem" ldsrc="856"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /><pi ref="true" /></type><i ldsrc="856"><e><new><type typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /></new></e></i></d></Decls><documentation short=" Fill statistical data&#xD;&#xA;" /><e ldsrc="861"><a><l><bo op="m"><l><n>userActionItemSelection</n></l><r><n>ActionType</n></r></bo></l><r><fc><l><n>DotNET::System::Convert::ToInt32</n></l><args><e><n>DotNET::UtnEmall::Client::PresentationLayer::StatisticsActionType::ListItemSelection</n></e></args></fc></r></a></e><e ldsrc="862"><a><l><bo op="m"><l><n>userActionItemSelection</n></l><r><n>Start</n></r></bo></l><r><n>startItemSelection</n></r></a></e><e ldsrc="863"><a><l><bo op="m"><l><n>userActionItemSelection</n></l><r><n>Stop</n></r></bo></l><r><n>startItemSelection</n></r></a></e><e ldsrc="864"><a><l><bo op="m"><l><n>userActionItemSelection</n></l><r><n>IdService</n></r></bo></l><r><n>$serviceID</n></r></a></e><e ldsrc="865"><a><l><bo op="m"><l><n>userActionItemSelection</n></l><r><n>IdTable</n></r></bo></l><r><n>$idTable</n></r></a></e><e ldsrc="866"><a><l><bo op="m"><l><n>userActionItemSelection</n></l><r><n>IdComponent</n></r></bo></l><r><n>$idComponent</n></r></a></e><e ldsrc="867"><a><l><bo op="m"><l><n>userActionItemSelection</n></l><r><n>IdRegister</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><cast><e><bo op="m"><l><n>contentListView</n></l><r><n>SelectedItem</n></r></bo></e><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type></cast></l><r><n>Entity</n></r></bo></l><r><n>Id</n></r></bo></r></a></e><documentation short=" Save the current statistic&#xD;&#xA;" /><e ldsrc="870"><fc><l><bo op="m"><l><n>userActionDataAccessItem</n></l><r><n>Save</n></r></bo></l><args><e><n>userActionItemSelection</n></e></args></fc></e><Decls><d name="target" ldsrc="872"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::PresentationLayer::BaseForm" /><pi ref="true" /></type><i ldsrc="872"><e><new><type typename="$targetType" /><init ldsrc="872"><list><e><n>this</n></e></list></init></new></e></i></d></Decls><e ldsrc="873"><a><l><bo op="m"><l><n>target</n></l><r><n>Owner</n></r></bo></l><r><n>this</n></r></a></e><e ldsrc="874"><fc><l><bo op="m"><l><n>target</n></l><r><n>ShowDialog</n></r></bo></l><args /></fc></e></bk></writecode></e></args></fc></e><documentation short=" WS Method name to call&#xD;&#xA;" /><if ldsrc="878"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>OutputTable</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="879,892"><e ldsrc="891"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="881"><bk><if ldsrc="882"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>contentListView</n></l><r><n>SelectedIndex</n></r></bo></l><r><uo><u><lit str="1" type="integer" /></u></uo></r></bo></boolean><ifbk ldsrc="882,889"><Decls><d name="selectedId" ldsrc="883"><type typename="$INTEGER$" /><i ldsrc="883"><e><bo op="m"><l><bo op="m"><l><cast><e><bo op="m"><l><n>contentListView</n></l><r><n>SelectedItem</n></r></bo></e><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type></cast></l><r><n>Entity</n></r></bo></l><r><n>Id</n></r></bo></e></i></d></Decls><e ldsrc="884"><a><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /></new></r></a></e><e ldsrc="885"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><n>IEntityList</n></r></bo></l><r><new><type typename="ArrayList" /></new></r></a></e><e ldsrc="886"><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><n>IEntityList</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><cast><e><bo op="m"><l><n>contentListView</n></l><r><n>SelectedItem</n></r></bo></e><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type></cast></l><r><n>Entity</n></r></bo></e></args></fc></e><e ldsrc="888"><n>$nextFormCall</n></e></ifbk></if></bk></writecode></e></args></fc></e></ifbk><else ldsrc="893"><Decls><d name="mName" ldsrc="895"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="895"><e><bo><l><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="Get" /></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="List" /></r></bo></l><r><lit str="From" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="For" /></r></bo></l><r><n>target</n></r></bo></e></i></d></Decls><Decls><d name="methodName" ldsrc="898"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="898"><e><new><type typename="XplIName" /><init ldsrc="898"><list><e><n>mName</n></e></list></init></new></e></i></d></Decls><Decls><d name="arrayListIName" ldsrc="899"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="899"><e><new><type typename="XplIName" /><init ldsrc="899"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="entityTypeName" ldsrc="900"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="900"><e><bo op="m"><l><n>form</n></l><r><n>OutputTable</n></r></bo></e></i></d></Decls><if ldsrc="902"><boolean><uo op="not"><u><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></u></uo></boolean><ifbk ldsrc="903,918"><e ldsrc="904"><fc><l><n>Console::WriteLine</n></l><args><e><lit str="List--&gt;Formulario con llamada a servicio" /></e></args></fc></e><e ldsrc="911"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>CallRemoteService</n></l><args><e><lit str="true" type="bool" /></e><e><n>serviceName</n></e><e><n>serviceID</n></e><e><writecode ldsrc="909"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><n>IEntityList</n></r></bo></l><r><new><type typename="ArrayList" /><init ldsrc="909"><list><e><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>$methodName</n></r></bo></l><args><e><bo op="m"><l><bo op="m"><l><cast><e><bo op="m"><l><n>contentListView</n></l><r><n>SelectedItem</n></r></bo></e><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type></cast></l><r><n>Entity</n></r></bo></l><r><n>Id</n></r></bo></e><e><lit /></e></args></fc></e></list></init></new></r></a></e></writecode></e><e><n>arrayListIName</n></e><e><n>entityTypeName</n></e></args></fc></e></args></fc></e><e ldsrc="917"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="914"><bk><Decls><d name="k" ldsrc="915"><type typename="$INTEGER$" /><i ldsrc="915"><e><lit str="0" type="integer" /></e></i></d></Decls><e ldsrc="916"><n>$nextFormCall</n></e></bk></writecode></e></args></fc></e></ifbk><else ldsrc="919"><e ldsrc="920"><fc><l><n>Console::WriteLine</n></l><args><e><lit str="List--&gt;Formulario sin llamada a servicio" /></e></args></fc></e><e ldsrc="932"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="922"><bk><if ldsrc="923"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>contentListView</n></l><r><n>SelectedIndex</n></r></bo></l><r><uo><u><lit str="1" type="integer" /></u></uo></r></bo></boolean><ifbk ldsrc="923,930"><Decls><d name="selectedId" ldsrc="924"><type typename="$INTEGER$" /><i ldsrc="924"><e><bo op="m"><l><bo op="m"><l><cast><e><bo op="m"><l><n>contentListView</n></l><r><n>SelectedItem</n></r></bo></e><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type></cast></l><r><n>Entity</n></r></bo></l><r><n>Id</n></r></bo></e></i></d></Decls><e ldsrc="925"><a><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /></new></r></a></e><e ldsrc="926"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><n>IEntityList</n></r></bo></l><r><new><type typename="ArrayList" /></new></r></a></e><e ldsrc="927"><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><n>IEntityList</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><cast><e><bo op="m"><l><n>contentListView</n></l><r><n>SelectedItem</n></r></bo></e><type ispointer="true"><dt typename="$listClassName" /><pi ref="true" /></type></cast></l><r><n>Entity</n></r></bo></e></args></fc></e><e ldsrc="929"><n>$nextFormCall</n></e></ifbk></if></bk></writecode></e></args></fc></e></else></if></else></if></ifbk></if></forblock></for></ifbk></if><if ldsrc="939"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Show" /></r></bo></boolean><ifbk ldsrc="939,966"><documentation short="Recorrer todas las relaciones&#xD;&#xA;" /><for ldsrc="941,941"><init><dl><d name="relation" ldsrc="941"><type typename="UtnEmall::Utils::Relation" /></d></dl></init><condition><n>relations</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="941,965"><Decls><d name="source" ldsrc="942"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="942"><e><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></e></i></d></Decls><if ldsrc="944"><boolean><bo op="EQ"><l><fc><l><bo op="m"><l><n>source</n></l><r><n>Trim</n></r></bo></l><args /></fc></l><r><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Trim</n></r></bo></l><args /></fc></r></bo></boolean><ifbk ldsrc="944,964"><Decls><d name="option" ldsrc="945"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="945"><e><bo op="m"><l><n>relation</n></l><r><n>Option</n></r></bo></e></i></d></Decls><Decls><d name="target" ldsrc="946"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="946"><e><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></e></i></d></Decls><Decls><d name="targetType" ldsrc="947"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="947"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="948"><fc><l><bo op="m"><l><n>targetType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>target</n></e></args></fc></e><if ldsrc="950"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="950,963"><e ldsrc="962"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="952"><bk><documentation short=" Pass the information for the next form&#xD;&#xA;" /><e ldsrc="954"><a><l><n>NextDataEntity</n></l><r><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /></new></r></a></e><e ldsrc="955"><a><l><bo op="m"><l><n>NextDataEntity</n></l><r><n>IEntityList</n></r></bo></l><r><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></r></a></e><documentation short=" Call the next Form&#xD;&#xA;" /><Decls><d name="target" ldsrc="958"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::PresentationLayer::BaseForm" /><pi ref="true" /></type><i ldsrc="958"><e><new><type typename="$targetType" /><init ldsrc="958"><list><e><n>this</n></e></list></init></new></e></i></d></Decls><e ldsrc="959"><a><l><bo op="m"><l><n>target</n></l><r><n>Owner</n></r></bo></l><r><n>this</n></r></a></e><e ldsrc="960"><fc><l><bo op="m"><l><n>target</n></l><r><n>ShowDialog</n></r></bo></l><args /></fc></e></bk></writecode></e></args></fc></e></ifbk></if><documentation short="if&#xD;&#xA;" /></ifbk></if></forblock></for></ifbk></if><documentation short="if &quot;List&quot;&#xD;&#xA;En el caso de formulario de input data, se debería&#xD;&#xA;llamar al servicio web para pasar el dato ingresado&#xD;&#xA;" /><if ldsrc="970"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Enter" /></r></bo></boolean><ifbk ldsrc="971,1125"><Decls><d name="functionName" ldsrc="972"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="972"><e><new><type typename="XplIName" /><init ldsrc="972"><list><e><lit /></e></list></init></new></e></i></d></Decls><for ldsrc="973,973"><init><dl><d name="rel" ldsrc="973"><type typename="Relation" /></d></dl></init><condition><bo op="m"><l><n>service</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="974,985"><if ldsrc="975"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="976,984"><for ldsrc="977,977"><init><dl><d name="dataStorage" ldsrc="977"><type typename="DataSource" /></d></dl></init><condition><bo op="m"><l><n>service</n></l><r><n>DataSources</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="978,983"><if ldsrc="979"><boolean><bo op="AND"><l><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>dataStorage</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><bo op="m"><l><n>dataStorage</n></l><r><n>Storage</n></r></bo></r></bo></boolean><ifbk ldsrc="980,982"><e ldsrc="981"><a><l><n>functionName</n></l><r><new><type typename="XplIName" /><init ldsrc="981"><list><e><bo><l><bo><l><bo><l><lit str="Save" /></l><r><bo op="m"><l><bo op="m"><l><n>dataStorage</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="For" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></r></a></e></ifbk></if></forblock></for></ifbk></if></forblock></for><documentation short=" Search for the next Form (if any)&#xD;&#xA;" /><Decls><d name="target" ldsrc="988"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="988"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="targetType" ldsrc="989"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="989"><e><lit str="0" type="null" /></e></i></d></Decls><Decls><d name="callNextForm" ldsrc="990"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="990"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><for ldsrc="992,992"><init><dl><d name="rel" ldsrc="992"><type typename="Relation" /></d></dl></init><condition><bo op="m"><l><n>service</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="993,1007"><if ldsrc="994"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="995,1006"><for ldsrc="996,996"><init><dl><d name="nextForm" ldsrc="996"><type typename="Form" /></d></dl></init><condition><bo op="m"><l><n>service</n></l><r><n>Forms</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="997,1005"><if ldsrc="998"><boolean><bo op="AND"><l><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>nextForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><bo op="NOTEQ"><l><bo op="m"><l><n>nextForm</n></l><r><n>Type</n></r></bo></l><r><lit str="List" /></r></bo></r></bo></boolean><ifbk ldsrc="999,1004"><e ldsrc="1000"><a><l><n>target</n></l><r><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></r></a></e><e ldsrc="1001"><a><l><n>targetType</n></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="1002"><fc><l><bo op="m"><l><n>targetType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>target</n></e></args></fc></e><jump ldsrc="1003" /></ifbk></if></forblock></for></ifbk></if></forblock></for><if ldsrc="1009"><boolean><bo op="NOTEQ"><l><n>targetType</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1010,1021"><e ldsrc="1020"><a><l><n>callNextForm</n></l><r><writecode ldsrc="1011"><bk><documentation short=" Assign the next form data (if there's any)&#xD;&#xA;" /><e ldsrc="1013"><a><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /></new></r></a></e><e ldsrc="1014"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>NextDataEntity</n></r></bo></l><r><n>IEntityList</n></r></bo></l><r><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></r></a></e><documentation short=" Show the next Form&#xD;&#xA;" /><Decls><d name="target" ldsrc="1017"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::PresentationLayer::BaseForm" /><pi ref="true" /></type><i ldsrc="1017"><e><new><type typename="$targetType" /><init ldsrc="1017"><list><e><n>this</n></e></list></init></new></e></i></d></Decls><e ldsrc="1018"><a><l><bo op="m"><l><n>target</n></l><r><n>Owner</n></r></bo></l><r><n>this</n></r></a></e><e ldsrc="1019"><fc><l><bo op="m"><l><n>target</n></l><r><n>ShowDialog</n></r></bo></l><args /></fc></e></bk></writecode></r></a></e></ifbk><else ldsrc="1022"><e ldsrc="1041"><a><l><n>callNextForm</n></l><r><writecode ldsrc="1024"><bk><Decls><d name="msgTitle" ldsrc="1025"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1025"><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="1" type="integer" /></e></args></fc></e></i></d></Decls><Decls><d name="msgText" ldsrc="1026"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1026"><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="4" type="integer" /></e></args></fc></e></i></d></Decls><Decls><d name="msgIcon" ldsrc="1027"><type ispointer="true"><dt typename="Bitmap" /><pi ref="true" /></type><i ldsrc="1027"><e><new><type typename="Bitmap" /><init ldsrc="1027"><list><e><bo><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::AppPath</n></l><r><lit str="images\\\\\\ico_help.png" /></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="1029"><boolean><uo op="not"><u><n>result</n></u></uo></boolean><ifbk ldsrc="1029,1033"><e ldsrc="1030"><a><l><n>msgTitle</n></l><r><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="2" type="integer" /></e></args></fc></r></a></e><e ldsrc="1031"><a><l><n>msgText</n></l><r><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="3" type="integer" /></e></args></fc></r></a></e><e ldsrc="1032"><a><l><n>msgIcon</n></l><r><new><type typename="Bitmap" /><init ldsrc="1032"><list><e><bo><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::AppPath</n></l><r><lit str="images\\\\\\ico_error.png" /></r></bo></e></list></init></new></r></a></e></ifbk></if><Decls><d name="msgForm" ldsrc="1035"><type typename="DotNET::UtnEmall::Client::PresentationLayer::MessageForm" /><i ldsrc="1035"><e><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::MessageForm" /></new></e></i></d></Decls><e ldsrc="1036"><a><l><bo op="m"><l><n>msgForm</n></l><r><n>Owner</n></r></bo></l><r><n>this</n></r></a></e><e ldsrc="1037"><a><l><bo op="m"><l><n>msgForm</n></l><r><n>FormTitle</n></r></bo></l><r><n>msgTitle</n></r></a></e><e ldsrc="1038"><a><l><bo op="m"><l><n>msgForm</n></l><r><n>Icon</n></r></bo></l><r><n>msgIcon</n></r></a></e><e ldsrc="1039"><a><l><bo op="m"><l><bo op="m"><l><n>msgForm</n></l><r><n>LabelMessage</n></r></bo></l><r><n>Text</n></r></bo></l><r><n>msgText</n></r></a></e><e ldsrc="1040"><fc><l><bo op="m"><l><n>msgForm</n></l><r><n>ShowDialog</n></r></bo></l><args /></fc></e></bk></writecode></r></a></e></else></if><documentation short=" Get the data&#xD;&#xA;" /><Decls><d name="fieldName" ldsrc="1045"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1045"><e><new><type typename="XplIName" /><init ldsrc="1045"><list><e><bo op="m"><l><n>form</n></l><r><n>EnterDataFieldName</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="methodName" ldsrc="1046"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1046"><e><n>functionName</n></e></i></d></Decls><Decls><d name="dataType" ldsrc="1047"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1047"><e><fc><l><n>GetDataType</n></l><args><e><bo op="m"><l><n>form</n></l><r><n>EnterDataValueType</n></r></bo></e></args></fc></e></i></d></Decls><Decls><d name="valueType" ldsrc="1048"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1048"><e><lit str="0" type="null" /></e></i></d></Decls><if ldsrc="1049"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>dataType</n></l><r><n>Length</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="1050,1052"><e ldsrc="1051"><a><l><n>valueType</n></l><r><new><type typename="XplIName" /><init ldsrc="1051"><list><e><n>dataType</n></e></list></init></new></r></a></e></ifbk></if><Decls><d name="serviceCall" ldsrc="1054"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1054"><e><writecode ldsrc="1054"><e><fc><l><n>$valueType</n></l><args><e><fc><l><bo op="m"><l><bo op="m"><l><n>$fieldName</n></l><r><n>Text</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e></args></fc></e></writecode></e></i></d></Decls><documentation short=" cambiar por tipo de control, si es boolean, propiedad checked&#xD;&#xA;" /><if ldsrc="1056"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>EnterDataValueType</n></r></bo></l><r><lit str="4" type="integer" /></r></bo></boolean><ifbk ldsrc="1057,1059"><e ldsrc="1058"><a><l><n>serviceCall</n></l><r><writecode ldsrc="1058"><e><bo op="m"><l><n>$fieldName</n></l><r><n>Checked</n></r></bo></e></writecode></r></a></e></ifbk></if><if ldsrc="1060"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>EnterDataValueType</n></r></bo></l><r><lit str="3" type="integer" /></r></bo></boolean><ifbk ldsrc="1061,1063"><e ldsrc="1062"><a><l><n>serviceCall</n></l><r><writecode ldsrc="1062"><e><fc><l><n>$valueType</n></l><args><e><fc><l><bo op="m"><l><bo op="m"><l><n>$fieldName</n></l><r><n>Text</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e><e><n>culture</n></e></args></fc></e></writecode></r></a></e></ifbk></if><documentation short=" Verificación de tipo de control para envío de datos a servidor&#xD;&#xA;" /><Decls><d name="enviarDatosCondition" ldsrc="1066"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1066"><e><writecode ldsrc="1066"><e><lit str="true" type="bool" /></e></writecode></e></i></d></Decls><if ldsrc="1068"><boolean><bo op="EQ"><l><bo op="m"><l><n>dataType</n></l><r><n>Length</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="1069,1072"><e ldsrc="1070"><a><l><n>serviceCall</n></l><r><writecode ldsrc="1070"><e><fc><l><bo op="m"><l><bo op="m"><l><n>$fieldName</n></l><r><n>Text</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></e></writecode></r></a></e><e ldsrc="1071"><a><l><n>enviarDatosCondition</n></l><r><writecode ldsrc="1071"><e><bo op="GR"><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>$fieldName</n></l><r><n>Text</n></r></bo></l><r><n>Trim</n></r></bo></l><args /></fc></l><r><n>Length</n></r></bo></l><r><lit str="0" type="integer" /></r></bo></e></writecode></r></a></e></ifbk></if><e ldsrc="1124"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1075"><bk><Decls><d name="entityId" ldsrc="1076"><type typename="$INTEGER$" /><i ldsrc="1076"><e><lit str="0" type="integer" /></e></i></d></Decls><if ldsrc="1077"><boolean><bo op="m"><l><n>localDataEntity</n></l><r><n>IsList</n></r></bo></boolean><ifbk ldsrc="1077,1079"><e ldsrc="1078"><a><l><n>entityId</n></l><r><bo op="m"><l><cast><e><b><l><bo op="m"><l><n>localDataEntity</n></l><r><n>IEntityList</n></r></bo></l><args><e><lit str="0" type="integer" /></e></args></b></e><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::IEntity" /><pi ref="true" /></type></cast></l><r><n>Id</n></r></bo></r></a></e></ifbk><else ldsrc="1079"><e ldsrc="1080"><a><l><n>entityId</n></l><r><bo op="m"><l><bo op="m"><l><n>localDataEntity</n></l><r><n>Entity</n></r></bo></l><r><n>Id</n></r></bo></r></a></e></else></if><Decls><d name="serviceClass" ldsrc="1083"><type ispointer="true"><dt typename="$serviceName" /><pi ref="true" /></type><i ldsrc="1083"><e><new><type typename="$serviceName" /></new></e></i></d></Decls><documentation short=" Verificar tipo de control&#xD;&#xA;" /><if ldsrc="1085"><boolean><n>$enviarDatosCondition</n></boolean><ifbk ldsrc="1086,1122"><documentation short=" Check if there's a connection available&#xD;&#xA;" /><if ldsrc="1088"><boolean><n>Connection::IsConnected</n></boolean><ifbk ldsrc="1089,1117"><e ldsrc="1090"><a><l><n>Cursor::Current</n></l><r><n>Cursors::WaitCursor</n></r></a></e><documentation short=" Statistic usage data&#xD;&#xA;" /><Decls><d name="start" ldsrc="1092"><type typename="zoe::lang::DateTime" /><i ldsrc="1092"><e><n>zoe::lang::DateTime::Now</n></e></i></d></Decls><documentation short=" Web service call&#xD;&#xA;" /><Decls><d name="result" ldsrc="1094"><type typename="$BOOLEAN$" /><i ldsrc="1094"><e><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>$methodName</n></r></bo></l><args><e><n>entityId</n></e><e><n>$serviceCall</n></e><e><lit /></e><e><n>Connection::Session</n></e></args></fc></e></i></d></Decls><documentation short=" Statistic usage data&#xD;&#xA;" /><Decls><d name="stop" ldsrc="1097"><type typename="zoe::lang::DateTime" /><i ldsrc="1097"><e><n>zoe::lang::DateTime::Now</n></e></i></d></Decls><Decls><d name="userAction" ldsrc="1099"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /><pi ref="true" /></type><i ldsrc="1099"><e><new><type typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /></new></e></i></d></Decls><Decls><d name="userActionDataAccess" ldsrc="1101"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /><pi ref="true" /></type><i ldsrc="1101"><e><new><type typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /></new></e></i></d></Decls><documentation short=" Fill statistical data&#xD;&#xA;" /><e ldsrc="1106"><a><l><bo op="m"><l><n>userAction</n></l><r><n>ActionType</n></r></bo></l><r><fc><l><n>DotNET::System::Convert::ToInt32</n></l><args><e><n>DotNET::UtnEmall::Client::PresentationLayer::StatisticsActionType::ServiceConsumption</n></e></args></fc></r></a></e><e ldsrc="1107"><a><l><bo op="m"><l><n>userAction</n></l><r><n>Start</n></r></bo></l><r><n>start</n></r></a></e><e ldsrc="1108"><a><l><bo op="m"><l><n>userAction</n></l><r><n>Stop</n></r></bo></l><r><n>stop</n></r></a></e><e ldsrc="1109"><a><l><bo op="m"><l><n>userAction</n></l><r><n>IdService</n></r></bo></l><r><n>$serviceID</n></r></a></e><documentation short=" Save the current statistic&#xD;&#xA;" /><e ldsrc="1112"><fc><l><bo op="m"><l><n>userActionDataAccess</n></l><r><n>Save</n></r></bo></l><args><e><n>userAction</n></e></args></fc></e><e ldsrc="1114"><a><l><n>Cursor::Current</n></l><r><n>Cursors::Default</n></r></a></e><e ldsrc="1116"><n>$callNextForm</n></e></ifbk><else ldsrc="1118"><e ldsrc="1120"><fc><l><n>ShowErrorMessage</n></l><args><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="5" type="integer" /></e></args></fc></e><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="2" type="integer" /></e></args></fc></e></args></fc></e></else></if></ifbk></if></bk></writecode></e></args></fc></e></ifbk></if><documentation short="if &quot;Enter&quot;&#xD;&#xA;" /><Decls><d name="finalFormMsg" ldsrc="1127"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1127"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><if ldsrc="1128"><boolean><bo op="AND"><l><bo op="m"><l><n>form</n></l><r><n>FinalForm</n></r></bo></l><r><bo op="NOTEQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Enter" /></r></bo></r></bo></boolean><ifbk ldsrc="1129,1138"><e ldsrc="1137"><a><l><n>finalFormMsg</n></l><r><writecode ldsrc="1130"><bk><Decls><d name="msgForm" ldsrc="1131"><type typename="DotNET::UtnEmall::Client::PresentationLayer::MessageForm" /><i ldsrc="1131"><e><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::MessageForm" /></new></e></i></d></Decls><e ldsrc="1132"><a><l><bo op="m"><l><n>msgForm</n></l><r><n>Owner</n></r></bo></l><r><n>this</n></r></a></e><e ldsrc="1133"><a><l><bo op="m"><l><n>msgForm</n></l><r><n>FormTitle</n></r></bo></l><r><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="7" type="integer" /></e></args></fc></r></a></e><e ldsrc="1134"><a><l><bo op="m"><l><n>msgForm</n></l><r><n>Icon</n></r></bo></l><r><new><type typename="Bitmap" /><init ldsrc="1134"><list><e><bo><l><n>DotNET::UtnEmall::Client::PresentationLayer::Utilities::AppPath</n></l><r><lit str="images\\\\\\ico_help.png" /></r></bo></e></list></init></new></r></a></e><e ldsrc="1135"><a><l><bo op="m"><l><bo op="m"><l><n>msgForm</n></l><r><n>LabelMessage</n></r></bo></l><r><n>Text</n></r></bo></l><r><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="4" type="integer" /></e></args></fc></r></a></e><e ldsrc="1136"><fc><l><bo op="m"><l><n>msgForm</n></l><r><n>ShowDialog</n></r></bo></l><args /></fc></e></bk></writecode></r></a></e></ifbk></if><e ldsrc="1193"><a><l><n>declarations</n></l><r><writecode ldsrc="1141"><classmembers><documentation short=" Load all items to show in the listView&#xD;&#xA;" /><Function name="Form_KeyDown" ldsrc="1144,1144"><Parameters><P name="sender" number="1"><type ispointer="true" ldsrc="1144"><dt typename="$OBJECT$" /><pi ref="true" /></type></P><P name="e" number="2"><type ispointer="true" ldsrc="1144"><dt typename="KeyEventArgs" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /><FunctionBody ldsrc="1144,1192"><if ldsrc="1145"><boolean><fc><l><bo op="m"><l><bo op="m"><l><n>e</n></l><r><n>KeyCode</n></r></bo></l><r><n>Equals</n></r></bo></l><args><e><n>Keys::Enter</n></e></args></fc></boolean><ifbk ldsrc="1146,1181"><try ldsrc="1147"><trybk ldsrc="1147,1171"><e ldsrc="1148"><n>$formBlockCode</n></e><e ldsrc="1149"><n>$finalFormMsg</n></e><if ldsrc="1151"><boolean><n>FinalizeService</n></boolean><ifbk ldsrc="1152,1159"><if ldsrc="1153"><boolean><bo op="NOTEQ"><l><n>SourceForm</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1154,1157"><e ldsrc="1155"><a><l><bo op="m"><l><n>SourceForm</n></l><r><n>FinalizeService</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="1156"><a><l><bo op="m"><l><n>SourceForm</n></l><r><n>GoBackToBegin</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e></ifbk></if><e ldsrc="1158"><fc><l><bo op="m"><l><n>this</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if><if ldsrc="1161"><boolean><n>GoBackToBegin</n></boolean><ifbk ldsrc="1162,1169"><if ldsrc="1163"><boolean><bo op="NOTEQ"><l><n>SourceForm</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1164,1168"><e ldsrc="1165"><a><l><bo op="m"><l><n>SourceForm</n></l><r><n>FinalizeService</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e><e ldsrc="1166"><a><l><bo op="m"><l><n>SourceForm</n></l><r><n>GoBackToBegin</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="1167"><fc><l><bo op="m"><l><n>this</n></l><r><n>Close</n></r></bo></l><args /></fc></e></ifbk></if></ifbk></if></trybk><catchbk><init ldsrc="1172"><d name="formatError" ldsrc="1172"><type typename="FormatException" /></d></init><bk ldsrc="1173,1176"><e ldsrc="1174"><a><l><n>Cursor::Current</n></l><r><n>Cursors::Default</n></r></a></e><e ldsrc="1175"><fc><l><n>ShowErrorMessage</n></l><args><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="6" type="integer" /></e></args></fc></e><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="2" type="integer" /></e></args></fc></e></args></fc></e></bk></catchbk><catchbk><init ldsrc="1177"><d name="error" ldsrc="1177"><type typename="Exception" /></d></init><bk ldsrc="1177,1180"><e ldsrc="1178"><a><l><n>Cursor::Current</n></l><r><n>Cursors::Default</n></r></a></e><e ldsrc="1179"><fc><l><n>ShowErrorMessage</n></l><args><e><bo op="m"><l><n>error</n></l><r><n>Message</n></r></bo></e><e><fc><l><n>DotNET::UtnEmall::Client::PresentationLayer::MessageForm::GetMessage</n></l><args><e><lit str="2" type="integer" /></e></args></fc></e></args></fc></e></bk></catchbk></try></ifbk></if><if ldsrc="1183"><boolean><fc><l><bo op="m"><l><bo op="m"><l><n>e</n></l><r><n>KeyCode</n></r></bo></l><r><n>Equals</n></r></bo></l><args><e><n>Keys::Down</n></e></args></fc></boolean><ifbk ldsrc="1184,1186"><e ldsrc="1185"><a><l><bo op="m"><l><n>this</n></l><r><n>AutoScrollPosition</n></r></bo></l><r><new><type typename="Point" /><init ldsrc="1185"><list><e><lit str="0" type="integer" /></e><e><bo><l><uo><u><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>AutoScrollPosition</n></r></bo></l><r><n>Y</n></r></bo></u></uo></l><r><lit str="10" type="integer" /></r></bo></e></list></init></new></r></a></e></ifbk></if><if ldsrc="1188"><boolean><fc><l><bo op="m"><l><bo op="m"><l><n>e</n></l><r><n>KeyCode</n></r></bo></l><r><n>Equals</n></r></bo></l><args><e><n>Keys::Up</n></e></args></fc></boolean><ifbk ldsrc="1189,1191"><e ldsrc="1190"><a><l><bo op="m"><l><n>this</n></l><r><n>AutoScrollPosition</n></r></bo></l><r><new><type typename="Point" /><init ldsrc="1190"><list><e><lit str="0" type="integer" /></e><e><bo op="min"><l><uo><u><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>AutoScrollPosition</n></r></bo></l><r><n>Y</n></r></bo></u></uo></l><r><lit str="10" type="integer" /></r></bo></e></list></init></new></r></a></e></ifbk></if></FunctionBody></Function></classmembers></writecode></r></a></e><e ldsrc="1195"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>clase</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><n>declarations</n></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></FunctionBody></Function><Function name="GetDataType" internalname="GetDataType#10" access="public" storage="static" ldsrc="1199,1199"><Parameters><P name="dataType" number="1"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="1199" /></P></Parameters><ReturnType ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1199,1220"><switch ldsrc="1200"><e><n>dataType</n></e><case ldsrc="1201"><e><lit str="1" type="integer" /></e><bk><documentation short="string&#xD;&#xA;return &quot;Convert::ToString&quot;;&#xD;&#xA;" /><return ldsrc="1204,1204"><lit /></return><jump ldsrc="1205" /></bk></case><case ldsrc="1206"><e><lit str="2" type="integer" /></e><bk><documentation short="float&#xD;&#xA;" /><return ldsrc="1208,1208"><lit str="Convert::ToSingle" /></return><jump ldsrc="1209" /></bk></case><case ldsrc="1210"><e><lit str="3" type="integer" /></e><bk><documentation short="DateTime&#xD;&#xA;" /><return ldsrc="1212,1212"><lit str="Convert::ToDateTime" /></return><jump ldsrc="1213" /></bk></case><case ldsrc="1214"><e><lit str="4" type="integer" /></e><bk><documentation short="Boolean&#xD;&#xA;" /><return ldsrc="1216,1216"><lit str="Convert::ToBoolean" /></return><jump ldsrc="1217" /></bk></case><case ldsrc="1218"><e><empty /></e><bk><return ldsrc="1218,1218"><lit str="0" type="null" /></return></bk></case></switch></FunctionBody></Function><Function name="GenerateProxy" internalname="GenerateProxy#11" access="public" storage="static" ldsrc="1224,1224"><Parameters><P name="data" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.CustomerServiceData" ldsrc="1224"><dt typename="CustomerServiceData" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplNode"><dt typename="XplNode" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1225,1503"><documentation short=" Generate a skeleton for the class that includes a method for start and end&#xD;&#xA;" /><Decls><d name="serviceName" ldsrc="1227"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1227"><e><new><type typename="XplIName" /><init ldsrc="1227"><list><e><bo op="m"><l><bo op="m"><l><n>data</n></l><r><n>ServiceName</n></r></bo></l><r><n>Identifier</n></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="storeNamespace" ldsrc="1228"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1228"><e><new><type typename="XplIName" /><init ldsrc="1228"><list><e><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>get_name</n></r></bo></l><args /></fc></e></list></init></new></e></i></d></Decls><Decls><d name="webServiceEntityNamespace" ldsrc="1229"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1229"><e><bo><l><bo><l><lit str="http://schemas.datacontract.org/2004/07/UtnEmall.Store" /></l><r><bo op="m"><l><n>data</n></l><r><n>StoreID</n></r></bo></r></bo></l><r><lit str=".EntityModel" /></r></bo></e></i></d></Decls><Decls><d name="serviceClass" ldsrc="1231"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="1231"><e><writecode ldsrc="1231"><class name="$serviceName" access="public" isinterface="true" ldsrc="1232,1240"><e ldsrc="1233"><fc><l><n>SALGenerator::GenerateWSProxy</n></l><args><e><lit str="http://tempuri.org/" /></e><e><n>$webServiceEntityNamespace</n></e></args></fc></e><documentation short=" Se genera la conexiòn con el SmartClient&#xD;&#xA;" /><e ldsrc="1235"><fc><l><n>SCLGenerator::SetNamespace</n></l><args><e><n>$storeNamespace</n></e><e><lit str="true" type="bool" /></e></args></fc></e><e ldsrc="1236"><fc><l><n>SCLGenerator::GenerateAccessFacades</n></l><args><e><lit str="http://tempuri.org/" /></e><e><n>$webServiceEntityNamespace</n></e><e><lit str="true" type="bool" /></e></args></fc></e><Function name="ServiceInitiated" access="public" ldsrc="1238,1238"><Parameters><P name="customerSessionID" number="1"><type ispointer="true" ldsrc="1238"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /></Function><Function name="ServiceClosed" access="public" ldsrc="1239,1239"><Parameters><P name="customerSessionID" number="1"><type ispointer="true" ldsrc="1239"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" /></Function></class></writecode></e></i></d></Decls><documentation short=" To store generated functions names&#xD;&#xA;" /><Decls><d name="generatedFunctions" ldsrc="1244"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="1244"><e><new><type typename="ArrayList" /></new></e></i></d></Decls><documentation short=" Define the proxy name for the rest of the methods&#xD;&#xA;" /><Decls><d name="businessProxyClass" ldsrc="1247"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1247"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1248"><fc><l><bo op="m"><l><n>businessProxyClass</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo><l><lit str="Store" /></l><r><fc><l><bo op="m"><l><bo op="m"><l><n>data</n></l><r><n>StoreID</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></r></bo></l><r><lit str="InfrastructureService" /></r></bo></e></args></fc></e><Decls><d name="functionName" ldsrc="1249"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1249"><e><lit str="0" type="null" /></e></i></d></Decls><documentation short=" Add a method for every DataSource linked to a list form&#xD;&#xA; CollectionOf{Nombre de entidades del origen de datos}^ Get{Nombre origen de datos}ListFor{Nombre Formulario al q esta enlazado} (..)&#xD;&#xA;" /><for ldsrc="1253,1253"><init><dl><d name="ds" ldsrc="1253"><type typename="DataSource" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>DataSources</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1254,1290"><for ldsrc="1255,1255"><init><dl><d name="rel" ldsrc="1255"><type typename="Relation" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1256,1289"><if ldsrc="1257"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>ds</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="1258,1281"><for ldsrc="1259,1259"><init><dl><d name="targetForm" ldsrc="1259"><type typename="Form" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Forms</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1260,1280"><if ldsrc="1261"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="1262,1279"><documentation short=" Create the generic List&lt;FOO&gt;&#xD;&#xA;" /><Decls><d name="entityType" ldsrc="1264"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1264"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1265"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></fc></e><Decls><d name="arrayListType" ldsrc="1266"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1266"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1267"><fc><l><bo op="m"><l><n>arrayListType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></args></fc></e><Decls><d name="arrayListIName" ldsrc="1268"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1268"><e><new><type typename="XplIName" /><init ldsrc="1268"><list><e><bo><l><lit str="CollectionOf" /></l><r><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="1270"><a><l><n>functionName</n></l><r><new><type typename="XplIName" /><init ldsrc="1270"><list><e><bo><l><bo><l><bo><l><lit str="Get" /></l><r><bo op="m"><l><bo op="m"><l><n>ds</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="ListFor" /></r></bo></l><r><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></r></bo></e></list></init></new></r></a></e><Decls><d name="businessFunctionIName" ldsrc="1271"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1271"><e><new><type typename="XplIName" /><init ldsrc="1271"><list><e><bo><l><lit str="GetCollectionOf" /></l><r><bo op="m"><l><bo op="m"><l><n>ds</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="1278"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1273"><classmembers><e ldsrc="1275"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$arrayListIName</n></e><e><t ispointer="true"><dt typename="$entityType" /><pi ref="true" /></t></e></args></fc></e><Function name="$functionName" access="public" ldsrc="1277,1277"><Parameters><P name="customerSessionID" number="1"><type ispointer="true" ldsrc="1277"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$arrayListType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></forblock></for></ifbk><else ldsrc="1282"><if ldsrc="1284"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>ds</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="1285,1287" /></if></else></if></forblock></for></forblock></for><for ldsrc="1292,1292"><init><dl><d name="sourceForm" ldsrc="1292"><type typename="Form" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Forms</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1293,1501"><e ldsrc="1294"><fc><l><n>Console::WriteLine</n></l><args><e><bo><l><lit str="Form: " /></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></args></fc></e><if ldsrc="1295"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Type</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk><e ldsrc="1296"><fc><l><n>Console::WriteLine</n></l><args><e><bo><l><lit str="Form Type: " /></l><r><bo op="m"><l><n>sourceForm</n></l><r><n>Type</n></r></bo></r></bo></e></args></fc></e></ifbk></if><if ldsrc="1298"><boolean><bo op="EQ"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Type</n></r></bo></l><r><lit str="Menu" /></r></bo></boolean><ifbk ldsrc="1299,1365"><documentation short=" Add a method for every list form linked from a list form&#xD;&#xA; Get{Nombre entidad de lo q llega al formulario}ListFrom{Nombre menu origen}For{Nombre menu destino}( int {id del registro seleccionado en el form origen}(....);&#xD;&#xA; Check that both are list menues&#xD;&#xA;" /><for ldsrc="1303,1303"><init><dl><d name="rel" ldsrc="1303"><type typename="Relation" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1304,1364"><if ldsrc="1305"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="1306,1363"><Decls><d name="optionOutputTable" ldsrc="1307"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1307"><e><lit /></e></i></d></Decls><Decls><d name="esOutputNull" ldsrc="1308"><type typename="$BOOLEAN$" /><i ldsrc="1308"><e><lit str="false" type="bool" /></e></i></d></Decls><documentation short="Recorrer las opciones del menu&#xD;&#xA;" /><for ldsrc="1310,1310"><init><dl><d name="menuOption" ldsrc="1310"><type typename="FieldTemplate" /></d></dl></init><condition><bo op="m"><l><n>sourceForm</n></l><r><n>FieldsTemplate</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1311,1324"><if ldsrc="1312"><boolean><bo op="EQ"><l><bo op="m"><l><n>menuOption</n></l><r><n>FieldName</n></r></bo></l><r><bo op="m"><l><n>rel</n></l><r><n>Option</n></r></bo></r></bo></boolean><ifbk ldsrc="1313,1323"><if ldsrc="1314"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>menuOption</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1315,1317"><e ldsrc="1316"><a><l><n>esOutputNull</n></l><r><lit str="true" type="bool" /></r></a></e></ifbk><else ldsrc="1318"><e ldsrc="1320"><a><l><n>optionOutputTable</n></l><r><bo op="m"><l><bo op="m"><l><n>menuOption</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></a></e></else></if><jump ldsrc="1322" /></ifbk></if></forblock></for><documentation short="Recorrer los formularios de destino&#xD;&#xA;" /><for ldsrc="1327,1327"><init><dl><d name="targetForm" ldsrc="1327"><type typename="Form" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Forms</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1328,1362"><documentation short="if(rel.Target == targetForm.Name.Identifier &amp;&amp; targetForm.Type != &quot;Enter&quot; &amp;&amp; targetForm.Type != &quot;Menu&quot;)&#xD;&#xA;if(rel.Target == targetForm.Name.Identifier &amp;&amp; (!(sourceForm.InputTable.Identifier == optionOutputTable ) ))&#xD;&#xA;" /><if ldsrc="1331"><boolean><bo op="AND"><l><bo op="AND"><l><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><uo op="not"><u><n>esOutputNull</n></u></uo></r></bo></l><r><uo op="not"><u><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>optionOutputTable</n></r></bo></u></uo></r></bo></boolean><ifbk ldsrc="1332,1361"><documentation short=" Create the generic List&lt;FOO&gt;&#xD;&#xA; Assemble the Entity for the TargetForm and the business &#xD;&#xA;" /><Decls><d name="entityType" ldsrc="1335"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1335"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1336"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></fc></e><documentation short=" Assemble the type for the generic instance&#xD;&#xA;" /><Decls><d name="arrayListType" ldsrc="1339"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1339"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1340"><fc><l><bo op="m"><l><n>arrayListType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="arrayListIName" ldsrc="1341"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1341"><e><new><type typename="XplIName" /><init ldsrc="1341"><list><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the name of the web method and its parameters, considering&#xD;&#xA; that the &quot;targetForm.InputTable.Identifier&quot; should be cut into a version&#xD;&#xA; without &quot;Entity&quot; at the end.&#xD;&#xA;" /><e ldsrc="1346"><a><l><n>functionName</n></l><r><new><type typename="XplIName" /><init ldsrc="1346"><list><e><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="Get" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></l><r><lit str="ListFrom" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="For" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></r></a></e><Decls><d name="idName" ldsrc="1347"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1347"><e><new><type typename="XplIName" /><init ldsrc="1347"><list><e><bo><l><lit str="idSelected" /></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="businessObjectFunctionName" ldsrc="1348"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1348"><e><new><type typename="XplIName" /><init ldsrc="1348"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="0" type="integer" /></e><e><bo op="min"><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Length</n></r></bo></l><r><lit str="6" type="integer" /></r></bo></e></args></fc></r></bo></l><r><lit str="By" /></r></bo></l><r><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="0" type="integer" /></e><e><bo op="min"><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Length</n></r></bo></l><r><lit str="6" type="integer" /></r></bo></e></args></fc></r></bo></e></list></init></new></e></i></d></Decls><if ldsrc="1350"><boolean><uo op="not"><u><fc><l><bo op="m"><l><n>generatedFunctions</n></l><r><n>Contains</n></r></bo></l><args><e><bo op="m"><l><n>functionName</n></l><r><n>Identifier</n></r></bo></e></args></fc></u></uo></boolean><ifbk ldsrc="1350,1359"><e ldsrc="1351"><fc><l><bo op="m"><l><n>generatedFunctions</n></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>functionName</n></l><r><n>Identifier</n></r></bo></e></args></fc></e><e ldsrc="1358"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1353"><classmembers><e ldsrc="1355"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$arrayListIName</n></e><e><t typename="$entityType" /></e></args></fc></e><Function name="$functionName" access="public" ldsrc="1357,1357"><Parameters><P name="$idName" number="1"><type typename="$INTEGER$" ldsrc="1357" /></P><P name="customerSessionID" number="2"><type ispointer="true" ldsrc="1357"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$arrayListType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></ifbk></if></forblock></for></ifbk></if></forblock></for></ifbk></if><if ldsrc="1367"><boolean><bo op="EQ"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Type</n></r></bo></l><r><lit str="List" /></r></bo></boolean><ifbk ldsrc="1368,1408"><documentation short=" Add a method for every list form linked from a list form&#xD;&#xA; Get{Nombre entidad de lo q llega al formulario}ListFrom{Nombre menu origen}For{Nombre menu destino}( int {id del registro seleccionado en el form origen}(....);&#xD;&#xA; Check that both are list menues&#xD;&#xA;" /><for ldsrc="1372,1372"><init><dl><d name="rel" ldsrc="1372"><type typename="Relation" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1373,1407"><if ldsrc="1374"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="1375,1406"><for ldsrc="1376,1376"><init><dl><d name="targetForm" ldsrc="1376"><type typename="Form" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Forms</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1377,1405"><if ldsrc="1378"><boolean><bo op="AND"><l><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><uo op="not"><u><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></u></uo></r></bo></boolean><ifbk ldsrc="1379,1404"><documentation short=" Create the generic List&lt;FOO&gt;&#xD;&#xA; Assemble the Entity for the TargetForm and the business&#xD;&#xA;" /><Decls><d name="entityType" ldsrc="1382"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1382"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1383"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></e></args></fc></e><documentation short=" Assemble the type for the generic instance&#xD;&#xA;" /><Decls><d name="arrayListType" ldsrc="1386"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1386"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1387"><fc><l><bo op="m"><l><n>arrayListType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="arrayListIName" ldsrc="1388"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1388"><e><new><type typename="XplIName" /><init ldsrc="1388"><list><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the name of the web method and its parameters, considering&#xD;&#xA; that the &quot;targetForm.InputTable.Identifier&quot; should be cut into a version&#xD;&#xA; without &quot;Entity&quot; at the end.&#xD;&#xA;" /><e ldsrc="1393"><a><l><n>functionName</n></l><r><new><type typename="XplIName" /><init ldsrc="1393"><list><e><bo><l><bo><l><bo><l><bo><l><bo><l><lit str="Get" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></l><r><lit str="ListFrom" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="For" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></r></a></e><Decls><d name="idName" ldsrc="1394"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1394"><e><new><type typename="XplIName" /><init ldsrc="1394"><list><e><bo><l><lit str="idSelected" /></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="businessObjectFunctionName" ldsrc="1395"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1395"><e><new><type typename="XplIName" /><init ldsrc="1395"><list><e><bo><l><bo><l><bo><l><lit str="GetCollectionOf" /></l><r><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="0" type="integer" /></e><e><bo op="min"><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>targetForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Length</n></r></bo></l><r><lit str="6" type="integer" /></r></bo></e></args></fc></r></bo></l><r><lit str="By" /></r></bo></l><r><fc><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="0" type="integer" /></e><e><bo op="min"><l><bo op="m"><l><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>InputTable</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><n>Length</n></r></bo></l><r><lit str="6" type="integer" /></r></bo></e></args></fc></r></bo></e></list></init></new></e></i></d></Decls><e ldsrc="1403"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1398"><classmembers><e ldsrc="1400"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$arrayListIName</n></e><e><t typename="$entityType" /></e></args></fc></e><Function name="$functionName" access="public" ldsrc="1402,1402"><Parameters><P name="$idName" number="1"><type typename="$INTEGER$" ldsrc="1402" /></P><P name="customerSessionID" number="2"><type ispointer="true" ldsrc="1402"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true"><dt typename="$arrayListType" /><pi ref="true" /></ReturnType></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></forblock></for></ifbk></if></forblock></for></ifbk><else ldsrc="1409"><if ldsrc="1409"><boolean><bo op="EQ"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Type</n></r></bo></l><r><lit str="Enter" /></r></bo></boolean><ifbk ldsrc="1410,1500"><documentation short=" Add a Method for each data saving form&#xD;&#xA;Save{Nombre del DataSource}(int {id registro q llega}, {tipo del dato ingresado} {valor del dato ingresado}, {session del usuario})&#xD;&#xA;" /><for ldsrc="1413,1413"><init><dl><d name="rel" ldsrc="1413"><type typename="Relation" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1414,1499"><if ldsrc="1415"><boolean><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Source</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="1416,1498"><for ldsrc="1417,1417"><init><dl><d name="dataStorage" ldsrc="1417"><type typename="DataSource" /></d></dl></init><condition><bo op="m"><l><n>data</n></l><r><n>DataSources</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1418,1497"><if ldsrc="1419"><boolean><bo op="AND"><l><bo op="EQ"><l><bo op="m"><l><n>rel</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>dataStorage</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><bo op="m"><l><n>dataStorage</n></l><r><n>Storage</n></r></bo></r></bo></boolean><ifbk ldsrc="1420,1496"><documentation short=" Create the generic List&lt;FOO&gt;&#xD;&#xA; Assemble the Entity for the TargetForm&#xD;&#xA;" /><Decls><d name="entityType" ldsrc="1423"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1423"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1424"><fc><l><bo op="m"><l><n>entityType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><bo op="m"><l><bo op="m"><l><n>dataStorage</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="Entity" /></r></bo></e></args></fc></e><documentation short=" Assemble the type for the generic instance&#xD;&#xA;" /><Decls><d name="arrayListType" ldsrc="1427"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1427"><e><new><type typename="XplType" /></new></e></i></d></Decls><e ldsrc="1428"><fc><l><bo op="m"><l><n>arrayListType</n></l><r><n>set_typename</n></r></bo></l><args><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></args></fc></e><Decls><d name="arrayListIName" ldsrc="1429"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1429"><e><new><type typename="XplIName" /><init ldsrc="1429"><list><e><bo><l><lit str="CollectionOf" /></l><r><fc><l><bo op="m"><l><n>entityType</n></l><r><n>get_typename</n></r></bo></l><args /></fc></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the name of the web method and its parameters&#xD;&#xA;" /><e ldsrc="1432"><a><l><n>functionName</n></l><r><new><type typename="XplIName" /><init ldsrc="1432"><list><e><bo><l><bo><l><bo><l><lit str="Save" /></l><r><bo op="m"><l><bo op="m"><l><n>dataStorage</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></l><r><lit str="For" /></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></r></a></e><Decls><d name="idName" ldsrc="1433"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1433"><e><new><type typename="XplIName" /><init ldsrc="1433"><list><e><bo><l><lit str="idSelected" /></l><r><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>OutputTable</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><Decls><d name="valueType" ldsrc="1434"><type ispointer="true"><dt typename="XplType" /><pi ref="true" /></type><i ldsrc="1434"><e><new><type typename="XplType" /></new></e></i></d></Decls><Decls><d name="valueIName" ldsrc="1435"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1435"><e><new><type typename="XplIName" /></new></e></i></d></Decls><Decls><d name="businessFunctionName" ldsrc="1436"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1436"><e><new><type typename="XplIName" /><init ldsrc="1436"><list><e><bo><l><lit str="Update" /></l><r><bo op="m"><l><bo op="m"><l><n>dataStorage</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></e></i></d></Decls><documentation short=" Establish the table name&#xD;&#xA;" /><Decls><d name="tableName" ldsrc="1439"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1439"><e><bo op="m"><l><bo op="m"><l><n>dataStorage</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></e></i></d></Decls><documentation short=" Establish the data type base on the int field of the form&#xD;&#xA;" /><Decls><d name="valueTypeInt" ldsrc="1442"><type typename="$INTEGER$" /><i ldsrc="1442"><e><bo op="m"><l><n>sourceForm</n></l><r><n>EnterDataValueType</n></r></bo></e></i></d></Decls><switch ldsrc="1443"><e><n>valueTypeInt</n></e><case ldsrc="1446"><e><lit str="1" type="integer" /></e><bk><documentation short=" STRING&#xD;&#xA;" /><e ldsrc="1448"><a><l><n>valueType</n></l><r><fc><l><n>ZoeHelper::MakeTypeFromString</n></l><args><e><bo><l><lit str="^_" /></l><r><n>NativeTypes::String</n></r></bo></e></args></fc></r></a></e><e ldsrc="1449"><a><l><bo op="m"><l><n>valueIName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="StringValue" /></r></a></e><jump ldsrc="1450" /><documentation short=" INTEGER&#xD;&#xA;" /></bk></case><case ldsrc="1452"><e><lit str="2" type="integer" /></e><bk><e ldsrc="1453"><fc><l><bo op="m"><l><n>valueType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::Float</n></e></args></fc></e><e ldsrc="1454"><a><l><bo op="m"><l><n>valueIName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="NumericValue" /></r></a></e><jump ldsrc="1455" /><documentation short=" DATETIME&#xD;&#xA;" /></bk></case><case ldsrc="1457"><e><lit str="3" type="integer" /></e><bk><e ldsrc="1458"><fc><l><bo op="m"><l><n>valueType</n></l><r><n>set_typename</n></r></bo></l><args><e><lit str="DateTime" /></e></args></fc></e><e ldsrc="1459"><a><l><bo op="m"><l><n>valueIName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="DateTimeValue" /></r></a></e><jump ldsrc="1460" /><documentation short=" BOOLEAN&#xD;&#xA;" /></bk></case><case ldsrc="1462"><e><lit str="4" type="integer" /></e><bk><e ldsrc="1463"><fc><l><bo op="m"><l><n>valueType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::Boolean</n></e></args></fc></e><e ldsrc="1464"><a><l><bo op="m"><l><n>valueIName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="BooleanValue" /></r></a></e><jump ldsrc="1465" /></bk></case><case ldsrc="1466"><e><empty /></e><bk><e ldsrc="1467"><fc><l><bo op="m"><l><n>valueType</n></l><r><n>set_typename</n></r></bo></l><args><e><n>NativeTypes::Integer</n></e></args></fc></e><e ldsrc="1468"><a><l><bo op="m"><l><n>valueIName</n></l><r><n>Identifier</n></r></bo></l><r><lit str="IntegerValue" /></r></a></e><jump ldsrc="1469" /></bk></case></switch><documentation short=" Create the method&#xD;&#xA;" /><Decls><d name="exists" ldsrc="1473"><type typename="$BOOLEAN$" /><i ldsrc="1473"><e><lit str="false" type="bool" /></e></i></d></Decls><for ldsrc="1474,1474"><init><dl><d name="node" ldsrc="1474"><type ispointer="true"><dt typename="XplNode" /><pi ref="true" /></type></d></dl></init><condition><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>Children</n></r></bo></l><args /></fc></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1475,1484"><if ldsrc="1476"><boolean><is><e><n>node</n></e><type typename="XplFunction" /></is></boolean><ifbk ldsrc="1477,1483"><Decls><d name="nodeFunc" ldsrc="1478"><type ispointer="true"><dt typename="XplFunction" /><pi ref="true" /></type><i ldsrc="1478"><e><cast><e><n>node</n></e><type ispointer="true"><dt typename="XplFunction" /><pi ref="true" /></type></cast></e></i></d></Decls><if ldsrc="1479"><boolean><bo op="EQ"><l><fc><l><bo op="m"><l><n>nodeFunc</n></l><r><n>get_name</n></r></bo></l><args /></fc></l><r><bo op="m"><l><n>functionName</n></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="1480,1482"><e ldsrc="1481"><a><l><n>exists</n></l><r><lit str="true" type="bool" /></r></a></e></ifbk></if></ifbk></if></forblock></for><if ldsrc="1486"><boolean><uo op="not"><u><n>exists</n></u></uo></boolean><ifbk ldsrc="1487,1495"><e ldsrc="1494"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>serviceClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1489"><classmembers><e ldsrc="1491"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$arrayListIName</n></e><e><t typename="$entityType" /></e></args></fc></e><Function name="$functionName" access="public" ldsrc="1493,1493"><Parameters><P name="$idName" number="1"><type typename="$INTEGER$" ldsrc="1493" /></P><P name="value" number="2"><type typename="$valueType" ldsrc="1493" /></P><P name="Key" number="3"><type ispointer="true" ldsrc="1493"><dt typename="$STRING$" /><pi ref="true" /></type></P><P name="customerSessionID" number="4"><type ispointer="true" ldsrc="1493"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$BOOLEAN$" /></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e></ifbk></if></ifbk></if></forblock></for></ifbk></if></forblock></for></ifbk></if></else></if></forblock></for><return ldsrc="1502,1502"><n>serviceClass</n></return></FunctionBody></Function><Function name="CallRemoteService" internalname="CallRemoteService#12" access="public" storage="static" ldsrc="1506,1511"><Parameters><P name="fillNextDataEntity" number="1"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="1506" /></P><P name="serviceName" number="2"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName" ldsrc="1507"><dt typename="XplIName" /><pi ref="true" /></type></P><P name="serviceID" number="3"><type typename="$INTEGER$" typeStr="$INTEGER$" ldsrc="1508" /></P><P name="methodName" number="4"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplExpression" ldsrc="1509"><dt typename="XplExpression" /><pi ref="true" /></type></P><P name="arrayListIName" number="5"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName" ldsrc="1510"><dt typename="XplIName" /><pi ref="true" /></type></P><P name="entityTypeName" number="6"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName" ldsrc="1511"><dt typename="XplIName" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplFunctionBody"><dt typename="XplFunctionBody" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1512,1563"><Decls><d name="formBlockCode" ldsrc="1513"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1513"><e><fc><l><n>XplFunctionBody::new_bk</n></l><args /></fc></e></i></d></Decls><Decls><d name="newDataEntity" ldsrc="1514"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1514"><e><writecode ldsrc="1514"><e><a><l><n>localDataEntity</n></l><r><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /></new></r></a></e></writecode></e></i></d></Decls><Decls><d name="fillLocalCondition" ldsrc="1515"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1515"><e><writecode ldsrc="1515"><e><bo op="OR"><l><bo op="EQ"><l><n>SourceForm</n></l><r><lit str="0" type="null" /></r></bo></l><r><bo op="EQ"><l><bo op="m"><l><n>SourceForm</n></l><r><n>NextDataEntity</n></r></bo></l><r><lit str="0" type="null" /></r></bo></r></bo></e></writecode></e></i></d></Decls><e ldsrc="1516"><a><l><n>entityTypeName</n></l><r><new><type typename="XplIName" /><init ldsrc="1516"><list><e><bo><l><bo><l><bo><l><lit str="DotNET::UtnEmall::Store" /></l><r><n>storeID</n></r></bo></l><r><lit str="::EntityModel::" /></r></bo></l><r><bo op="m"><l><n>entityTypeName</n></l><r><n>Identifier</n></r></bo></r></bo></e></list></init></new></r></a></e><if ldsrc="1518"><boolean><n>fillNextDataEntity</n></boolean><ifbk ldsrc="1519,1522"><e ldsrc="1520"><a><l><n>newDataEntity</n></l><r><writecode ldsrc="1520"><e><a><l><n>NextDataEntity</n></l><r><new><type typename="DotNET::UtnEmall::Client::PresentationLayer::DataEntity" /></new></r></a></e></writecode></r></a></e><e ldsrc="1521"><a><l><n>fillLocalCondition</n></l><r><writecode ldsrc="1521"><e><lit str="true" type="bool" /></e></writecode></r></a></e></ifbk></if><e ldsrc="1560"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1524"><bk><if ldsrc="1525"><boolean><n>$fillLocalCondition</n></boolean><ifbk ldsrc="1526,1559"><e ldsrc="1527"><a><l><n>Cursor::Current</n></l><r><n>Cursors::WaitCursor</n></r></a></e><e ldsrc="1529"><fc><l><n>UtnEmall::Utils::List::NewCollection</n></l><args><e><n>$arrayListIName</n></e><e><t ispointer="true"><dt typename="$entityTypeName" /><pi ref="true" /></t></e></args></fc></e><documentation short=" Web service access&#xD;&#xA;" /><Decls><d name="serviceClass" ldsrc="1531"><type ispointer="true"><dt typename="$serviceName" /><pi ref="true" /></type><i ldsrc="1531"><e><new><type typename="$serviceName" /></new></e></i></d></Decls><e ldsrc="1532"><n>$newDataEntity</n></e><documentation short=" Statistic usage data&#xD;&#xA;" /><Decls><d name="start" ldsrc="1535"><type typename="zoe::lang::DateTime" /><i ldsrc="1535"><e><n>zoe::lang::DateTime::Now</n></e></i></d></Decls><documentation short=" Web service call&#xD;&#xA;" /><e ldsrc="1538"><n>$methodName</n></e><documentation short=" Statistic usage data&#xD;&#xA;" /><Decls><d name="stop" ldsrc="1541"><type typename="zoe::lang::DateTime" /><i ldsrc="1541"><e><n>zoe::lang::DateTime::Now</n></e></i></d></Decls><Decls><d name="userAction" ldsrc="1543"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /><pi ref="true" /></type><i ldsrc="1543"><e><new><type typename="DotNET::UtnEmall::Client::EntityModel::UserActionClientDataEntity" /></new></e></i></d></Decls><Decls><d name="userActionDataAccess" ldsrc="1545"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /><pi ref="true" /></type><i ldsrc="1545"><e><new><type typename="DotNET::UtnEmall::Client::BusinessLogic::UserActionClientData" /></new></e></i></d></Decls><documentation short=" Fill statistical data&#xD;&#xA;" /><e ldsrc="1550"><a><l><bo op="m"><l><n>userAction</n></l><r><n>ActionType</n></r></bo></l><r><fc><l><n>DotNET::System::Convert::ToInt32</n></l><args><e><n>DotNET::UtnEmall::Client::PresentationLayer::StatisticsActionType::ServiceConsumption</n></e></args></fc></r></a></e><e ldsrc="1551"><a><l><bo op="m"><l><n>userAction</n></l><r><n>Start</n></r></bo></l><r><n>start</n></r></a></e><e ldsrc="1552"><a><l><bo op="m"><l><n>userAction</n></l><r><n>Stop</n></r></bo></l><r><n>stop</n></r></a></e><e ldsrc="1553"><a><l><bo op="m"><l><n>userAction</n></l><r><n>IdService</n></r></bo></l><r><n>$serviceID</n></r></a></e><documentation short=" Save the current statistic&#xD;&#xA;" /><e ldsrc="1556"><fc><l><bo op="m"><l><n>userActionDataAccess</n></l><r><n>Save</n></r></bo></l><args><e><n>userAction</n></e></args></fc></e><e ldsrc="1558"><a><l><n>Cursor::Current</n></l><r><n>Cursors::Default</n></r></a></e></ifbk></if></bk></writecode></e></args></fc></e><return ldsrc="1562,1562"><n>formBlockCode</n></return></FunctionBody></Function><documentation short=" Generates a new class for custom list with TemplateFields&#xD;&#xA;" /><Function name="GenerateCustomListClass" internalname="GenerateCustomListClass#13" access="public" storage="static" ldsrc="1566,1566"><Parameters><P name="listClassName" number="1"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName" ldsrc="1566"><dt typename="XplIName" /><pi ref="true" /></type></P><P name="form" number="2"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="1566"><dt typename="Form" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="1566,1676"><Decls><d name="customListClass" ldsrc="1567"><type ispointer="true"><dt typename="XplClass" /><pi ref="true" /></type><i ldsrc="1567"><e><writecode ldsrc="1567"><class name="$listClassName" access="public" ldsrc="1568,1605"><Inherits><c name="UserControl" access="public" ldsrc="1568" /></Inherits><Field name="entity" ldsrc="1571,1571"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::IEntity" /><pi ref="true" /></type></Field><Field name="parent" ldsrc="1572,1572"><type ispointer="true"><dt typename="Form" /><pi ref="true" /></type></Field><Field name="tag" ldsrc="1573,1573"><type ispointer="true"><dt typename="$OBJECT$" /><pi ref="true" /></type></Field><Property name="Entity" access="public" ldsrc="1575"><type ispointer="true"><dt typename="DotNET::UtnEmall::Client::EntityModel::IEntity" /><pi ref="true" /></type><body ldsrc="1576,1585"><Get ldsrc="1578,1580"><return ldsrc="1579,1579"><n>entity</n></return></Get><Set ldsrc="1582,1584"><e ldsrc="1583"><a><l><n>entity</n></l><r><n>value</n></r></a></e></Set></body></Property><Property name="Tag" access="public" ldsrc="1586"><type ispointer="true"><dt typename="$OBJECT$" /><pi ref="true" /></type><body ldsrc="1587,1596"><Get ldsrc="1589,1591"><return ldsrc="1590,1590"><n>tag</n></return></Get><Set ldsrc="1593,1595"><e ldsrc="1594"><a><l><n>tag</n></l><r><n>value</n></r></a></e></Set></body></Property><Function name="$listClassName" access="public" ldsrc="1598,1598"><Parameters><P name="parent" number="1"><type ispointer="true" ldsrc="1598"><dt typename="Form" /><pi ref="true" /></type></P></Parameters><ReturnType /><FunctionBody ldsrc="1599,1603"><e ldsrc="1600"><a><l><bo op="m"><l><n>this</n></l><r><n>parent</n></r></bo></l><r><n>parent</n></r></a></e><e ldsrc="1602"><fc><l><n>Initialize</n></l><args /></fc></e></FunctionBody></Function></class></writecode></e></i></d></Decls><documentation short=" Custom item class components&#xD;&#xA;" /><Decls><d name="initBlock" ldsrc="1609"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1609"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><Decls><d name="templates" ldsrc="1610"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="1610"><e><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></e></i></d></Decls><Decls><d name="yPos" ldsrc="1611"><type typename="$INTEGER$" /><i ldsrc="1611"><e><lit str="0" type="integer" /></e></i></d></Decls><Decls><d name="i" ldsrc="1612"><type typename="$INTEGER$" /><i ldsrc="1612"><e><lit str="0" type="integer" /></e></i></d></Decls><Decls><d name="itemsListCount" ldsrc="1613"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1613"><e><lit str="4" /></e></i></d></Decls><for ldsrc="1615,1615"><init><dl><d name="field" ldsrc="1615"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><n>templates</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1615,1662"><Decls><d name="fieldName" ldsrc="1616"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1616"><e><bo op="m"><l><n>field</n></l><r><n>FieldMemberName</n></r></bo></e></i></d></Decls><Decls><d name="propertyName" ldsrc="1617"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1617"><e><bo op="m"><l><n>field</n></l><r><n>PropertyName</n></r></bo></e></i></d></Decls><Decls><d name="fieldType" ldsrc="1618"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1618"><e><new><type typename="XplIName" /><init ldsrc="1618"><list><e><lit str="Label" /></e></list></init></new></e></i></d></Decls><if ldsrc="1620"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Menu" /></r></bo></boolean><ifbk ldsrc="1621,1625"><e ldsrc="1622"><a><l><n>itemsListCount</n></l><r><lit str="8" /></r></a></e><e ldsrc="1623"><a><l><n>fieldName</n></l><r><new><type typename="XplIName" /><init ldsrc="1623"><list><e><lit str="menuOption" /></e></list></init></new></r></a></e><if ldsrc="1624"><boolean><bo op="EQ"><l><n>i</n></l><r><lit str="1" type="integer" /></r></bo></boolean><ifbk><jump ldsrc="1624" /></ifbk></if></ifbk></if><if ldsrc="1627"><boolean><bo op="EQ"><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><lit str="Image" /></r></bo></boolean><ifbk ldsrc="1628,1630"><e ldsrc="1629"><a><l><n>fieldType</n></l><r><new><type typename="XplIName" /><init ldsrc="1629"><list><e><lit str="PictureBox" /></e></list></init></new></r></a></e></ifbk></if><e ldsrc="1649"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>customListClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1633"><classmembers><Field name="$fieldName" ldsrc="1635,1635"><type ispointer="true"><dt typename="$fieldType" /><pi ref="true" /></type></Field><Property name="$propertyName" access="public" ldsrc="1637"><type ispointer="true"><dt typename="$fieldType" /><pi ref="true" /></type><body ldsrc="1638,1647"><Get ldsrc="1640,1642"><return ldsrc="1641,1641"><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></return></Get><Set ldsrc="1644,1646"><e ldsrc="1645"><a><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>value</n></r></a></e></Set></body></Property></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="1651"><a><l><n>yPos</n></l><r><bo op="mul"><l><n>i</n></l><r><lit str="20" type="integer" /></r></bo></r></a></e><if ldsrc="1652"><boolean><bo op="EQ"><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><lit str="Image" /></r></bo></boolean><ifbk ldsrc="1652,1655"><Decls><d name="menuExp" ldsrc="1653"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1653"><e><lit str="0" type="null" /></e></i></d></Decls><documentation short=" writecode(new Bitmap(DotNET::UtnEmall::Client::PresentationLayer::Utilities::AppPath + &quot;images\\\\\\ico_mall.png&quot;));&#xD;&#xA;" /><e ldsrc="1654"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>initBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>GetImageField</n></l><args><e><n>field</n></e><e><lit str="true" type="bool" /></e><e><n>menuExp</n></e><e><lit str="false" type="bool" /></e></args></fc></e></args></fc></e></ifbk><else ldsrc="1656"><e ldsrc="1658"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>initBlock</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><n>GetLabelField</n></l><args><e><n>field</n></e><e><lit str="true" type="bool" /></e><e><lit str="0" type="null" /></e><e><lit str="false" type="bool" /></e></args></fc></e></args></fc></e></else></if><e ldsrc="1661"><uo op="inc"><u><n>i</n></u></uo></e></forblock></for><e ldsrc="1673"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>customListClass</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><fc><l><bo op="m"><l><writecode ldsrc="1663"><classmembers><Function name="Initialize" ldsrc="1665,1665"><ReturnType typename="$VOID$" /><FunctionBody ldsrc="1665,1672"><e ldsrc="1666"><a><l><bo op="m"><l><n>this</n></l><r><n>Width</n></r></bo></l><r><bo op="m"><l><n>parent</n></l><r><n>Width</n></r></bo></r></a></e><Decls><d name="itemsCount" ldsrc="1667"><type typename="$INTEGER$" /><i ldsrc="1667"><e><cast><e><fc><l><n>Single::Parse</n></l><args><e><n>$itemsListCount</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><e ldsrc="1670"><a><l><bo op="m"><l><n>this</n></l><r><n>Height</n></r></bo></l><r><bo op="div"><l><bo op="m"><l><n>parent</n></l><r><n>Height</n></r></bo></l><r><n>itemsCount</n></r></bo></r></a></e><e ldsrc="1671"><n>$initBlock</n></e></FunctionBody></Function></classmembers></writecode></l><r><n>Children</n></r></bo></l><args /></fc></e></args></fc></e><e ldsrc="1675"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>context</n></l><r><n>CurrentNamespace</n></r></bo></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><n>customListClass</n></e></args></fc></e></FunctionBody></Function><Function name="GetFontType" internalname="GetFontType#14" access="public" storage="static" ldsrc="1679,1679"><Parameters><P name="field" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.FieldTemplate" ldsrc="1679"><dt typename="FieldTemplate" /><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" ftype="expression" typeStr="$VOID$" /><FunctionBody ldsrc="1680,1723"><Decls><d name="fontType" ldsrc="1681"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1681"><e><lit str="0" type="null" /></e></i></d></Decls><if ldsrc="1682"><boolean><bo op="m"><l><n>field</n></l><r><n>Bold</n></r></bo></boolean><ifbk ldsrc="1683,1692"><if ldsrc="1684"><boolean><bo op="EQ"><l><n>fontType</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1685,1687"><e ldsrc="1686"><a><l><n>fontType</n></l><r><writecode ldsrc="1686"><e><n>FontStyle::Bold</n></e></writecode></r></a></e></ifbk><else ldsrc="1688"><e ldsrc="1690"><a><l><n>fontType</n></l><r><writecode ldsrc="1690"><e><bo op="BOR"><l><n>$fontType</n></l><r><n>FontStyle::Bold</n></r></bo></e></writecode></r></a></e></else></if></ifbk></if><if ldsrc="1694"><boolean><bo op="m"><l><n>field</n></l><r><n>Italic</n></r></bo></boolean><ifbk ldsrc="1695,1704"><if ldsrc="1696"><boolean><bo op="EQ"><l><n>fontType</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1697,1699"><e ldsrc="1698"><a><l><n>fontType</n></l><r><writecode ldsrc="1698"><e><n>FontStyle::Italic</n></e></writecode></r></a></e></ifbk><else ldsrc="1700"><e ldsrc="1702"><a><l><n>fontType</n></l><r><writecode ldsrc="1702"><e><bo op="BOR"><l><n>$fontType</n></l><r><n>FontStyle::Italic</n></r></bo></e></writecode></r></a></e></else></if></ifbk></if><if ldsrc="1706"><boolean><bo op="m"><l><n>field</n></l><r><n>Underline</n></r></bo></boolean><ifbk ldsrc="1707,1716"><if ldsrc="1708"><boolean><bo op="EQ"><l><n>fontType</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1709,1711"><e ldsrc="1710"><a><l><n>fontType</n></l><r><writecode ldsrc="1710"><e><n>FontStyle::Underline</n></e></writecode></r></a></e></ifbk><else ldsrc="1712"><e ldsrc="1714"><a><l><n>fontType</n></l><r><writecode ldsrc="1714"><e><bo op="BOR"><l><n>$fontType</n></l><r><n>FontStyle::Underline</n></r></bo></e></writecode></r></a></e></else></if></ifbk></if><if ldsrc="1718"><boolean><bo op="EQ"><l><n>fontType</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1719,1721"><e ldsrc="1720"><a><l><n>fontType</n></l><r><writecode ldsrc="1720"><e><n>FontStyle::Regular</n></e></writecode></r></a></e></ifbk></if><return ldsrc="1722,1722"><n>fontType</n></return></FunctionBody></Function><Function name="GetImageField" internalname="GetImageField#15" access="public" storage="static" ldsrc="1726,1726"><Parameters><P name="field" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.FieldTemplate" ldsrc="1726"><dt typename="FieldTemplate" /><pi ref="true" /></type></P><P name="declarePictureBox" number="2"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="1726" /></P><P name="loadImg" number="3"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplExpression" ldsrc="1726"><dt typename="XplExpression" /><pi ref="true" /></type></P><P name="calcTop" number="4"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="1726" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplFunctionBody"><dt typename="XplFunctionBody" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1727,1797"><Decls><d name="fieldName" ldsrc="1728"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1728"><e><bo op="m"><l><n>field</n></l><r><n>FieldMemberName</n></r></bo></e></i></d></Decls><Decls><d name="propertyName" ldsrc="1729"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1729"><e><bo op="m"><l><n>field</n></l><r><n>PropertyName</n></r></bo></e></i></d></Decls><Decls><d name="x" ldsrc="1731"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1731"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>X</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="y" ldsrc="1732"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1732"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>Y</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="imgW" ldsrc="1734"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1734"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>Width</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="imgH" ldsrc="1735"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1735"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>Height</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="formBlockCode" ldsrc="1737"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1737"><e><fc><l><n>XplFunctionBody::new_bk</n></l><args /></fc></e></i></d></Decls><Decls><d name="topExp" ldsrc="1739"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1739"><e><writecode ldsrc="1739"><e><new><type typename="Point" /><init ldsrc="1739"><list><e><n>xPos</n></e><e><bo><l><bo><l><n>yPos</n></l><r><bo op="m"><l><n>header</n></l><r><n>Bottom</n></r></bo></r></bo></l><r><lit str="26" type="integer" /></r></bo></e></list></init></new></e></writecode></e></i></d></Decls><if ldsrc="1741"><boolean><uo op="not"><u><n>calcTop</n></u></uo></boolean><ifbk ldsrc="1742,1744"><e ldsrc="1743"><a><l><n>topExp</n></l><r><writecode ldsrc="1743"><e><new><type typename="Point" /><init ldsrc="1743"><list><e><n>xPos</n></e><e><n>yPos</n></e></list></init></new></e></writecode></r></a></e></ifbk></if><if ldsrc="1746"><boolean><n>declarePictureBox</n></boolean><ifbk ldsrc="1747,1752"><e ldsrc="1751"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1749"><bk><e ldsrc="1750"><a><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><new><type typename="PictureBox" /></new></r></a></e></bk></writecode></e></args></fc></e></ifbk></if><e ldsrc="1777"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1755"><bk><Decls><d name="xPos" ldsrc="1756"><type typename="$INTEGER$" /><i ldsrc="1756"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$x</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Width</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="yPos" ldsrc="1759"><type typename="$INTEGER$" /><i ldsrc="1759"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$y</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Height</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><documentation short="Point fieldLocation = new Point(xPos, yPos + header.Bottom + 26);&#xD;&#xA;" /><Decls><d name="fieldLocation" ldsrc="1763"><type typename="Point" /><i ldsrc="1763"><e><n>$topExp</n></e></i></d></Decls><documentation short="Point fieldLocation = new Point(xPos, yPos);&#xD;&#xA;" /><Decls><d name="imgWidth" ldsrc="1766"><type typename="$INTEGER$" /><i ldsrc="1766"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$imgW</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Width</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="imgHeight" ldsrc="1769"><type typename="$INTEGER$" /><i ldsrc="1769"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$imgH</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Height</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="fieldSize" ldsrc="1772"><type typename="Size" /><i ldsrc="1772"><e><new><type typename="Size" /><init ldsrc="1772"><list><e><n>imgWidth</n></e><e><n>imgHeight</n></e></list></init></new></e></i></d></Decls><e ldsrc="1774"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Location</n></r></bo></l><r><n>fieldLocation</n></r></a></e><e ldsrc="1775"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Size</n></r></bo></l><r><n>fieldSize</n></r></a></e><e ldsrc="1776"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>SizeMode</n></r></bo></l><r><n>PictureBoxSizeMode::StretchImage</n></r></a></e></bk></writecode></e></args></fc></e><if ldsrc="1779"><boolean><bo op="NOTEQ"><l><n>loadImg</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1780,1785"><e ldsrc="1784"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1782"><bk><e ldsrc="1783"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Image</n></r></bo></l><r><n>$loadImg</n></r></a></e></bk></writecode></e></args></fc></e></ifbk></if><if ldsrc="1787"><boolean><n>declarePictureBox</n></boolean><ifbk ldsrc="1788,1794"><e ldsrc="1793"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1790"><e><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></e></args></fc></e></writecode></e></args></fc></e></ifbk></if><return ldsrc="1796,1796"><n>formBlockCode</n></return></FunctionBody></Function><Function name="GetLabelField" internalname="GetLabelField#16" access="public" storage="static" ldsrc="1800,1800"><Parameters><P name="field" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.FieldTemplate" ldsrc="1800"><dt typename="FieldTemplate" /><pi ref="true" /></type></P><P name="declareLabel" number="2"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="1800" /></P><P name="loadText" number="3"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplExpression" ldsrc="1800"><dt typename="XplExpression" /><pi ref="true" /></type></P><P name="calcTop" number="4"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" ldsrc="1800" /></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplFunctionBody"><dt typename="XplFunctionBody" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="1801,1899"><Decls><d name="formBlockCode" ldsrc="1802"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1802"><e><fc><l><n>XplFunctionBody::new_bk</n></l><args /></fc></e></i></d></Decls><Decls><d name="fieldName" ldsrc="1803"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1803"><e><bo op="m"><l><n>field</n></l><r><n>FieldMemberName</n></r></bo></e></i></d></Decls><Decls><d name="propertyName" ldsrc="1804"><type ispointer="true"><dt typename="XplIName" /><pi ref="true" /></type><i ldsrc="1804"><e><bo op="m"><l><n>field</n></l><r><n>PropertyName</n></r></bo></e></i></d></Decls><Decls><d name="x" ldsrc="1806"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1806"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>X</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="y" ldsrc="1807"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1807"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>Y</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="textW" ldsrc="1808"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1808"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>Width</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="textH" ldsrc="1809"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1809"><e><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>Height</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>Replace</n></r></bo></l><args><e><lit str="," /></e><e><lit str="." /></e></args></fc></e></i></d></Decls><Decls><d name="fontColor" ldsrc="1811"><type typename="$LONG$" /><i ldsrc="1811"><e><bo op="m"><l><n>field</n></l><r><n>FontColor</n></r></bo></e></i></d></Decls><Decls><d name="backColor" ldsrc="1812"><type typename="$LONG$" /><i ldsrc="1812"><e><bo op="m"><l><n>field</n></l><r><n>BackColor</n></r></bo></e></i></d></Decls><Decls><d name="fontName" ldsrc="1813"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1813"><e><bo op="m"><l><n>field</n></l><r><n>FontName</n></r></bo></e></i></d></Decls><Decls><d name="fontSize" ldsrc="1814"><type typename="$FLOAT$" /><i ldsrc="1814"><e><bo op="m"><l><n>field</n></l><r><n>FontSize</n></r></bo></e></i></d></Decls><Decls><d name="fontType" ldsrc="1815"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1815"><e><fc><l><n>GetFontType</n></l><args><e><n>field</n></e></args></fc></e></i></d></Decls><Decls><d name="blockBackColor" ldsrc="1816"><type ispointer="true"><dt typename="XplFunctionBody" /><pi ref="true" /></type><i ldsrc="1816"><e><new><type typename="XplFunctionBody" /></new></e></i></d></Decls><if ldsrc="1818"><boolean><bo op="GR"><l><n>backColor</n></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="1819,1825"><e ldsrc="1824"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>blockBackColor</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1821"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>BackColor</n></r></bo></l><r><fc><l><n>System::Drawing::Color::FromArgb</n></l><args><e><n>$backColor</n></e></args></fc></r></a></e></writecode></e></args></fc></e></ifbk></if><if ldsrc="1827"><boolean><n>declareLabel</n></boolean><ifbk ldsrc="1828,1833"><e ldsrc="1832"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1830"><bk><e ldsrc="1831"><a><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><new><type typename="Label" /></new></r></a></e></bk></writecode></e></args></fc></e></ifbk></if><Decls><d name="topExp" ldsrc="1835"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1835"><e><writecode ldsrc="1835"><e><new><type typename="Point" /><init ldsrc="1835"><list><e><n>xPos</n></e><e><bo><l><bo><l><n>yPos</n></l><r><bo op="m"><l><n>header</n></l><r><n>Bottom</n></r></bo></r></bo></l><r><lit str="26" type="integer" /></r></bo></e></list></init></new></e></writecode></e></i></d></Decls><if ldsrc="1837"><boolean><uo op="not"><u><n>calcTop</n></u></uo></boolean><ifbk ldsrc="1838,1840"><e ldsrc="1839"><a><l><n>topExp</n></l><r><writecode ldsrc="1839"><e><new><type typename="Point" /><init ldsrc="1839"><list><e><n>xPos</n></e><e><n>yPos</n></e></list></init></new></e></writecode></r></a></e></ifbk></if><documentation short=" Set the current alignment&#xD;&#xA;" /><Decls><d name="labelAlign" ldsrc="1843"><type ispointer="true"><dt typename="XplExpression" /><pi ref="true" /></type><i ldsrc="1843"><e><writecode ldsrc="1843"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>TextAlign</n></r></bo></l><r><n>ContentAlignment::TopLeft</n></r></a></e></writecode></e></i></d></Decls><switch ldsrc="1845"><e><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></e><case ldsrc="1847"><e><lit str="Numeric" /></e><bk><e ldsrc="1848"><a><l><n>labelAlign</n></l><r><writecode ldsrc="1848"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>TextAlign</n></r></bo></l><r><n>ContentAlignment::TopRight</n></r></a></e></writecode></r></a></e><jump ldsrc="1849" /></bk></case><case ldsrc="1850"><e><empty /></e><bk><e ldsrc="1851"><a><l><n>labelAlign</n></l><r><writecode ldsrc="1851"><e><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>TextAlign</n></r></bo></l><r><n>ContentAlignment::TopLeft</n></r></a></e></writecode></r></a></e><jump ldsrc="1852" /></bk></case></switch><e ldsrc="1881"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1856"><bk><Decls><d name="xPos" ldsrc="1857"><type typename="$INTEGER$" /><i ldsrc="1857"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$x</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Width</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="yPos" ldsrc="1860"><type typename="$INTEGER$" /><i ldsrc="1860"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$y</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Height</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="fieldLocation" ldsrc="1863"><type typename="Point" /><i ldsrc="1863"><e><n>$topExp</n></e></i></d></Decls><e ldsrc="1865"><n>$blockBackColor</n></e><e ldsrc="1866"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>ForeColor</n></r></bo></l><r><fc><l><n>Color::FromArgb</n></l><args><e><n>$fontColor</n></e></args></fc></r></a></e><e ldsrc="1867"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Font</n></r></bo></l><r><new><type typename="Font" /><init ldsrc="1867"><list><e><n>$fontName</n></e><e><n>$fontSize</n></e><e><n>$fontType</n></e></list></init></new></r></a></e><e ldsrc="1868"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Location</n></r></bo></l><r><n>fieldLocation</n></r></a></e><documentation short="Size $fieldSize = new Size(width - this.$fieldName.Left, 20);&#xD;&#xA;" /><Decls><d name="textWidth" ldsrc="1871"><type typename="$INTEGER$" /><i ldsrc="1871"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$textW</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Width</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="textHeight" ldsrc="1874"><type typename="$INTEGER$" /><i ldsrc="1874"><e><cast><e><bo op="mul"><l><fc><l><n>Single::Parse</n></l><args><e><n>$textH</n></e><e><n>DotNET::System::Globalization::NumberStyles::Number</n></e><e><n>DotNET::System::Globalization::NumberFormatInfo::InvariantInfo</n></e></args></fc></l><r><bo op="m"><l><n>this</n></l><r><n>Height</n></r></bo></r></bo></e><type typename="$INTEGER$" /></cast></e></i></d></Decls><Decls><d name="fieldSize" ldsrc="1877"><type typename="Size" /><i ldsrc="1877"><e><new><type typename="Size" /><init ldsrc="1877"><list><e><n>textWidth</n></e><e><n>textHeight</n></e></list></init></new></e></i></d></Decls><e ldsrc="1879"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Size</n></r></bo></l><r><n>fieldSize</n></r></a></e><e ldsrc="1880"><n>$labelAlign</n></e></bk></writecode></e></args></fc></e><if ldsrc="1883"><boolean><bo op="NOTEQ"><l><n>loadText</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="1884,1889"><e ldsrc="1888"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1886"><bk><e ldsrc="1887"><a><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></l><r><n>Text</n></r></bo></l><r><n>$loadText</n></r></a></e></bk></writecode></e></args></fc></e></ifbk></if><if ldsrc="1891"><boolean><n>declareLabel</n></boolean><ifbk ldsrc="1892,1896"><e ldsrc="1895"><fc><l><bo op="m"><l><fc><l><bo op="m"><l><n>formBlockCode</n></l><r><n>Children</n></r></bo></l><args /></fc></l><r><n>InsertAtEnd</n></r></bo></l><args><e><writecode ldsrc="1894"><e><fc><l><bo op="m"><l><bo op="m"><l><n>this</n></l><r><n>Controls</n></r></bo></l><r><n>Add</n></r></bo></l><args><e><bo op="m"><l><n>this</n></l><r><n>$fieldName</n></r></bo></e></args></fc></e></writecode></e></args></fc></e></ifbk></if><return ldsrc="1898,1898"><n>formBlockCode</n></return></FunctionBody></Function><documentation short=" Checks all the FieldsTemplates Numeric ranges&#xD;&#xA;" /><Function name="CheckNumericRanges" internalname="CheckNumericRanges#17" access="public" storage="static" ldsrc="1902,1902"><Parameters><P name="form" number="1" direction="inout"><type ispointer="true" typeStr="^_*_UtnEmall.Utils.Form" ldsrc="1902"><dt ispointer="true"><dt typename="UtnEmall::Utils::Form" /><pi /></dt><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="1903,1926"><for ldsrc="1904,1904"><init><dl><d name="field" ldsrc="1904"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1905,1925"><if ldsrc="1906"><boolean><bo op="GREQ"><l><bo op="m"><l><n>field</n></l><r><n>X</n></r></bo></l><r><lit str="1" type="integer" /></r></bo></boolean><ifbk ldsrc="1907,1909"><e ldsrc="1908"><a><l><bo op="m"><l><n>field</n></l><r><n>X</n></r></bo></l><r><lit str="0.9999f" type="real" /></r></a></e></ifbk></if><if ldsrc="1911"><boolean><bo op="GREQ"><l><bo op="m"><l><n>field</n></l><r><n>Y</n></r></bo></l><r><lit str="1" type="integer" /></r></bo></boolean><ifbk ldsrc="1912,1914"><e ldsrc="1913"><a><l><bo op="m"><l><n>field</n></l><r><n>Y</n></r></bo></l><r><lit str="0.9999f" type="real" /></r></a></e></ifbk></if><if ldsrc="1916"><boolean><bo op="GREQ"><l><bo op="m"><l><n>field</n></l><r><n>Width</n></r></bo></l><r><lit str="1" type="integer" /></r></bo></boolean><ifbk ldsrc="1917,1919"><e ldsrc="1918"><a><l><bo op="m"><l><n>field</n></l><r><n>Width</n></r></bo></l><r><lit str="0.9999f" type="real" /></r></a></e></ifbk></if><if ldsrc="1921"><boolean><bo op="GREQ"><l><bo op="m"><l><n>field</n></l><r><n>Height</n></r></bo></l><r><lit str="1" type="integer" /></r></bo></boolean><ifbk ldsrc="1922,1924"><e ldsrc="1923"><a><l><bo op="m"><l><n>field</n></l><r><n>Height</n></r></bo></l><r><lit str="0.9999f" type="real" /></r></a></e></ifbk></if></forblock></for></FunctionBody></Function><Function name="PreProcessFieldTemplates" internalname="PreProcessFieldTemplates#18" access="public" storage="static" ldsrc="1928,1928"><Parameters><P name="form" number="1" direction="inout"><type ispointer="true" typeStr="^_*_UtnEmall.Utils.Form" ldsrc="1928"><dt ispointer="true"><dt typename="UtnEmall::Utils::Form" /><pi /></dt><pi ref="true" /></type></P></Parameters><ReturnType typename="$VOID$" typeStr="$VOID$" /><FunctionBody ldsrc="1929,2000"><e ldsrc="1930"><a><l><bo op="m"><l><n>form</n></l><r><n>ListClassName</n></r></bo></l><r><new><type typename="XplIName" /><init ldsrc="1930"><list><e><bo><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><lit str="ListUserControl" /></r></bo></e></list></init></new></r></a></e><e ldsrc="1931"><a><l><bo op="m"><l><n>form</n></l><r><n>EnterDataFieldName</n></r></bo></l><r><bo><l><lit str="_" /></l><r><bo op="m"><l><n>form</n></l><r><n>EnterDataFieldName</n></r></bo></r></bo></r></a></e><Decls><d name="fields" ldsrc="1933"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="1933"><e><bo op="m"><l><n>form</n></l><r><n>FieldsTemplate</n></r></bo></e></i></d></Decls><Decls><d name="fieldName" ldsrc="1934"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1934"><e><lit /></e></i></d></Decls><Decls><d name="propertyName" ldsrc="1935"><type ispointer="true"><dt typename="$STRING$" /><pi ref="true" /></type><i ldsrc="1935"><e><lit /></e></i></d></Decls><Decls><d name="i" ldsrc="1936"><type typename="$INTEGER$" /><i ldsrc="1936"><e><lit str="1" type="integer" /></e></i></d></Decls><e ldsrc="1937"><fc><l><n>Console::WriteLine</n></l><args><e><bo><l><lit str="Preproccesing Form: " /></l><r><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></e></args></fc></e><for ldsrc="1939,1939"><init><dl><d name="field" ldsrc="1939"><type ispointer="true"><dt typename="FieldTemplate" /><pi ref="true" /></type></d></dl></init><condition><n>fields</n></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="1940,1984"><e ldsrc="1942"><a><l><n>fieldName</n></l><r><bo><l><bo><l><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="0" type="integer" /></e><e><lit str="1" type="integer" /></e></args></fc></l><r><n>ToLower</n></r></bo></l><args /></fc></l><r><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="1" type="integer" /></e></args></fc></r></bo></l><r><n>i</n></r></bo></r></a></e><e ldsrc="1944"><a><l><n>propertyName</n></l><r><bo><l><bo><l><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="0" type="integer" /></e><e><lit str="1" type="integer" /></e></args></fc></l><r><n>ToUpper</n></r></bo></l><args /></fc></l><r><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>FieldName</n></r></bo></l><r><n>Substring</n></r></bo></l><args><e><lit str="1" type="integer" /></e></args></fc></r></bo></l><r><n>i</n></r></bo></r></a></e><if ldsrc="1946"><boolean><bo op="NOTEQ"><l><bo op="m"><l><n>field</n></l><r><n>MenuText</n></r></bo></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk><e ldsrc="1947"><a><l><bo op="m"><l><n>field</n></l><r><n>MenuText</n></r></bo></l><r><fc><l><n>GetString</n></l><args><e><bo op="m"><l><n>field</n></l><r><n>MenuText</n></r></bo></e></args></fc></r></a></e></ifbk></if><if ldsrc="1949"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Menu" /></r></bo></boolean><ifbk ldsrc="1950,1974"><e ldsrc="1951"><a><l><bo op="m"><l><n>field</n></l><r><n>X</n></r></bo></l><r><lit str="0.2f" type="real" /></r></a></e><e ldsrc="1952"><a><l><bo op="m"><l><n>field</n></l><r><n>Y</n></r></bo></l><r><lit str="0" type="integer" /></r></a></e><e ldsrc="1953"><a><l><bo op="m"><l><n>field</n></l><r><n>Width</n></r></bo></l><r><lit str="0.9999f" type="real" /></r></a></e><e ldsrc="1954"><a><l><bo op="m"><l><n>field</n></l><r><n>Height</n></r></bo></l><r><lit str="0.9999f" type="real" /></r></a></e><e ldsrc="1955"><a><l><bo op="m"><l><n>field</n></l><r><n>FontColor</n></r></bo></l><r><lit str="0" type="integer" /></r></a></e><e ldsrc="1956"><a><l><bo op="m"><l><n>field</n></l><r><n>FontName</n></r></bo></l><r><lit str="Arial" /></r></a></e><e ldsrc="1957"><a><l><bo op="m"><l><n>field</n></l><r><n>FontSize</n></r></bo></l><r><lit str="11.0f" type="real" /></r></a></e><e ldsrc="1958"><a><l><bo op="m"><l><n>field</n></l><r><n>Bold</n></r></bo></l><r><lit str="true" type="bool" /></r></a></e><e ldsrc="1959"><a><l><bo op="m"><l><n>field</n></l><r><n>Italic</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e><e ldsrc="1960"><a><l><bo op="m"><l><n>field</n></l><r><n>Underline</n></r></bo></l><r><lit str="false" type="bool" /></r></a></e><e ldsrc="1961"><a><l><bo op="m"><l><n>field</n></l><r><n>Type</n></r></bo></l><r><lit /></r></a></e><e ldsrc="1962"><a><l><n>fieldName</n></l><r><lit str="menuOption" /></r></a></e><documentation short=" UNCOMMENT THIS IF YOU WANT IMAGES IN MENUS if(i==2)&#xD;&#xA;					{&#xD;&#xA;						field.Type = &quot;Image&quot;;&#xD;&#xA;						field.X = 0.0f;&#xD;&#xA;						field.Y = 0.0f;&#xD;&#xA;						field.Width = 0.1f;&#xD;&#xA;						field.Height = 0.1f;&#xD;&#xA;						field.FieldName = &quot;menuOptionIcon&quot;;&#xD;&#xA;					}" /></ifbk></if><if ldsrc="1976"><boolean><bo op="GREQ"><l><fc><l><bo op="m"><l><fc><l><bo op="m"><l><bo op="m"><l><n>field</n></l><r><n>Y</n></r></bo></l><r><n>ToString</n></r></bo></l><args /></fc></l><r><n>IndexOf</n></r></bo></l><args><e><lit str="E-05" /></e></args></fc></l><r><lit str="0" type="integer" /></r></bo></boolean><ifbk ldsrc="1977,1979"><e ldsrc="1978"><a><l><bo op="m"><l><n>field</n></l><r><n>Y</n></r></bo></l><r><lit str="0.0f" type="real" /></r></a></e></ifbk></if><e ldsrc="1981"><a><l><bo op="m"><l><n>field</n></l><r><n>FieldMemberName</n></r></bo></l><r><new><type typename="XplIName" /><init ldsrc="1981"><list><e><n>fieldName</n></e></list></init></new></r></a></e><e ldsrc="1982"><a><l><bo op="m"><l><n>field</n></l><r><n>PropertyName</n></r></bo></l><r><new><type typename="XplIName" /><init ldsrc="1982"><list><e><n>propertyName</n></e></list></init></new></r></a></e><e ldsrc="1983"><uo op="inc"><u><n>i</n></u></uo></e></forblock></for><documentation short=" Base 64 String decoding&#xD;&#xA;" /><e ldsrc="1987"><a><l><bo op="m"><l><n>form</n></l><r><n>Title</n></r></bo></l><r><fc><l><n>GetString</n></l><args><e><bo op="m"><l><n>form</n></l><r><n>Title</n></r></bo></e></args></fc></r></a></e><e ldsrc="1988"><a><l><bo op="m"><l><n>form</n></l><r><n>EnterDataDescription</n></r></bo></l><r><fc><l><n>GetString</n></l><args><e><bo op="m"><l><n>form</n></l><r><n>EnterDataDescription</n></r></bo></e></args></fc></r></a></e><if ldsrc="1990"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>Type</n></r></bo></l><r><lit str="Enter" /></r></bo></boolean><ifbk ldsrc="1991,1999"><e ldsrc="1992"><a><l><bo op="m"><l><n>form</n></l><r><n>EnterDataControlType</n></r></bo></l><r><new><type typename="XplType" /></new></r></a></e><e ldsrc="1993"><fc><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>EnterDataControlType</n></r></bo></l><r><n>set_typename</n></r></bo></l><args><e><lit str="TextBox" /></e></args></fc></e><if ldsrc="1995"><boolean><bo op="EQ"><l><bo op="m"><l><n>form</n></l><r><n>EnterDataValueType</n></r></bo></l><r><lit str="4" type="integer" /></r></bo></boolean><ifbk ldsrc="1996,1998"><e ldsrc="1997"><fc><l><bo op="m"><l><bo op="m"><l><n>form</n></l><r><n>EnterDataControlType</n></r></bo></l><r><n>set_typename</n></r></bo></l><args><e><lit str="CheckBox" /></e></args></fc></e></ifbk></if></ifbk></if></FunctionBody></Function><documentation short=" Decode Base64 Strings&#xD;&#xA;" /><Function name="GetString" internalname="GetString#19" access="public" storage="static" ldsrc="2003,2003"><Parameters><P name="encodedString" number="1"><type ispointer="true" typeStr="^_$STRING$" ldsrc="2003"><dt typename="$STRING$" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="2003,2009"><if ldsrc="2004"><boolean><bo op="NOTEQ"><l><n>encodedString</n></l><r><lit str="0" type="null" /></r></bo></boolean><ifbk ldsrc="2005,2007"><return ldsrc="2006,2006"><fc><l><bo op="m"><l><n>DotNET::System::Text::Encoding::UTF8</n></l><r><n>GetString</n></r></bo></l><args><e><fc><l><n>DotNET::System::Convert::FromBase64String</n></l><args><e><n>encodedString</n></e></args></fc></e></args></fc></return></ifbk></if><return ldsrc="2008,2008"><lit /></return></FunctionBody></Function><documentation short=" Returns a source forms list for f&#xD;&#xA;" /><Function name="GetSourceFormsFor" internalname="GetSourceFormsFor#20" access="public" storage="static" ldsrc="2011,2011"><Parameters><P name="f" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="2011"><dt typename="Form" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="2012,2030"><Decls><d name="list" ldsrc="2013"><type ispointer="true"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="2013"><e><new><type typename="ArrayList" /></new></e></i></d></Decls><documentation short=" Check the relations searching f as a target&#xD;&#xA;" /><for ldsrc="2016,2016"><init><dl><d name="relation" ldsrc="2016"><type typename="UtnEmall::Utils::Relation" /></d></dl></init><condition><bo op="m"><l><n>storeService</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="2016,2027"><if ldsrc="2017"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>f</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="2017,2026"><documentation short=" Check if it es a form, otherwise ignore it&#xD;&#xA;" /><for ldsrc="2019,2019"><init><dl><d name="sourceForm" ldsrc="2019"><type ispointer="true"><dt typename="Form" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>storeService</n></l><r><n>Forms</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="2020,2025"><if ldsrc="2021"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>sourceForm</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></boolean><ifbk ldsrc="2022,2024"><e ldsrc="2023"><fc><l><bo op="m"><l><n>list</n></l><r><n>Add</n></r></bo></l><args><e><n>sourceForm</n></e></args></fc></e></ifbk></if></forblock></for></ifbk></if><documentation short="if&#xD;&#xA;" /></forblock></for><documentation short="for&#xD;&#xA;" /><return ldsrc="2029,2029"><n>list</n></return></FunctionBody></Function><documentation short=" Returns a Data source (if it exists) for f&#xD;&#xA;" /><Function name="GetDataSourceFor" internalname="GetDataSourceFor#21" access="public" storage="static" ldsrc="2033,2033"><Parameters><P name="f" number="1"><type ispointer="true" typeStr="^_UtnEmall.Utils.Form" ldsrc="2033"><dt typename="Form" /><pi ref="true" /></type></P></Parameters><ReturnType ispointer="true" typeStr="^_UtnEmall.Utils.DataSource"><dt typename="DataSource" /><pi ref="true" /></ReturnType><FunctionBody ldsrc="2034,2050"><documentation short=" Check the relations searching f as a target&#xD;&#xA;" /><for ldsrc="2036,2036"><init><dl><d name="relation" ldsrc="2036"><type typename="UtnEmall::Utils::Relation" /></d></dl></init><condition><bo op="m"><l><n>storeService</n></l><r><n>Relations</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="2036,2047"><if ldsrc="2037"><boolean><bo op="EQ"><l><bo op="m"><l><n>relation</n></l><r><n>Target</n></r></bo></l><r><bo op="m"><l><bo op="m"><l><n>f</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></r></bo></boolean><ifbk ldsrc="2037,2046"><documentation short=" Check if it es a DataSource, otherwise ignore it&#xD;&#xA;" /><for ldsrc="2039,2039"><init><dl><d name="ds" ldsrc="2039"><type ispointer="true"><dt typename="DataSource" /><pi ref="true" /></type></d></dl></init><condition><bo op="m"><l><n>storeService</n></l><r><n>DataSources</n></r></bo></condition><repeat><e><n>_FOR_EACH_</n></e></repeat><forblock ldsrc="2040,2045"><if ldsrc="2041"><boolean><bo op="EQ"><l><bo op="m"><l><bo op="m"><l><n>ds</n></l><r><n>Name</n></r></bo></l><r><n>Identifier</n></r></bo></l><r><bo op="m"><l><n>relation</n></l><r><n>Source</n></r></bo></r></bo></boolean><ifbk ldsrc="2042,2044"><return ldsrc="2043,2043"><n>ds</n></return></ifbk></if></forblock></for></ifbk></if><documentation short="if&#xD;&#xA;" /></forblock></for><documentation short="for&#xD;&#xA;" /><return ldsrc="2049,2049"><lit str="0" type="null" /></return></FunctionBody></Function><documentation short="&#xD;&#xA;" /><e ldsrc="2114"><fc><l><n>ObjectInterpreterBuilder::New</n></l><args><e><n>MyInterpreter</n></e><e><n>CustomerServiceData</n></e></args><bk ldsrc="2053,2114"><e ldsrc="2054"><a><l><n>ServiceName</n></l><r><n>INAME</n></r></a></e><e ldsrc="2055"><a><l><n>StoreID</n></l><r><n>INT</n></r></a></e><e ldsrc="2056"><a><l><n>ServiceID</n></l><r><n>INT</n></r></a></e><e ldsrc="2057"><a><l><n>ServiceDescription</n></l><r><n>STRING</n></r></a></e><e ldsrc="2064"><fc><l><n>Collection</n></l><args><e><n>Relations</n></e></args><bk ldsrc="2058,2064"><e ldsrc="2063"><fc><l><n>Relation</n></l><bk ldsrc="2059,2063"><e ldsrc="2060"><a><l><n>Source</n></l><r><n>STRING</n></r></a></e><e ldsrc="2061"><a><l><n>Option</n></l><r><n>STRING</n></r></a></e><e ldsrc="2062"><a><l><n>Target</n></l><r><n>STRING</n></r></a></e></bk></fc></e></bk></fc></e><e ldsrc="2070"><fc><l><n>Collection</n></l><args><e><n>DataSources</n></e></args><bk ldsrc="2065,2070"><e ldsrc="2069"><fc><l><n>DataSource</n></l><bk ldsrc="2066,2069"><e ldsrc="2067"><a><l><n>Name</n></l><r><n>INAME</n></r></a></e><e ldsrc="2068"><a><l><n>Storage</n></l><r><n>BOOL</n></r></a></e></bk></fc></e></bk></fc></e><e ldsrc="2075"><fc><l><n>Collection</n></l><args><e><n>DataStorages</n></e></args><bk ldsrc="2071,2075"><e ldsrc="2074"><fc><l><n>DataSource</n></l><bk ldsrc="2072,2074"><e ldsrc="2073"><a><l><n>Name</n></l><r><n>INAME</n></r></a></e></bk></fc></e></bk></fc></e><e ldsrc="2113"><fc><l><n>Collection</n></l><args><e><n>Forms</n></e></args><bk ldsrc="2076,2113"><e ldsrc="2112"><fc><l><n>Form</n></l><bk ldsrc="2077,2112"><e ldsrc="2078"><a><l><n>Type</n></l><r><n>STRING</n></r></a></e><e ldsrc="2079"><a><l><n>Name</n></l><r><n>INAME</n></r></a></e><e ldsrc="2080"><a><l><n>IdInputTable</n></l><r><n>INT</n></r></a></e><e ldsrc="2081"><a><l><n>InputTable</n></l><r><n>INAME</n></r></a></e><e ldsrc="2082"><a><l><n>OutputTable</n></l><r><n>INAME</n></r></a></e><e ldsrc="2083"><a><l><n>IsOutputARegister</n></l><r><n>BOOL</n></r></a></e><e ldsrc="2084"><a><l><n>IsInputARegister</n></l><r><n>BOOL</n></r></a></e><e ldsrc="2085"><a><l><n>IdComponent</n></l><r><n>INT</n></r></a></e><e ldsrc="2086"><a><l><n>StartForm</n></l><r><n>BOOL</n></r></a></e><e ldsrc="2087"><a><l><n>FinalForm</n></l><r><n>BOOL</n></r></a></e><e ldsrc="2088"><a><l><n>Title</n></l><r><n>STRING</n></r></a></e><e ldsrc="2089"><a><l><n>EnterDataValueType</n></l><r><n>INT</n></r></a></e><e ldsrc="2090"><a><l><n>EnterDataFieldName</n></l><r><n>STRING</n></r></a></e><e ldsrc="2091"><a><l><n>EnterDataDescription</n></l><r><n>STRING</n></r></a></e><e ldsrc="2111"><fc><l><n>Collection</n></l><args><e><n>FieldsTemplate</n></e></args><bk ldsrc="2092,2111"><e ldsrc="2110"><fc><l><n>FieldTemplate</n></l><bk ldsrc="2093,2110"><e ldsrc="2094"><a><l><n>FieldName</n></l><r><n>STRING</n></r></a></e><e ldsrc="2095"><a><l><n>MenuText</n></l><r><n>STRING</n></r></a></e><e ldsrc="2096"><a><l><n>FontName</n></l><r><n>STRING</n></r></a></e><e ldsrc="2097"><a><l><n>IdComponent</n></l><r><n>INT</n></r></a></e><e ldsrc="2098"><a><l><n>OutputTable</n></l><r><n>INAME</n></r></a></e><e ldsrc="2099"><a><l><n>Bold</n></l><r><n>BOOL</n></r></a></e><e ldsrc="2100"><a><l><n>Italic</n></l><r><n>BOOL</n></r></a></e><e ldsrc="2101"><a><l><n>Underline</n></l><r><n>BOOL</n></r></a></e><e ldsrc="2102"><a><l><n>FontSize</n></l><r><n>FLOAT</n></r></a></e><e ldsrc="2103"><a><l><n>FontColor</n></l><r><n>LONG</n></r></a></e><e ldsrc="2104"><a><l><n>BackColor</n></l><r><n>LONG</n></r></a></e><e ldsrc="2105"><a><l><n>X</n></l><r><n>FLOAT</n></r></a></e><e ldsrc="2106"><a><l><n>Y</n></l><r><n>FLOAT</n></r></a></e><e ldsrc="2107"><a><l><n>Width</n></l><r><n>FLOAT</n></r></a></e><e ldsrc="2108"><a><l><n>Height</n></l><r><n>FLOAT</n></r></a></e><e ldsrc="2109"><a><l><n>Type</n></l><r><n>STRING</n></r></a></e></bk></fc></e></bk></fc></e></bk></fc></e></bk></fc></e></bk></fc></e><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><documentation short="Estructura de datos de soporte&#xD;&#xA;" /><Class name="CustomerServiceData" access="public" isfactory="true" ldsrc="2119,2128"><Field name="ServiceName" access="public" ldsrc="2120,2120"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="StoreID" access="public" ldsrc="2121,2121"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="ServiceID" access="public" ldsrc="2122,2122"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="ServiceDescription" access="public" ldsrc="2123,2123"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Relations" access="public" ldsrc="2124,2124"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="2124"><e><new><type typename="ArrayList" /></new></e></i></Field><Field name="Forms" access="public" ldsrc="2125,2125"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="2125"><e><new><type typename="ArrayList" /></new></e></i></Field><Field name="DataSources" access="public" ldsrc="2126,2126"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="2126"><e><new><type typename="ArrayList" /></new></e></i></Field><Field name="DataStorages" access="public" ldsrc="2127,2127"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="2127"><e><new><type typename="ArrayList" /></new></e></i></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="Form" access="public" isfactory="true" ldsrc="2129,2152"><documentation short="Tipos: &quot;List&quot;, &quot;Show&quot;, &quot;Enter&quot;, &quot;Menu&quot;&#xD;&#xA;" /><Field name="Type" access="public" ldsrc="2132,2132"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Name" access="public"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="InputTable" access="public"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="OutputTable" access="public" ldsrc="2133,2133"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><documentation short="Id de la tabla que usa el formulario (para estadìsticas)&#xD;&#xA;" /><Field name="IdInputTable" access="public" ldsrc="2135,2135"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><documentation short="Indica si la salida y entrada es un registro o una lista&#xD;&#xA;" /><Field name="IsOutputARegister" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="IsInputARegister" access="public" ldsrc="2137,2137"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="IdComponent" access="public" ldsrc="2138,2138"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="StartForm" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="FinalForm" access="public" ldsrc="2139,2139"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><documentation short="Lista de templates de items&#xD;&#xA;" /><Field name="FieldsTemplate" access="public" ldsrc="2141,2141"><type ispointer="true" typeStr="^_DotNET.System.Collections.ArrayList"><dt typename="ArrayList" /><pi ref="true" /></type><i ldsrc="2141"><e><new><type typename="ArrayList" /></new></e></i></Field><documentation short="Tipo de datos del dato a obtener en un formulario EnterSingleData&#xD;&#xA;" /><Field name="EnterDataValueType" access="public" ldsrc="2143,2143"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><documentation short="Nombre del campo en un formulario EnterSingleData&#xD;&#xA;" /><Field name="EnterDataFieldName" access="public" ldsrc="2145,2145"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><documentation short="Descripcion en un formulario EnterSingleData&#xD;&#xA;" /><Field name="EnterDataDescription" access="public" ldsrc="2147,2147"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><documentation short=" Form title&#xD;&#xA;" /><Field name="Title" access="public" ldsrc="2149,2149"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="ListClassName" access="public" ldsrc="2150,2150"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="EnterDataControlType" access="public" ldsrc="2151,2151"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplType"><dt typename="XplType" /><pi ref="true" /></type></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><documentation short="Clase para items template&#xD;&#xA;" /><Class name="FieldTemplate" access="public" isfactory="true" ldsrc="2154,2173"><documentation short="Nombre de campo del template o nombre de opción del menu&#xD;&#xA;" /><Field name="FieldName" access="public" ldsrc="2157,2157"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="IdComponent" access="public" ldsrc="2158,2158"><type typename="$INTEGER$" typeStr="$INTEGER$" /></Field><Field name="OutputTable" access="public" ldsrc="2159,2159"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><documentation short="Texto del menu en el caso de que sea un item para un menu&#xD;&#xA;" /><Field name="MenuText" access="public" ldsrc="2161,2161"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="FontName" access="public" ldsrc="2162,2162"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Type" access="public" ldsrc="2163,2163"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="PropertyName" access="public"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="FieldMemberName" access="public" ldsrc="2164,2164"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><documentation short="Posiciones relativas a la esquina superior izquierda&#xD;&#xA;" /><Field name="X" access="public"><type typename="$FLOAT$" typeStr="$FLOAT$" /></Field><Field name="Y" access="public" ldsrc="2166,2166"><type typename="$FLOAT$" typeStr="$FLOAT$" /></Field><Field name="Bold" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="Italic" access="public"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="Underline" access="public" ldsrc="2167,2167"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Field name="FontSize" access="public" ldsrc="2168,2168"><type typename="$FLOAT$" typeStr="$FLOAT$" /></Field><Field name="FontColor" access="public" ldsrc="2169,2169"><type typename="$LONG$" typeStr="$LONG$" /></Field><Field name="BackColor" access="public" ldsrc="2170,2170"><type typename="$LONG$" typeStr="$LONG$" /></Field><Field name="Width" access="public" ldsrc="2171,2171"><type typename="$FLOAT$" typeStr="$FLOAT$" /></Field><Field name="Height" access="public" ldsrc="2172,2172"><type typename="$FLOAT$" typeStr="$FLOAT$" /></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><documentation short="Clase para DataStorage y DataSource&#xD;&#xA;" /><Class name="DataSource" access="public" isfactory="true" ldsrc="2175,2180"><documentation short="El nombre de la tabla SIN el &quot;Entity&quot;&#xD;&#xA;" /><Field name="Name" access="public" ldsrc="2178,2178"><type ispointer="true" typeStr="^_DotNET.LayerD.CodeDOM.XplIName"><dt typename="XplIName" /><pi ref="true" /></type></Field><Field name="Storage" access="public" ldsrc="2179,2179"><type typename="$BOOLEAN$" typeStr="$BOOLEAN$" /></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class><Class name="Relation" access="public" isfactory="true" ldsrc="2181,2184"><Field name="Source" access="public"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Option" access="public"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Field name="Target" access="public" ldsrc="2183,2183"><type ispointer="true" typeStr="^_$STRING$"><dt typename="$STRING$" /><pi ref="true" /></type></Field><Inherits><c name="DotNET.LayerD.ZOECompiler.ClassfactoryBase" access="public" /></Inherits></Class></Namespace></DocumentBody></XPLDocument>