//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.ServiceReferenceStore {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceStore.IStore")]
    public interface IStore {
        
        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/Save", ReplyAction="http://tempuri.org/IStore/SaveResponse")]
        UtnEmall.Server.EntityModel.StoreEntity Save(UtnEmall.Server.EntityModel.StoreEntity storeEntity, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/Delete", ReplyAction="http://tempuri.org/IStore/DeleteResponse")]
        UtnEmall.Server.EntityModel.StoreEntity Delete(UtnEmall.Server.EntityModel.StoreEntity storeEntity, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetStore", ReplyAction="http://tempuri.org/IStore/GetStoreResponse")]
        UtnEmall.Server.EntityModel.StoreEntity GetStore(int id, bool loadRelation, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetAllStore", ReplyAction="http://tempuri.org/IStore/GetAllStoreResponse")]
        System.Collections.Generic.List<UtnEmall.Server.EntityModel.StoreEntity> GetAllStore(bool loadRelation, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetStoreWhere", ReplyAction="http://tempuri.org/IStore/GetStoreWhereResponse")]
        System.Collections.Generic.List<UtnEmall.Server.EntityModel.StoreEntity> GetStoreWhere(string propertyName, string expValue, bool loadRelation, UtnEmall.Server.Base.OperatorType operatorType, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetStoreWhereEqual", ReplyAction="http://tempuri.org/IStore/GetStoreWhereEqualResponse")]
        System.Collections.Generic.List<UtnEmall.Server.EntityModel.StoreEntity> GetStoreWhereEqual(string propertyName, string expValue, bool loadRelation, string session);

        [UtnEmall.Server.Core.ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/Validate", ReplyAction="http://tempuri.org/IStore/ValidateResponse")]
        bool Validate(UtnEmall.Server.EntityModel.StoreEntity store);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IStoreChannel : WebApplication.ServiceReferenceStore.IStore, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class StoreClient : System.ServiceModel.ClientBase<WebApplication.ServiceReferenceStore.IStore>, WebApplication.ServiceReferenceStore.IStore {
        
        public StoreClient() {
        }
        
        public StoreClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StoreClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UtnEmall.Server.EntityModel.StoreEntity Save(UtnEmall.Server.EntityModel.StoreEntity storeEntity, string session) {
            return base.Channel.Save(storeEntity, session);
        }
        
        public UtnEmall.Server.EntityModel.StoreEntity Delete(UtnEmall.Server.EntityModel.StoreEntity storeEntity, string session) {
            return base.Channel.Delete(storeEntity, session);
        }
        
        public UtnEmall.Server.EntityModel.StoreEntity GetStore(int id, bool loadRelation, string session) {
            return base.Channel.GetStore(id, loadRelation, session);
        }
        
        public System.Collections.Generic.List<UtnEmall.Server.EntityModel.StoreEntity> GetAllStore(bool loadRelation, string session) {
            return base.Channel.GetAllStore(loadRelation, session);
        }
        
        public System.Collections.Generic.List<UtnEmall.Server.EntityModel.StoreEntity> GetStoreWhere(string propertyName, string expValue, bool loadRelation, UtnEmall.Server.Base.OperatorType operatorType, string session) {
            return base.Channel.GetStoreWhere(propertyName, expValue, loadRelation, operatorType, session);
        }
        
        public System.Collections.Generic.List<UtnEmall.Server.EntityModel.StoreEntity> GetStoreWhereEqual(string propertyName, string expValue, bool loadRelation, string session) {
            return base.Channel.GetStoreWhereEqual(propertyName, expValue, loadRelation, session);
        }
        
        public bool Validate(UtnEmall.Server.EntityModel.StoreEntity store) {
            return base.Channel.Validate(store);
        }
    }
}
